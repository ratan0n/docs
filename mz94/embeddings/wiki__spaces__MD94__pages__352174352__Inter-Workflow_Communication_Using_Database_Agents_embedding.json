{
  "id": "wiki__spaces__MD94__pages__352174352__Inter-Workflow_Communication_Using_Database_Agents",
  "title": "Inter-Workflow Communication, Using Database Agents - MediationZone Documentation 9.4 - InfoZone",
  "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352174352/Inter-Workflow+Communication+Using+Database+Agents",
  "categories": [
    "space:MD94"
  ],
  "text": "Data propagates between workflows or MediationZone systems by utilizing a Database forwarding agent in conjunction with a Database collection agent. The exchange point for this propagation is a shared database table. Open When using the same table, the collection agent must ensure that it does not collect data that the forwarding agent is simultaneously feeding from its current batch. Note! Transfer of UDRs between workflows is ideally handled using Inter Workflow agents. The Database agent approach is useful when changing the content of UDRs. Another use is for passing MIM values and merging batches simultaneously. In the case of Inter Workflow agents, only the MIM values for the first (Header MIMs) and last batch (Trailer and Batch MIMs) are considered. Using Database agents, MIM values can be mapped into database columns. Pending Transaction Table The MediationZone database hosts a table where pending transactions are registered. A pending transaction refers to an ongoing population of a table by a Database forwarding agent, continuing from a Begin Batch to an End Batch. The purpose of this table is to ensure that Database collection agents avoid collecting pending data from the table that a Database forwarding agent is currently distributing to. The pending transaction table holds database names and table names. Therefore, before a collection session starts, the collector evaluates if any pending Transaction IDs are registered for the source database and table. If there are, rows matching the Transaction IDs will be excluded. In the image below, the Database collection agent will exclude all rows with transaction ID 187: Open A Database forwarding agent can be configured to target a stored procedure instead of a table directly. In such cases, the user must select the table that the stored procedure will populate (SP Target Table). This is necessary because the pending transaction table must contain the table name, not the SP name, to ensure that the selected table name in the Database collection agent can be matched Exchanging Storable Data All UDRs have a field named Storable . This field contains the complete UDR description and all its data. If UDRs have many fields or a complex structure to be exchanged, it may be suitable to store the content of the Storable field in the database. This way, the table would only need one column. The database type of that column must be RAW, LONG RAW, or BLOB. Note! The data capacity of the column types RAW, LONG RAW, and BLOB differs. Refer to the database documentation. For performance reasons, use the smallest type possible that fits the UDR content. When configuring the Database forwarding agent, the Storable field from the UDR is assigned to the table column. However, when collecting data, the column assignment must not be made to the Storable field. Instead, To UDR is selected in the Value Type field. When the Database collection agent detects a mapping of type To UDR , the selected UDR type is not consulted for what UDR type to create. The information about the UDR type will be found in the data of the column itself. Thus, if the UDR stored in the column is of another type than selected in the Source tab, the type to be distributed by the Database collection agent is the type found.",
  "chunks": [
    {
      "chunk_id": 1,
      "text": "Data propagates between workflows or MediationZone systems by utilizing a Database forwarding agent in conjunction with a Database collection agent. The exchange point for this propagation is a shared database table. Open When using the same table, the collection agent must ensure that it does not collect data that the forwarding agent is simultaneously feeding from its current batch. Note! Transfer of UDRs between workflows is ideally handled using Inter Workflow agents. The Database agent approach is useful when changing the content of UDRs. Another use is for passing MIM values and merging batches simultaneously. In the case of Inter Workflow agents, only the MIM values for the first (Header MIMs) and last batch (Trailer and Batch MIMs) are considered. Using Database agents, MIM values can be mapped into database columns. Pending Transaction Table The MediationZone database hosts a table where pending transactions are registered. A pending transaction refers to an ongoing population of a table by a Database forwarding agent, continuing from a Begin Batch to an End Batch. The purpose of this table is to ensure that Database collection agents avoid collecting pending data from the table that a Database forwarding agent is currently distributing to. The pending transaction table holds database names and table names. Therefore, before a collection session starts, the collector evaluates if any pending Transaction IDs are registered for the source database and table. If there are, rows matching the Transaction IDs will be excluded. In the image below, the Database collection agent will exclude all rows with transaction ID 187: Open A Database forwarding agent can be configured to target a stored procedure instead of a table directly. In such cases, the user must select the table that the stored procedure will populate (SP Target Table). This is necessary because the pending transaction table must contain the table name, not the SP name, to ensure that the selected table name in the Database collection agent can be matched Exchanging Storable Data All UDRs have a field named Storable . This field contains the complete UDR description and all its data. If UDRs have many fields or a complex structure to be exchanged, it may be suitable to store the content of the Storable field in the database. This way, the table would only need one column. The database type of that column must be RAW, LONG RAW, or BLOB. Note! The data capacity of the column types RAW, LONG RAW, and BLOB differs. Refer to the database documentation. For performance reasons, use the smallest type possible that fits the UDR content. When configuring the Database forwarding agent, the Storable field from the UDR is assigned to the table column. However, when collecting data, the column assignment must not be made to the Storable field. Instead, To UDR is selected in the Value Type field. When the Database collection agent detects a mapping of type To UDR , the selected UDR type is not consulted for what UDR type to create. The information about the UDR type will be found in the data of the column itself. Thus, if the UDR stored in the column is of another type than selected in the Source tab, the type to be distributed by the Database collection agent is the type found.",
      "title": "Inter-Workflow Communication, Using Database Agents - MediationZone Documentation 9.4 - InfoZone",
      "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352174352/Inter-Workflow+Communication+Using+Database+Agents",
      "word_count": 545,
      "char_count": 3289
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-24T04:21:09.141653",
    "word_count": 545,
    "char_count": 3289,
    "chunk_count": 1
  }
}