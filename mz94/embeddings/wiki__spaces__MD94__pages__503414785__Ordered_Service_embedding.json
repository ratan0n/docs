{
  "id": "wiki__spaces__MD94__pages__503414785__Ordered_Service",
  "title": "Ordered Service - MediationZone Documentation 9.4 - InfoZone",
  "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/503414785/Ordered+Service",
  "categories": [
    "space:MD94"
  ],
  "text": "Order Service is required by the Ordered Routing Queue Strategy. A function defined in APL code will extract values from any routed UDR or bytearray to decide which partition queue to add it to. Ordered Routing allows you to utilize multicore CPUs, but still have deterministic order. Configuring an Ordered Service Example - Ordered Routing Queue Strategy Scenario: When session updates from a collection point are encoded as a user-defined UDR type, Ordered.Subscriber.Update , the field 'id' contains the session ID. The example below shows how to extract this value and add it to the ordered.SessionIdentifier , which the queue strategy will use to determine the correct partition. import ultra.Ordered.Subscriber; void route(ordered.SessionIdentifier si, any input) { if(instanceOf(input, Update)) { Update u = (Update)input; ordered.addInteger(si, u.id); } } Multiple values can be added to the SessionIdentifier , it will calculate the hash based on them all after the route function returns. If there is more than one type routed into the workflow, there must be a longer if-else chain, with a clause for each type. Function Description Function Description ordered.addInteger(ordered.SessionIdentifier si, int i) Add the value of integer i to the SessionIdentifier ordered.addString(ordered.SessionIdentifier si, string s) Add the value of string s to the SessionIdentifier ordered.addByte(ordered.SessionIdentifier si, byte b) Add the value of byte b to the SessionIdentifier ordered.addBytes(ordered.SessionIdentifier si, bytearray ba) Add the value of bytearray ba to the SessionIdentifier ordered.addByteRange(ordered.SessionIdentifier si, bytearray bs, int offset, int len) Add the values of bytearray ba from offset and the next len bytes to the SessionIdentifier ordered.setPartition(ordered.SessionIdentifier si, int partition) Alternatively, if more control over partition selection is wanted one can set the partition id explicitly, this will override any values added to the SessionIdentifier.",
  "chunks": [
    {
      "chunk_id": 1,
      "text": "Order Service is required by the Ordered Routing Queue Strategy. A function defined in APL code will extract values from any routed UDR or bytearray to decide which partition queue to add it to. Ordered Routing allows you to utilize multicore CPUs, but still have deterministic order. Configuring an Ordered Service Example - Ordered Routing Queue Strategy Scenario: When session updates from a collection point are encoded as a user-defined UDR type, Ordered.Subscriber.Update , the field 'id' contains the session ID. The example below shows how to extract this value and add it to the ordered.SessionIdentifier , which the queue strategy will use to determine the correct partition. import ultra.Ordered.Subscriber; void route(ordered.SessionIdentifier si, any input) { if(instanceOf(input, Update)) { Update u = (Update)input; ordered.addInteger(si, u.id); } } Multiple values can be added to the SessionIdentifier , it will calculate the hash based on them all after the route function returns. If there is more than one type routed into the workflow, there must be a longer if-else chain, with a clause for each type. Function Description Function Description ordered.addInteger(ordered.SessionIdentifier si, int i) Add the value of integer i to the SessionIdentifier ordered.addString(ordered.SessionIdentifier si, string s) Add the value of string s to the SessionIdentifier ordered.addByte(ordered.SessionIdentifier si, byte b) Add the value of byte b to the SessionIdentifier ordered.addBytes(ordered.SessionIdentifier si, bytearray ba) Add the value of bytearray ba to the SessionIdentifier ordered.addByteRange(ordered.SessionIdentifier si, bytearray bs, int offset, int len) Add the values of bytearray ba from offset and the next len bytes to the SessionIdentifier ordered.setPartition(ordered.SessionIdentifier si, int partition) Alternatively, if more control over partition selection is wanted one can set the partition id explicitly, this will override any values added to the SessionIdentifier.",
      "title": "Ordered Service - MediationZone Documentation 9.4 - InfoZone",
      "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/503414785/Ordered+Service",
      "word_count": 283,
      "char_count": 2013
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-24T04:19:35.987019",
    "word_count": 283,
    "char_count": 2013,
    "chunk_count": 1
  }
}