{
  "id": "wiki__spaces__MD94__pages__472121478__Backup_and_Upgrade_Preparations_Steps_for_Platform_when_Upgrading_from_8.3",
  "title": "Backup and Upgrade Preparations Steps for Platform when Upgrading from 8.3 - MediationZone Documentation 9.4 - InfoZone",
  "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/472121478/Backup+and+Upgrade+Preparations+Steps+for+Platform+when+Upgrading+from+8.3",
  "categories": [
    "space:MD94"
  ],
  "text": "Before starting the upgrade, ensure to make the following preparations: Backup your MediationZone configurations: In Desktop, use System Export to export a ZIP file containing all configurations, or use the following command. mzsh mzadmin/<password> systemexport <directory>/<backup filename>.zip Shutdown the system. mzsh system stop mzsh shutdown platform This will shut down the platform and all ECs. If you have disconnected ECSAs, use this script instead (it will omit the disconnected ECSAs). mzsh topo show status > output.txt while IFS= read -r line; do pico=$(echo \"$line\" | awk '{ print $4 }') container=$(echo \"$line\" | awk '{ print $2 }') status=$(echo \"$line\" | awk '{ print $8 }') if [[ \"$status\" == *running* ]]; then mzsh system stop \"topo://container:$container/pico:$pico\" fi done < output.txt Make a backup. This step is an additional safety measure to ensure that if both the upgrade and rollback fail, you can restore the system using the backup. Backup of the Database (MZDB): Create a backup of your MZDB and save it in a designated backup directory. For detailed instructions on performing an online backup, see Backup and Disaster Recovery Procedures . Backup of MZ_HOME (Essential for Rollback): To create a backup of your MZ_HOME, use the following command: cd $MZ_HOME/../ tar -zcvf mzhome_backup.tgz <MZ_HOME directory> mv mzhome_backup.tgz <backup directory> Note! As the system is saving all upgrade history, you might want to exclude the archives from old upgrades (8.0, 8.1, etc): $MZ_HOME/upgrade_history. Backup files of features that use files as back-end (Aggregation, Inter Workflow, Duplicate File Detection, Duplicate UDR Detection, Error Correction System). cd <DIR> tar -zcvf <BACKUP>.tgz <DIR> mv <BACKUP>.tgz <backup directory> Ensure Java compatibility: If your MediationZone version is 8.3 or lower and uses Java 8, install either Oracle JDK 17 or OpenJDK 17 on the servers hosting the Platform Container and Execution Containers. To check the MediationZone version: Click the Help button and select About . Verify system requirements: Ensure that the operating system, databases, and other third parties meet the system requirements . If an upgrade is required for the OS, database, or other third-party, complete it before upgrading MediationZone. This must be done for all machines hosting the system. Set environment variables. Variable Description Variable Description MZ_HOME Specifies where the software is installed. JAVA_HOME Specifies where the JDK is installed. PATH Must include $JAVA_HOME/bin:$MZ_HOME/bin . Example - Setting environment variables export MZ_HOME=/opt/mz export JAVA_HOME=/opt/jdk/jdk-17.0.2 export PATH=$JAVA_HOME/bin:$MZ_HOME/bin:$PATH Prepare the staging directory by: Creating a dedicated directory for unpacking this and future releases (referred to as the staging directory). Ensuring it is separate from the MZ_HOME directory. Move and cxtract the installer byMove the installer *.tgz file from your release delivery into the staging directory. Navigate to the staging directory and unpack the file using: tar xvzf <filename>.tgz After unpacking, a new directory is created within the staging directory, containing the software to be installed. In these instructions, this directory is referred to as the release content directory. Copy The MediationZone license file into the release content directory . cp mz.license <release content directory> Prepare the Installation by navigating to the release content directory and prepare the install.xml file by running the following command: cd <release content directory> ./setup.sh prepare The *.mzp packages have now been extracted, and the install.xml has been extracted into the release content directory . The install.xml file will automatically be populated with information from your existing installation. Copy the ported DTK Extensions from step Pre-Upgrade: Preparation for Upgrading from 8.3 to 9.4 (If Applicable) and place your DTK extensions (if any) in the following directory: cp <DTK extension>.mzp <release content directory>/release/packages Update the following properties in install.xml: Remove the following obsolete JVM arguments: If the current installation includes obsolete JVM arguments that are no longer supported in Java 17, they should be removed, and the JVM arguments section should be updated with compatible options. See the Java 17 documentation for details on  Obsolete  and  Removed  Java options since Java 8. For JVM arguments configuration, see Managing Picos with Topo . If you have a High Availability setup, you are advised to deactivate the failover functionality in the HA cluster daemon. You must ensure that no HA activities can impede the upgrade procedure.",
  "chunks": [
    {
      "chunk_id": 1,
      "text": "Before starting the upgrade, ensure to make the following preparations: Backup your MediationZone configurations: In Desktop, use System Export to export a ZIP file containing all configurations, or use the following command. mzsh mzadmin/<password> systemexport <directory>/<backup filename>.zip Shutdown the system. mzsh system stop mzsh shutdown platform This will shut down the platform and all ECs. If you have disconnected ECSAs, use this script instead (it will omit the disconnected ECSAs). mzsh topo show status > output.txt while IFS= read -r line; do pico=$(echo \"$line\" | awk '{ print $4 }') container=$(echo \"$line\" | awk '{ print $2 }') status=$(echo \"$line\" | awk '{ print $8 }') if [[ \"$status\" == *running* ]]; then mzsh system stop \"topo://container:$container/pico:$pico\" fi done < output.txt Make a backup. This step is an additional safety measure to ensure that if both the upgrade and rollback fail, you can restore the system using the backup. Backup of the Database (MZDB): Create a backup of your MZDB and save it in a designated backup directory. For detailed instructions on performing an online backup, see Backup and Disaster Recovery Procedures . Backup of MZ_HOME (Essential for Rollback): To create a backup of your MZ_HOME, use the following command: cd $MZ_HOME/../ tar -zcvf mzhome_backup.tgz <MZ_HOME directory> mv mzhome_backup.tgz <backup directory> Note! As the system is saving all upgrade history, you might want to exclude the archives from old upgrades (8.0, 8.1, etc): $MZ_HOME/upgrade_history. Backup files of features that use files as back-end (Aggregation, Inter Workflow, Duplicate File Detection, Duplicate UDR Detection, Error Correction System). cd <DIR> tar -zcvf <BACKUP>.tgz <DIR> mv <BACKUP>.tgz <backup directory> Ensure Java compatibility: If your MediationZone version is 8.3 or lower and uses Java 8, install either Oracle JDK 17 or OpenJDK 17 on the servers hosting the Platform Container and Execution Containers. To check the MediationZone version: Click the Help button and select About . Verify system requirements: Ensure that the operating system, databases, and other third parties meet the system requirements . If an upgrade is required for the OS, database, or other third-party, complete it before upgrading MediationZone. This must be done for all machines hosting the system. Set environment variables. Variable Description Variable Description MZ_HOME Specifies where the software is installed. JAVA_HOME Specifies where the JDK is installed. PATH Must include $JAVA_HOME/bin:$MZ_HOME/bin . Example - Setting environment variables export MZ_HOME=/opt/mz export JAVA_HOME=/opt/jdk/jdk-17.0.2 export PATH=$JAVA_HOME/bin:$MZ_HOME/bin:$PATH Prepare the staging directory by: Creating a dedicated directory for unpacking this and future releases (referred to as the staging directory). Ensuring it is separate from the MZ_HOME directory. Move and cxtract the installer byMove the installer *.tgz file from your release delivery into the staging directory. Navigate to the staging directory and unpack the file using: tar xvzf <filename>.tgz After unpacking, a new directory is created within the staging directory, containing the software to be installed. In these instructions, this directory is referred to as the release content directory. Copy The MediationZone license file into the release content directory . cp mz.license <release content directory> Prepare the Installation by navigating to the release content directory and prepare the install.xml file by running the following command: cd <release content directory> ./setup.sh prepare The *.mzp packages have now been extracted, and the install.xml has been extracted into the release content directory . The install.xml file will automatically be populated with information from your existing installation. Copy the ported DTK Extensions from step Pre-Upgrade: Preparation for Upgrading from 8.3 to 9.4 (If Applicable) and place your DTK extensions (if any) in the following directory: cp <DTK extension>.mzp <release content directory>/release/packages Update the following properties in install.xml: Remove the following obsolete JVM arguments: If the current installation includes obsolete JVM arguments that are no longer supported in Java 17, they should be removed, and the JVM arguments section should be updated with compatible options. See the Java 17 documentation for details on  Obsolete  and  Removed  Java options since Java 8. For JVM arguments configuration, see Managing Picos with Topo . If you have a High Availability setup, you are advised to deactivate the failover functionality in the HA cluster daemon. You must ensure that no HA activities can impede the upgrade procedure.",
      "title": "Backup and Upgrade Preparations Steps for Platform when Upgrading from 8.3 - MediationZone Documentation 9.4 - InfoZone",
      "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/472121478/Backup+and+Upgrade+Preparations+Steps+for+Platform+when+Upgrading+from+8.3",
      "word_count": 692,
      "char_count": 4733
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-24T04:14:56.893253",
    "word_count": 692,
    "char_count": 4733,
    "chunk_count": 1
  }
}