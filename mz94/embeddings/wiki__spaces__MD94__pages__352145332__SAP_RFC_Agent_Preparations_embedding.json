{
  "id": "wiki__spaces__MD94__pages__352145332__SAP_RFC_Agent_Preparations",
  "title": "SAP RFC Agent Preparations - MediationZone Documentation 9.4 - InfoZone",
  "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352145332/SAP+RFC+Agent+Preparations",
  "categories": [
    "space:MD94"
  ],
  "text": "This document contains the steps to set up the SAP JCo library's jar file in Platform and Execution Container. Note! If the common/lib/native directory does not exist in your MZ_HOME, you can create the directory before running the command in Step 2 . To be able to use the SAP RFC profile and processing agent: Extract the SAP JCo library binaries: tar xvfz sapjco3-<platform_version>.tgz Add the extracted file sapjco3.jar to the classpath for the jar files for the relevant EC and the Platform. In the example below, the SAP jar files are located in MZ_HOME/3pp. The configuration includes the jar files required to use any of the SAP CC agents, and the Platform database is Derby. Ensure that you include existing paths, so that they are not overwritten. $ mzsh topo get topo://container:<container>/pico:<ec>/obj:config.classpath $ mzsh topo get topo://container:<container>/pico:platform/obj:config.classpath Create a jni folder in the MZ_HOME directory in both the Platform and Execution Container. Place the libsapjco3.so file in both the MZ_HOME/jni directories. Add the MZ_HOME/jni directory as an additional library file along with MZ_HOME/common/lib/native using the following topo command. mzsh topo set topo://container:main1/val:common.java.library.path '${mz.home}\"/common/lib/native:\"${mz.home}\"/jni\"' Example - Setting classpath EC (ec1): $ mzsh topo set topo://container:main1/pico:ec1/obj:config.classpath.jars ' [\"lib/picostart.jar\", \"3pp/common_message.jar\", \"3pp/common_util.jar\", \"3pp/core_chargingplan.jar\", \"3pp/core_chargingprocess.jar\", \"3pp/core_client.jar\", \"3pp/logging.jar\", \"3pp/sap.com~tc~logging~java.jar\", \"3pp/sapjco3.jar\"]' Platform: $ mzsh topo set topo://container:main1/pico:platform/obj:config.classpath.jars ' [\"lib/derby.jar\", \"lib/picostart.jar\", \"lib/javassist.jar\", \"lib/codeserver.jar\", \"lib/codeserver_common.jar\", \"3pp/sapjco3.jar\"]'",
  "chunks": [
    {
      "chunk_id": 1,
      "text": "This document contains the steps to set up the SAP JCo library's jar file in Platform and Execution Container. Note! If the common/lib/native directory does not exist in your MZ_HOME, you can create the directory before running the command in Step 2 . To be able to use the SAP RFC profile and processing agent: Extract the SAP JCo library binaries: tar xvfz sapjco3-<platform_version>.tgz Add the extracted file sapjco3.jar to the classpath for the jar files for the relevant EC and the Platform. In the example below, the SAP jar files are located in MZ_HOME/3pp. The configuration includes the jar files required to use any of the SAP CC agents, and the Platform database is Derby. Ensure that you include existing paths, so that they are not overwritten. $ mzsh topo get topo://container:<container>/pico:<ec>/obj:config.classpath $ mzsh topo get topo://container:<container>/pico:platform/obj:config.classpath Create a jni folder in the MZ_HOME directory in both the Platform and Execution Container. Place the libsapjco3.so file in both the MZ_HOME/jni directories. Add the MZ_HOME/jni directory as an additional library file along with MZ_HOME/common/lib/native using the following topo command. mzsh topo set topo://container:main1/val:common.java.library.path '${mz.home}\"/common/lib/native:\"${mz.home}\"/jni\"' Example - Setting classpath EC (ec1): $ mzsh topo set topo://container:main1/pico:ec1/obj:config.classpath.jars ' [\"lib/picostart.jar\", \"3pp/common_message.jar\", \"3pp/common_util.jar\", \"3pp/core_chargingplan.jar\", \"3pp/core_chargingprocess.jar\", \"3pp/core_client.jar\", \"3pp/logging.jar\", \"3pp/sap.com~tc~logging~java.jar\", \"3pp/sapjco3.jar\"]' Platform: $ mzsh topo set topo://container:main1/pico:platform/obj:config.classpath.jars ' [\"lib/derby.jar\", \"lib/picostart.jar\", \"lib/javassist.jar\", \"lib/codeserver.jar\", \"lib/codeserver_common.jar\", \"3pp/sapjco3.jar\"]'",
      "title": "SAP RFC Agent Preparations - MediationZone Documentation 9.4 - InfoZone",
      "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352145332/SAP+RFC+Agent+Preparations",
      "word_count": 218,
      "char_count": 1883
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-24T03:55:14.085382",
    "word_count": 218,
    "char_count": 1883,
    "chunk_count": 1
  }
}