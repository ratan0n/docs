{
  "id": "wiki__spaces__MD94__pages__352082326__Creating_Server_Keystore_and_Certificate",
  "title": "Creating Server Keystore and Certificate - MediationZone Documentation 9.4 - InfoZone",
  "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352082326/Creating+Server+Keystore+and+Certificate",
  "categories": [
    "space:MD94"
  ],
  "text": "After generating the CA, the next step is to generate a key pair for the server/service. Run the following command: $ keytool -genkey -alias server -keyalg RSA -keystore ./Server.jks -storetype PKCS12 alias = name of the key, for example, server keystore = name of the keystore, for example, server.jks Note! When prompted for first and last name, the hostname where the certificate is valid should be entered, for example, localhost. Other values can be anything. Generate a Certificate Signing Request (CSR) so that we can get server's certificate signed using a CA. $ keytool -certreq -alias server -keystore Server.jks -file Server.csr Get the certificate signed by our the CA, Test CA in this example. See Setting Up a Certificate Authority on how to set up a CA. $ openssl x509 -CA caroot.cer -CAkey cakey.pem -CAserial serial.txt -req -in Server.csr -out Server.cer -days 365 Note! CA , CAkey and CAserial are files generated when setting up the CA.When prompted for first and last name, the hostname where the certificate is valid should be entered, for example, localhost. Other values can be anything. Import the Test CA root self signed certificate in server key store as a trusted certificate. $ keytool -import -alias TestCA -file caroot.cer -keystore Server.jks Import server's certificate signed by Test CA in server key store with the same alias name that was used to generate the key pair during genkey. $ keytool -import -alias server -file Server.cer -keystore Server.jks",
  "chunks": [
    {
      "chunk_id": 1,
      "text": "After generating the CA, the next step is to generate a key pair for the server/service. Run the following command: $ keytool -genkey -alias server -keyalg RSA -keystore ./Server.jks -storetype PKCS12 alias = name of the key, for example, server keystore = name of the keystore, for example, server.jks Note! When prompted for first and last name, the hostname where the certificate is valid should be entered, for example, localhost. Other values can be anything. Generate a Certificate Signing Request (CSR) so that we can get server's certificate signed using a CA. $ keytool -certreq -alias server -keystore Server.jks -file Server.csr Get the certificate signed by our the CA, Test CA in this example. See Setting Up a Certificate Authority on how to set up a CA. $ openssl x509 -CA caroot.cer -CAkey cakey.pem -CAserial serial.txt -req -in Server.csr -out Server.cer -days 365 Note! CA , CAkey and CAserial are files generated when setting up the CA.When prompted for first and last name, the hostname where the certificate is valid should be entered, for example, localhost. Other values can be anything. Import the Test CA root self signed certificate in server key store as a trusted certificate. $ keytool -import -alias TestCA -file caroot.cer -keystore Server.jks Import server's certificate signed by Test CA in server key store with the same alias name that was used to generate the key pair during genkey. $ keytool -import -alias server -file Server.cer -keystore Server.jks",
      "title": "Creating Server Keystore and Certificate - MediationZone Documentation 9.4 - InfoZone",
      "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352082326/Creating+Server+Keystore+and+Certificate",
      "word_count": 241,
      "char_count": 1490
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-24T04:51:10.598075",
    "word_count": 241,
    "char_count": 1490,
    "chunk_count": 1
  }
}