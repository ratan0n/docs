{
  "id": "wiki__spaces__MD94__pages__502759560__Parameter_Migration_Preparation_when_Upgrading_from_8.3",
  "title": "Parameter Migration Preparation when Upgrading from 8.3 - MediationZone Documentation 9.4 - InfoZone",
  "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/502759560/Parameter+Migration+Preparation+when+Upgrading+from+8.3",
  "categories": [
    "space:MD94"
  ],
  "text": "Runtime data cannot be migrated to the new deployment, but some use cases may depend on variables that have been persisted in the currently running system: Persistent variables in APL Persistent variables in Python Next in line file sequence numbers Find out if there are such configurations in your export. If the value shoud be migrated, shut down that use case, find out the value, then start the use case in the new system once the variable has been updated. See below for more details. Persistent Variables in APL or Python If you have used persistent for any variables in APL and want to keep the current value in your new system, use these steps: Find out which workflows and nodes that use persistent variables by searching your configuration export folder. > grep -rwl \"persistent\" <export folder> --exclude *.log --exclude *.properties Use debug to get the current value. Stop the running workflows (if debug is not enabled). Enable debug to get the current value of the persistent variables. In the new system, edit the workflows that use the persistent variables in a way that suits the logic in the APL. The assigned value on declaration of a persistent variable is only set the first time the Workflow executes, depending on the type of the variable the value from old system can be set at declaration. Integer example, value 50 can be from the old system and it will only be used if the Workflow have never been executed: persistent int p = 50; File Sequence Numbers If you have used Enable Filename Sequence for any of the file based collection agents and you want to resume processing at the accurate position in your new system: Find out which workflows that use File Sequence Number by search in a configuration export folder: grep -rw \"nextSeqNoValue\" <export folder> --exclude *.log --exclude *.properties | grep -v '\"nextSeqNoValue\": -1' Get the current values of the File Sequence Number in the old system: Debug the filename collected. These messages are automatically part of the debug. Workflow table for the Template. Other means, for instance your Audit Tables, Archives etc. Update the File Sequence Number in the new system: Use the user interface.",
  "chunks": [
    {
      "chunk_id": 1,
      "text": "Runtime data cannot be migrated to the new deployment, but some use cases may depend on variables that have been persisted in the currently running system: Persistent variables in APL Persistent variables in Python Next in line file sequence numbers Find out if there are such configurations in your export. If the value shoud be migrated, shut down that use case, find out the value, then start the use case in the new system once the variable has been updated. See below for more details. Persistent Variables in APL or Python If you have used persistent for any variables in APL and want to keep the current value in your new system, use these steps: Find out which workflows and nodes that use persistent variables by searching your configuration export folder. > grep -rwl \"persistent\" <export folder> --exclude *.log --exclude *.properties Use debug to get the current value. Stop the running workflows (if debug is not enabled). Enable debug to get the current value of the persistent variables. In the new system, edit the workflows that use the persistent variables in a way that suits the logic in the APL. The assigned value on declaration of a persistent variable is only set the first time the Workflow executes, depending on the type of the variable the value from old system can be set at declaration. Integer example, value 50 can be from the old system and it will only be used if the Workflow have never been executed: persistent int p = 50; File Sequence Numbers If you have used Enable Filename Sequence for any of the file based collection agents and you want to resume processing at the accurate position in your new system: Find out which workflows that use File Sequence Number by search in a configuration export folder: grep -rw \"nextSeqNoValue\" <export folder> --exclude *.log --exclude *.properties | grep -v '\"nextSeqNoValue\": -1' Get the current values of the File Sequence Number in the old system: Debug the filename collected. These messages are automatically part of the debug. Workflow table for the Template. Other means, for instance your Audit Tables, Archives etc. Update the File Sequence Number in the new system: Use the user interface.",
      "title": "Parameter Migration Preparation when Upgrading from 8.3 - MediationZone Documentation 9.4 - InfoZone",
      "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/502759560/Parameter+Migration+Preparation+when+Upgrading+from+8.3",
      "word_count": 367,
      "char_count": 2178
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-24T04:14:43.922422",
    "word_count": 367,
    "char_count": 2178,
    "chunk_count": 1
  }
}