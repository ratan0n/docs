[
  {
    "chunk_id": 1,
    "text": "The real-time collector implements the DRRealtimeThreadAgent class. As previously described, the real-time collector may choose to implement the consume method to handle request/response mechanisms. To tell the Workflow Editor that this capability exists, the Inspectable for the collector must return the response UDR Type in the getInputTypes method. When you create an agent that can use a \"lazy\" method of decoding if an error occurs during lazy decoding in the agent that includes APL code configuration, a DRUnwindException is thrown. This exception must be caught to prevent the workflow from aborting. To catch a DRUnwindException in the collector agent, you can use the function block provided below. Alternatively, you can catch this exception, by adding the try-catch function block to the APL code included in the workflow. For further information on try-catch , see Function Blocks . catch(final DRUnwindException e){ if(e.getAction() == DRUnwindException.CONTINUE) { logger.log(Level.WARNING, \"An error message\", e); } else { throw e; } }",
    "title": "DRRealtimeCollector - MediationZone Documentation 9.4 - InfoZone",
    "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352116813/DRRealtimeCollector",
    "word_count": 156,
    "char_count": 1052
  }
]