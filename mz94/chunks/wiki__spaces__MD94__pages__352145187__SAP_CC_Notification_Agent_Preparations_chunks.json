[
  {
    "chunk_id": 1,
    "text": "The relevant jar files required for the preparations must be obtained from the SAP CC server provider. Jar Files for SAP CC SDK The following jar files are required by the SAP CC Online collection agent : common_message.jar common_util.jar core_chargingplan.jar core_chargingprocess.jar core_client.jar jaxb-api-2.3.1.jar jaxb-core-2.3.0.1.jar jaxb-impl-2.3.8.jar logging.jar sap.com~tc~logging~java.jar Note! The version of SAP CC client JAR files must match the SAP CC core system (i.e the back end servers) version. The classpaths for the jar files are specified for each EC. In the example below, the SAP jar files are located in MZ_HOME/3pp. Note! Ensure that you include existing paths, so that they are not overwritten. $ mzsh topo get topo://container:<container>/pico:<ec>/obj:config.classpath Example - Setting classpath $ mzsh topo set topo://container:<container>/pico:<ec name>/obj:config.classpath.jars ' [\"lib/picostart.jar\", \"3pp/common_message.jar\", \"3pp/common_util.jar\", \"3pp/core_chargingplan.jar\", \"3pp/core_chargingprocess.jar\", \"3pp/core_client.jar\", \"3pp/jaxb-api-2.3.1.jar\", \"3pp/jaxb-core-2.3.0.1.jar\", \"3pp/jaxb-impl-2.3.8.jar\", \"3pp/logging.jar\", \"3pp/sap.com~tc~logging~java.jar\"]' After the classpath has been set, the jar file should be manually distributed to be in place when the EC is started. The agent can be configured for secure communication via TLS. This requires a keystore be created for each EC host. For more information about setting up secure communication, refer to SAP CC Secured Connection .",
    "title": "SAP CC Notification Agent Preparations - MediationZone Documentation 9.4 - InfoZone",
    "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352145187/SAP+CC+Notification+Agent+Preparations",
    "word_count": 189,
    "char_count": 1540
  }
]