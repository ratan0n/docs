[
  {
    "chunk_id": 1,
    "text": "Input/Output Data The input/output data is the type of data an agent expects and delivers. The agent produces UDRs or bytearray types, depending on the code since UDRs may be dynamically created. It consumes any of the types selected in the UDR Types list. MIM The Aggregation agent publishes different MIM parameters depending on the storage selected in the Aggregation profile. For information about the MIM and a list of the general MIM parameters, see Administration and Management in Legacy Desktop . Publishes File Storage and SQL Storage The MIM parameters listed in this section are applicable when File Storage or SQL Storage is selected in the Aggregation profile. The values of the MIM parameters below are reset when the EC is started. MIM Parameter Description MIM Parameter Description Created Session Count This MIM parameter contains the number of sessions created. Created Session Count is of the long type and is defined as a global MIM context type. You can reset the value by using resetCounters via a JMX client. Online Session Count This MIM parameter contains the number of sessions cached in memory. Online Session Count is of the int type and is defined as a global MIM context type. Session Cache Hit Count When an already existing session is read from the cache instead of disk, a cache hit is counted. This MIM parameter contains the number of cache hits. Session Cache Hit Count is of the long type and is defined as a global MIM context type. You can reset the value by using resetCounters via a JMX client. Session Cache Miss Count When an already existing session is requested and the Aggregation profile cannot read the session information from the cache and instead reads the session information from disk, a cache miss is indicated. If a non-existing session is requested, this will not be counted as a cache miss. This MIM parameter contains the number of cache misses counted by the Aggregation profile. Session Cache Miss Count is of the long type and is defined as a global MIM context type. You can reset the value by using resetCounters via a JMX client. Session Count This MIM parameter contains the number of sessions in storage on the file system. Session Count is of the int type and is defined as a global MIM context type. Couchbase Storage and Redis Storage The MIM parameters listed in this section are applicable when Couchbase or Redis is selected in the Aggregation profile. The values of the MIM parameters below are reset when the workflow is started. MIM Parameter Description MIM Parameter Description Created Session Count This MIM parameter contains the number of sessions created. Created Session Count is of the long type and is defined as a global MIM context type. Session Remove Count This MIM parameter contains the number of sessions removed. Session Remove Count is of the long type and is defined as a global MIM context type. Mirror Attempt Count This MIM parameter contains the total number of attempts to retrieve a stored mirror session. Mirror Attempt Count is of the long type and is defined as a global MIM context type. Mirror Error Count This MIM parameter contains the number of failed attempts to retrieve a stored mirror session, where the failure was caused by one or more errors. Mirror Error Count is of the long type and is defined as a global MIM context type. This counter is reset each time the workflow is started. Mirror Found Count This MIM parameter contains the number of successful attempts to retrieve a stored mirror session. Mirror Found Count is of the long type and is defined as a global MIM context type. Mirror Not Found Count This MIM parameter contains the number of attempts to retrieve a stored mirror session that did not exist. Mirror Not Found Count is of the long type and is defined as a global MIM context type. Mirror Latency This MIM parameter contains comma separated counters that each contains the number of mirror session retrieval attempts for a specific latency interval. Attempts that failed due to errors are not counted. The parameter contains 20 counters for a series of 100 ms intervals. The first interval is from 0 to 99 ms and the last interval is from 1900 ms and up. Example - Mirror Latency The value 1000,100,0,0,0,0,0,0,0,0,0,0,0,0,1 should be interpreted as follows: There are 1000 mirror session retrieval attempts with a latency of 99 ms or less. There are 100 mirror session retrieval attempts with a latency of 100 ms to 199 ms. There is one mirror session retrieval attempt with a latency of 1999 ms or more. Mirror Latency is of the String type and is defined as a global MIM context type. Session Timeout Count This MIM parameter contains the number sessions that has timed out. Session Timeout Count is of the long type and is defined as a global MIM context type. Session Timeout Attempt Count Multiple timeout threads may read the same session data, but only one of them will perform an update. If a thread reads a session that has already been updated, it will be counted as an attempt. This MIM parameter contains the number of attempts. Session Timeout Attempt Count is of the long type and is defined as a global MIM context type. Session Timeout Latency This MIM parameter contains comma separated counters that each contains the number of sessions for a specific timeout latency interval i e the difference between the actual timeout time and the expected timeout time. The parameter contains 15 counters for a series of one-minute intervals. The first interval is from 0 to 1 minutes and the last interval is from 14 minutes and up. Example - Session Timeout Latency The value 1000,100,0,0,0,0,0,0,0,0,0,0,0,0,1 should be interpreted as follows: There are 1000 sessions with a timeout latency that is less than one minute. There are 100 sessions with a timeout latency of one to two minutes. There is one session with a timeout latency of 14 minutes or more. Session Timeout Latency is of the String type and is defined as a global MIM context type. Slowest Create This MIM parameter contains the duration of the slowest successful create operation in Couchbase/Redis. The duration is counted in milliseconds and the initial value is -1. Slowest Create is of the long type and is defined as a global MIM context type. Slowest Delete This MIM parameter contains the duration of the slowest successful delete operation in Couchbase/Redis. The duration is counted in milliseconds and the initial value is -1. Slowest Delete is of the long type and is defined as a global MIM context type. Slowest Read This MIM parameter contains the duration of the slowest successful read operation in Couchbase/Redis. The duration is counted in milliseconds and the initial value is -1. Slowest Read is of the long type and is defined as a global MIM context type. Slowest Update This MIM parameter contains the duration of the slowest successful update operation in Couchbase/Redis. The duration is counted in milliseconds and the initial value is -1. Slowest Update is of the long type and is defined as a global MIM context type. Total Number Of Create Count This MIM parameter contains the number of successful create operations in Couchbase/Redis. A create operation is considered successful if it can be performed without errors. Total Number Of Create Count is of the long type and is defined as a global MIM context type. Total Number Of Delete Count This MIM parameter contains the number of successful delete operations in Couchbase/Redis. A delete operation is considered successful even if Couchbase returns certain types of errors, i e if data is locked. A delete operation is considered failed if an exception occurs in the internal Couchbase client, if there are concurrent edits (due to optimistic locking), or if a key cannot be found. Total Number Of Delete Count is of the long type and is defined as a global MIM context type. Total Number Of Read Count This MIM parameter contains the number of successful read operations in Couchbase/Redis. A read operation is considered successful even if Couchbase returns certain types of errors, i e if data is locked or a key cannot be found. Total Number Of Read Count is of the long type and is defined as a global MIM context type. Total Number Of Status Locked Read Count This MIM parameter contains the number of successful read operations that resulted in errors related to locked data. Total Number Of Status Locked Read Count is of the long type and is defined as a global MIM context type. Total Number Of Status Read Count This MIM parameter contains the number of successful read operations in Couchbase/Redis that resulted in errors. Errors related to locked data and non-existent keys are not accounted for. Total Number Of Status Read Count is of the long type and is defined as a global MIM context type. Total Number Of Status Update Count This MIM parameter contains the number of successful update operations in Couchbase/Redis that resulted in errors. Errors related to locked data are not accounted for. Total Number Of Update Count is of the long type and is defined as a global MIM context type. Total Number Of Update Count This MIM parameter contains the number of successful update operations in Couchbase/Redis that did not result in errors. Total Number Of Update Count is of the long type and is defined as a global MIM context type. Total Number Of Failed Create Count This MIM parameter contains the number of unsuccessful create operations in Couchbase/Redis. A create operation is considered failed if it cannot be performed without errors. Total Number Of Failed Create Count is of the long type and is defined as a global MIM context type. Total Number Of Failed Delete Count This MIM parameter contains the number of unsuccessful delete operations in Couchbase/Redis. A delete operation is considered failed if an exception occurs in the internal Couchbase client, if there are concurrent edits (due to optimistic locking), or if a key cannot be found. Total Number Of Failed Delete Count is of the long type and is defined as a global MIM context type. Total Number Of Failed Read Count This MIM parameter contains the number of unsuccessful read operations in Couchbase/Redis. A read operation is considered failed if an exception occurs in the internal Couchbase client. Total Number Of Failed Read Count is of the long type and is defined as a global MIM context type. Total Number Of Failed Update Count This MIM parameter contains the number of unsuccessful update operations in Couchbase/Redis. An update operation is considered failed if an exception occurs in the internal Couchbase client, there are concurrent edits (due to optimistic locking), or a key cannot be found. Total Number Of Failed Update Count is of the long type and is defined as a global MIM context type. Elasticsearch Storage The MIM parameters listed in this section are applicable when Elasticsearch is selected in the Aggregation profile. The values of the MIM parameters below are reset when the workflow is started. MIM Parameter Description MIM Parameter Description Created Session Count This MIM parameter contains the number of sessions created. Created Session Count is of the long type and is defined as a global MIM context type. You can reset the value by using resetCounters via a JMX client. Online Session Count For Elasticsearch, the value for this MIM parameter is always 0. This MIM parameter is retained for Elasticsearch to retain backward compatibility for workflows created with File Storage. Online Session Count is of the int type and is defined as a global MIM context type. Session Cache Hit Count When an already existing session is read from the cache instead of disk, a cache hit is counted. For Elasticsearch, the value for this MIM parameter is always 0. This MIM parameter is retained for Elasticsearch to retain backward compatibility for workflows created with File Storage. Session Cache Hit Count is of the long type and is defined as a global MIM context type. You can reset the value by using resetCounters via a JMX client. Session Cache Miss Count When an already existing session is requested and the Aggregation profile cannot read the session information from the cache and instead reads the session information from disk, a cache miss is indicated. If a non-existing session is requested, this will not be counted as a cache miss. For Elasticsearch, the value for this MIM parameter is always 0. This MIM parameter is retained for Elasticsearch to retain backward compatibility for workflows created with File Storage. Session Cache Miss Count is of the long type and is defined as a global MIM context type. You can reset the value by using resetCounters via a JMX client. Session Count This MIM parameter contains the number of sessions in storage on the file system. Session Count is of the int type and is defined as a global MIM context type. Accessed MIMs The agent does not itself access any MIM resources. However, APL offers the possibility of both publishing and accessing MIM resources and values.",
    "title": "Aggregation Agent Input/Output Data and MIM - MediationZone Documentation 9.4 - InfoZone",
    "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352140068/Aggregation+Agent+Input+Output+Data+and+MIM",
    "word_count": 2208,
    "char_count": 13060
  }
]