[
  {
    "chunk_id": 1,
    "text": "Starting the System Login as mzadmin on the host where the Platform Container is installed. Ensure that the environment variables are set correctly: Variable Description MZ_CONTAINER Example value: container0 This environment variable specifies an identifier for the installed container. Each container in your MediationZone system must have a unique identifier. MZ_HOME Example value: /opt/mz This environment variable specifies where the MediationZone software is installed. JAVA_HOME Example value: /opt/jdk/jdk-17.0.2 This environment variable specifies where the JDK is installed. PATH This environment variable specifies the search path. The search path must contain the following directories: $JAVA_HOME/bin:$MZ_HOME/bin Start the Platform by entering the mzsh startup command: $ mzsh startup platform If you have configured SCs or ECs in the Platform container, you can add the names of these pico instances to the startup command. The Platform must be started before any ECs or SCs. Example - How to Start the System Enter the following command to start the Platform and an EC (ec1) in the Platform Container: $ mzsh startup platform ec1 Start other pico instances that are required for execution, i e ECs or SCs. If you have enabled remote access to the containers in your system, you can start pico instances on other containers with the the mzsh system start command: $ mzsh system start container:<container regexp>/pico:<pico name regexp> Hint! The Platform will be started if it is not already running. Note! Set your desired environment variables in $MZ_HOME/bin/mzshr.env as this file will be loaded with local variables. Add the desired profiles, such as \". /home/mzadmin/.profile_mz\". Example - mzsh system start Enter the following command to start all pico instances in a container: $ mzsh system start container:<container>/pico:.* Repeat this command for all containers in the system to start all pico instances. You can also start all pico instances by omitting the target path: $ mzsh system start This is equivavalent to: $ mzsh system start container:.*/pico:.* Add the --tag option to the system command to start a group of pico instances: $ mzsh system start --tag tag1 container:.*/pico:.* For further information about the system command and how to add tags to pico instances, see system . If you have not enabled remote access, you must login to each container host and start the pico instances with the mzsh startup command. $ mzsh startup <pico-name-1> <pico-name-2> <...> Stopping the System Log in as mzadmin on the host where the Platform Container is installed. Make sure that the environment variables are set correctly: Variable Description MZ_CONTAINER Example value: container0 This environment variable specifies an identifier for the installed container. Each container in your MediationZone system must have a unique identifier. MZ_HOME Example value: /opt/mz This environment variable specifies where the MediationZone software is installed. JAVA_HOME Example value: /opt/jdk/jdk-17.0.2 This environment variable specifies where the JDK is installed. PATH This environment variable specifies the search path. The search path must contain the following directories: $JAVA_HOME/bin:$MZ_HOME/bin Stop all ECs, and SCs. Note! It is recommended that you stop workflows that depend on the specified pico instances before you run the mzsh shutdown command. Workflows that are active during shutdown, may remain in an active state or enter an unreachable state. In both these cases, the workflows may need manual attention to ensure that they are deactivated.Set your desired environment variables in $MZ_HOME/bin/mzshr.env as this file will be loaded with local variables. Add the desired profiles, such as \". /home/mzadmin/.profile_mz\". If you have enabled remote access to the containers in your system, you can stop pico instances on other containers with the the mzsh system stop command: $ mzsh system stop container:<container regexp>/pico:<pico regexp> Example - mzsh system stop Enter the following command to stop all pico instances in a container: $ mzsh system stop container:<container>/pico:.* Repeat this command for all containers in the system to stop all pico instances. You can also stop all pico instances by omitting the target path: $ mzsh system stop This is equivavalent to: $ mzsh system stop container:.*/pico:.* Add the --tag option to the system command to stop a group of pico instances: $ mzsh system stop --tag tag1 container:.*/pico:.* For further information about the the system command and how to add tags to pico instances, see system . If you have not enabled remote access, you must login to each container and stop the pico instances with the mzsh shutdown command. $ mzsh shutdown <pico-name-1> <pico-name-2> <...> Stop the Platform by entering the mzsh shutdown command: $ mzsh shutdown platform The Platform must be the last of the pico instances to shut down. The reason for this is that the mzsh shutdown and mzsh system stop commands are issued through the Platform. Note! The Unix command kill should only be used when the shutdown command is not working, since it will force interruption of all processing instead of waiting until the next End Batch message is issued for each workflow. The use of this command may be necessary if the Platform is accidentally shut down prior to an Execution Context, for example.It is recommended that you stop workflows that depend on the specified pico instances before you run the mzsh shutdown command. Workflows that are active during shutdown, may remain in an active state or enter an unreachable state. In both these cases, the workflows may need manual attention to ensure that they are deactivated.Set your desired environment variables in $MZ_HOME/bin/mzshr.env as this file will be loaded with local variables. Add the desired profiles, such as \". /home/mzadmin/.profile_mz\". Hint! Use the following mzsh command to retrieve the running status of pico instances in the system: $ mzsh topo show status",
    "title": "Starting and Stopping the System - MediationZone Documentation 9.4 - InfoZone",
    "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/352119515/Starting+and+Stopping+the+System",
    "word_count": 933,
    "char_count": 6031
  }
]