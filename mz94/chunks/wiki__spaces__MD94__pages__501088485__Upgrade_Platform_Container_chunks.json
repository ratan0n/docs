[
  {
    "chunk_id": 1,
    "text": "This page explains how to upgrade the Platform using the Standard Upgrade Procedure. Before proceeding, ensure that you have reviewed all the \"Pre-Upgrade\" pages. During the upgrade process, always use the default application user, mzadmin, along with the correct password when prompted. Upgrading the Platform Container To upgrade the Platform container: Go to the Release Content Directory Access the directory created during the extraction of the delivered *.tgz file in the Upgrade Preparation step. Execute the Upgrade Command Pre-upgrade validations are performed to verify the environment and configuration, ensuring a seamless upgrade experience. The following is validated: install.xml parameters mzadmin password db owner password db parameters checks that tables exist in the db Check that new version is not older than installed version To perform validation without starting the upgrade, run the following command: ./setup.sh upgrade -validate-only Run the following command to initiate the upgrade process. ./setup.sh upgrade Note! If the upgrade validation fails, there is no need to perform a rollback or restore, as the upgrade process has not yet begun. If validation fails but you choose to proceed, you can run the following command. ./setup.sh upgrade -skip-validate Caution! You can choose to skip validation, but be aware that this bypasses checks for potential issues in your environment and configuration. If there are undetected problems, the upgrade may fail or cause unexpected behavior. Proceed with caution and ensure you have backups before continuing. Monitor the Upgrade Progress The ./setup.sh upgrade command generates a setup log file in the $MZ_HOME/log directory. To monitor the upgrade progress in real-time, use the following command in a separate window: $ tail -f $MZ_HOME/log/setup-9.4.0.0.log Rollback in Case of Failure If the upgrade is aborted and a rollback is necessary, refer to Downgrade/Rollback . Note! If any configurations become invalid during the upgrade, these will be listed in the log file. There is no cause for concern, as configuration errors will be solved when importing the upgraded configuration done as part of the preparation for upgrade procedures. Example - Output in the upgrade_<timestamp>.log file with invalid configurations. Mon Nov 19 10:52:10 CET 2013 Regenerating configs The following configurations changed status and may require manual attention: Workflow Test.WF1 became invalid, Workflow Test.WF2 became invalid, APL Code Test.apl_profile became invalid, Platform Container Post-Upgrade Steps The following post-upgrade steps need to be performed: Start the Platform Run the following command to start the platform: mzsh startup platform Start the Desktop Run the command below to start the Desktop: mzsh startup ui The Desktop is accessible in a browser at: http(s)://<host>:9001/desktop/ (Default port: 9001 . If this was changed during the upgrade install.xml parameter ui.webserver.port use the updated value.) Note! You can still use the Legacy Desktop. Change the UI Port (Optional) If you need to modify the UI port, execute: mzsh topo set topo://container:<platform-container>/pico:ui/val:config.properties.ui.webserver.port <port-number> Import the Upgraded Configuration You can import the upgraded configuration either via the UI or using the following command: mzsh <username>/<password> systemimport <file to import>.zip (See Managing Configuration Exports for details.) Regenerate Configurations Run the following command to regenerate configurations: mzsh regenerateconfigs",
    "title": "Upgrade Platform Container - MediationZone Documentation 9.4 - InfoZone",
    "url": "https://infozone.atlassian.net/wiki/spaces/MD94/pages/501088485/Upgrade+Platform+Container",
    "word_count": 509,
    "char_count": 3572
  }
]