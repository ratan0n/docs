{
  "id": "wiki__spaces__MD93__pages__204645082__Generating_New_Config_Class_using_DTK",
  "title": "Generating New Config Class using DTK - MediationZone Documentation 9.3 - InfoZone",
  "url": "https://infozone.atlassian.net/wiki/spaces/MD93/pages/204645082/Generating+New+Config+Class+using+DTK",
  "categories": [
    "space:MD93"
  ],
  "text": "A DTK plugin is created and committed by following these steps: For agent plugins, create a Configuration Contract, see Configuration Contract for further information about the contents of the configuration contract. For other types of plugins, skip this step. For agent plugins, generate a Java file from your configuration contract: > java -classpath $CLASSPATH com.digitalroute.tools.ContractGen  -d . -f MyAgentConfigContract.xml For other types of plugins, skip this step. Create the different Java files required for the type of plugin you want to create. See the chapters describing each plugin for further information. Compile all the Java files for your plugin into classes: > javac -classpath $CLASSPATH com/mycompany/myagent/*.java Note! It is strongly recommended that the Java code does not use the default package context. All classes in the system must have unique names. Create a user-defined *.jar file containing the classes, see the section below, Creating a User-Defined Jar File. Create a user-defined *.mzp package containing the *.jar file, see the section below, Creating a User-Defined Package. Commit your user-defined package, see the section below, Committing a User-Defined Package. Creating a User-Defined Jar For more information, refer to the same section in Creating a DTK Plugin . Creating a User-Defined Package For more information, refer to the same section in Creating a DTK Plugin . Committing a User Defined Package For On-Premise, Non-Containerized environment : New or updated code is inserted into the system using the mzsh Command Line Tool: > mzsh username/password pcommit my_agent.mzp Loading",
  "chunks": [
    {
      "chunk_id": 1,
      "text": "A DTK plugin is created and committed by following these steps: For agent plugins, create a Configuration Contract, see Configuration Contract for further information about the contents of the configuration contract. For other types of plugins, skip this step. For agent plugins, generate a Java file from your configuration contract: > java -classpath $CLASSPATH com.digitalroute.tools.ContractGen  -d . -f MyAgentConfigContract.xml For other types of plugins, skip this step. Create the different Java files required for the type of plugin you want to create. See the chapters describing each plugin for further information. Compile all the Java files for your plugin into classes: > javac -classpath $CLASSPATH com/mycompany/myagent/*.java Note! It is strongly recommended that the Java code does not use the default package context. All classes in the system must have unique names. Create a user-defined *.jar file containing the classes, see the section below, Creating a User-Defined Jar File. Create a user-defined *.mzp package containing the *.jar file, see the section below, Creating a User-Defined Package. Commit your user-defined package, see the section below, Committing a User-Defined Package. Creating a User-Defined Jar For more information, refer to the same section in Creating a DTK Plugin . Creating a User-Defined Package For more information, refer to the same section in Creating a DTK Plugin . Committing a User Defined Package For On-Premise, Non-Containerized environment : New or updated code is inserted into the system using the mzsh Command Line Tool: > mzsh username/password pcommit my_agent.mzp Loading",
      "title": "Generating New Config Class using DTK - MediationZone Documentation 9.3 - InfoZone",
      "url": "https://infozone.atlassian.net/wiki/spaces/MD93/pages/204645082/Generating+New+Config+Class+using+DTK",
      "word_count": 244,
      "char_count": 1639
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-24T04:49:34.697396",
    "word_count": 244,
    "char_count": 1639,
    "chunk_count": 1
  }
}