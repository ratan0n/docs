[
  {
    "chunk_id": 1,
    "text": "A principle behind the configuration representation used in the STR, is to support both manual configuration, i e editing configuration files in a text editor, and scripted configuration using the mzsh topo command. Most changes to the files can be done in either way. The figure below illustrates how you can edit a particular system property, either using a command or a text editor. Open Updating a system property in STR Manual Configuration There are three methods of manually editing configurations in STR. Method 1 Open a configuration file under MZ_HOME/common/config/cell/default/master . Edit the file and save. Run the mzsh command topo activate . This is required in order for the changes to become effective. $ mzsh topo activate Method 2 Open a configuration by running the mzsh command topo open. The configuration opens in vi or the editor specified by the environment variable EDITOR. Example - Opening a Cell Configuration $ mzsh topo open cell:default Example - Opening a Container Configuration $ mzsh topo open main1 Example - Opening a Pico Configuration $ mzsh topo open ec1 If the pico name is not unique in the system, you will be prompted to specify the container. Example - Multiple Pico Configurations Sharing the Same Name $ mzsh topo open ec2 (/home/main1/common/config/cell/default/master/containers/main1/picos/ec2.conf,ec2,topo://container:main1/pico:ec2) (/home/main1/common/config/cell/default/master/containers/exec1/picos/ec2.conf,ec2,topo://container:exec1/pico:ec2) Multiple entries, select one: (1) topo://container:main1/pico:ec2 (2) topo://container:exec1/pico:ec2 [1] : Edit the configuration and save. The mzsh command topo activate will be called with the --verbose option and the saved changes are displayed in a scripted syntax. Method 3 As an alternative to the command line tool, you can manage pico configurations and start/stop pico instances from the System Administration GUI. For further information, see Managing Picos in Desktop . Activation and Validation When you use the mzsh commands topo set or topo open , changes are automatically validated before they are copied to the active registry. If the command and its arguments can be parsed but fails the validation, you can update the configuration or use a reset command to undo the changes. You can disable the validation by using the option --no-activation . Changes performed by the mzsh topo will then remain in the master registry until you submit a separate activate command. $ mzsh topo set --no-activation Hint! The options --dry-run and --verbose are useful to learn the mzsh topo syntax. When you have edited the configuration manually, use the following command, to view the corresponding edits in a scripted syntax: $ mzsh topo activate --dry-run --verbose Example - Output from activate with verbose Option $ mzsh topo activate -v --dry-run mzsh topo set topo://container:main1/pico:ec1/val:config.properties.ec.httpd.port 9096 # (was: 9092) Dry-run: Validation successful Dry-run: Stopping without performing activation Dry-run: Active registry not changed You can then restore the master registry with the command mzsh topo reset . Example - Restart the Picos to Apply the Changes Changes to the STR are not applied on running pico instances or services. If you, for example, have updated the properties of the Platform and an EC, both must be restarted after activation. Example, after an mzsh topo activate of ec5, mzsh shutdown and startup needs to be done to apply the changes. $ mzsh shutdown ec5 $ mzsh startup ec5 Note! The sorting and layout of the configuration files may change when it is updated both using manual editing and the commands. That means that the exact ordering of keys, and layout of the file could change. However: this will not affect how the system interprets the configuration at runtime. It is not supported to edit the configuration files using command line utilities (such as sed or awk), all scripted changes must be done via the mzsh topo command, to minimize the risk of invalid assumptions regarding the exact layout of the configuration files. For further information about the various sub-commands that are available in the mzsh topo command, see topo . For further information about how to manage pico- and service configurations, see Managing Picos with Topo and Managing Service Configurations .",
    "title": "Working with STR - MediationZone Documentation 9.3 - InfoZone",
    "url": "https://infozone.atlassian.net/wiki/spaces/MD93/pages/204647090/Working+with+STR",
    "word_count": 664,
    "char_count": 4360
  }
]