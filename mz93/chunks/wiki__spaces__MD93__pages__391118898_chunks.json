[
  {
    "chunk_id": 1,
    "text": "The relevant jar files required for the preparations must be obtained from the SAP CC server provider. The Core SDK jar files can be found in SAP Convergent Charging Installation Materials. SAP CC Core SDK Jar Files for Version 2023 The following jar files are required by SAP CC agents when using with SAP Convergent Charging server version 2023: common_message.jar common_util.jar core_chargingplan.jar core_chargingprocess.jar core_client.jar jaxb-api-2.3.1.jar jaxb-core-2.3.0.1.jar jaxb-impl-2.3.8.jar logging.jar sap.com~tc~logging~java.jar Note! The version of SAP CC Core SDK client JAR files must match the version of your SAP CC core system (i.e. the back-end servers). From the unpacked SAP Convergent Charging installer, the jar files can typically be found by navigating to the directory and unzipping the core_sdk.zip file located in DATA_UNITS/<CC_VERSION>_TOOLS_CONTENT_UC_OSIND . Example - Unzip core_sdk.zip $ unzip DATA_UNITS/CC2023_TOOLS_CONTENT_UC_OSIND/core_sdk.zip -d core_sdk For the SAP Convergent Charging server patches, the JAR files can typically be found by unpacking the patch file for the SAP CC Core SDK software unit. Example - Unzip SAP CC Core SDK patch file $ unzip CORESDK02_0-80008788.ZIP -d core_sdk Example - Listing SAP CC Core SDK jar files $ ls -gG core_sdk/jars/ total 17152 -rw-r--r-- 1 174853 Feb 12 2024 common_message.jar -rw-r--r-- 1 660812 Feb 12 2024 common_util.jar -rw-r--r-- 1 691798 Feb 12 2024 core_chargingplan.jar -rw-r--r-- 1 426602 Feb 12 2024 core_chargingprocess.jar -rw-r--r-- 1 4917429 Feb 12 2024 core_client.jar -rw-r--r-- 1 128076 Feb 12 2024 jaxb-api-2.3.1.jar -rw-r--r-- 1 254858 Feb 12 2024 jaxb-core-2.3.0.1.jar -rw-r--r-- 1 1117712 Feb 12 2024 jaxb-impl-2.3.8.jar -rw-r--r-- 1 89161 Feb 12 2024 logging.jar -rw-r--r-- 1 302450 Feb 12 2024 sap.com~tc~logging~java.jar The classpaths for the jar files are specified for each EC. In the example below, the SAP jar files are located in MZ_HOME/3pp. Note! Ensure that you include existing paths, so that they are not overwritten. Example command to get existing classpaths: $ mzsh topo get topo://container:<container>/pico:<ec>/obj:config.classpath Example - Setting classpath $ mzsh topo set topo://container:<container>/pico:<ec name>/obj:config.classpath.jars ' [\"lib/picostart.jar\", \"3pp/common_message.jar\", \"3pp/common_util.jar\", \"3pp/core_chargingplan.jar\", \"3pp/core_chargingprocess.jar\", \"3pp/core_client.jar\", \"3pp/jaxb-api-2.3.1.jar\", \"3pp/jaxb-core-2.3.0.1.jar\", \"3pp/jaxb-impl-2.3.8.jar\", \"3pp/logging.jar\", \"3pp/sap.com~tc~logging~java.jar\"]' After the classpath has been set, you need to manually distribute the jar files so that they are in place when the EC is started. You can then restart the EC to register the changes in the configuration above for the SAP CC agents. Secure Communications via TLS The agent can be configured for secure communication via TLS. This requires a keystore be created for each EC host. For more information about setting up secure communication, refer to SAP CC Secured Connection . For SAP CC Online Agent, it is required to add the hostname information of the SAP Convergent Charging Core server Dispatcher Instance(s). This information is needed by the execution content server . The IP address needs to be explicitly mentioned. Refer to the SAP CC Online Agent Configuration page.",
    "title": "SAP CC Agent Preparations - MediationZone Documentation 9.3 - InfoZone",
    "url": "https://infozone.atlassian.net/wiki/spaces/MD93/pages/391118898",
    "word_count": 458,
    "char_count": 3352
  }
]