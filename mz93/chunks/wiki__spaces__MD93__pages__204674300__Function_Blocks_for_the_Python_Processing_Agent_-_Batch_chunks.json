[
  {
    "chunk_id": 1,
    "text": "When writing code for the Python processing agent for batch, the function blocks in this section apply. For examples and further information on writing code in the Python processing agent, see Python Writer's Guide . The following function blocks are supported by the Python processing agent: Function Block Description def initialize() This function block initializes resources and state. def beginBatch() This function block is executed at the beginning of each batch. def consume(input) This function block consumes and processes UDRs. def drain() This function block is called before the current batch ends. The agent must flush all internal buffers to make sure all pending data has been processed before the transaction is ended. This method is the last point in the batch processing where the agent is permitted to route data. def endBatch() This function block is executed at the end of each batch. def commit() This function block is executed for each batch when the transaction is successful. def rollback() This function block is executed for each batch when a transaction fails. def stop() This function block is called when the workflow is about to stop. def deinitialize() This function block will cleanup resources and state. def cancelBatch() This function block is executed if a Cancel Batch is emitted anywhere in the workflow. def splittingBatch() This function block is called when the collection agent has split the input batch. If the agent keeps internal buffers to be flushed differently depending on the nature of the transaction, this method serves as a hint to the drain call.",
    "title": "Function Blocks for the Python Processing Agent - Batch - MediationZone Documentation 9.3 - InfoZone",
    "url": "https://infozone.atlassian.net/wiki/spaces/MD93/pages/204674300/Function+Blocks+for+the+Python+Processing+Agent+-+Batch",
    "word_count": 257,
    "char_count": 1603
  }
]