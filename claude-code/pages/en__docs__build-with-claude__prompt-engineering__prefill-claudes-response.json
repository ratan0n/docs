{
  "url": "https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/prefill-claudes-response",
  "title": "Prefill Claude's response for greater output control - Anthropic",
  "text": "Anthropic\nhome page\nEnglish\nSearch...\nSearch...\nNavigation\nPrompt engineering\nPrefill Claude's response for greater output control\nWelcome\nDeveloper Guide\nAPI Guide\nClaude Code\nModel Context Protocol (MCP)\nResources\nRelease Notes\nDocumentation\nDeveloper Discord\nSupport\nFirst steps\nIntro to Claude\nGet started\nModels & pricing\nModels overview\nChoosing a model\nMigrating to Claude 4\nModel deprecations\nPricing\nLearn about Claude\nBuilding with Claude\nFeatures overview\nContext windows\nGlossary\nCapabilities\nPrompt caching\nExtended thinking\nStreaming Messages\nBatch processing\nCitations\nMultilingual support\nToken counting\nEmbeddings\nVision\nPDF support\nFiles API\nGoogle Sheets add-on\nTools\nOverview\nHow to implement tool use\nToken-efficient tool use\nFine-grained tool streaming\nBash tool\nCode execution tool\nComputer use tool\nText editor tool\nWeb search tool\nModel Context Protocol (MCP)\nMCP connector\nRemote MCP servers\nUse cases\nOverview\nTicket routing\nCustomer support agent\nContent moderation\nLegal summarization\nPrompt engineering\nOverview\nClaude 4 best practices\nPrompt generator\nUse prompt templates\nPrompt improver\nBe clear and direct\nUse examples (multishot prompting)\nLet Claude think (CoT)\nUse XML tags\nGive Claude a role (system prompts)\nPrefill Claude's response\nChain complex prompts\nLong context tips\nExtended thinking tips\nTest & evaluate\nDefine success criteria\nDevelop test cases\nUsing the Evaluation Tool\nReducing latency\nStrengthen guardrails\nReduce hallucinations\nIncrease output consistency\nMitigate jailbreaks\nStreaming refusals\nReduce prompt leak\nKeep Claude in character\nLegal center\nAnthropic Privacy Policy\nSecurity and compliance\nWhile these tips apply broadly to all Claude models, you can find prompting tips specific to extended thinking models\nhere\n.\nPrefilling is only available for non-extended thinking modes. It’s not currently supported with extended thinking.\nWhen using Claude, you have the unique ability to guide its responses by prefilling the\nAssistant\nmessage. This powerful technique allows you to direct Claude’s actions, skip preambles, enforce specific formats like JSON or XML, and even help Claude maintain character consistency in role-play scenarios.\nIn some cases where Claude is not performing as expected, a few prefilled sentences can vastly improve Claude’s performance. A little prefilling goes a long way!\n​\nHow to prefill Claude’s response\nTo prefill, include the desired initial text in the\nAssistant\nmessage (Claude’s response will continue from where the\nAssistant\nmessage leaves off):\nimport\nanthropic\nclient\n=\nanthropic\n.\nAnthropic\n(\n)\nresponse\n=\nclient\n.\nmessages\n.\ncreate\n(\nmodel\n=\n\"claude-opus-4-20250514\"\n,\nmax_tokens\n=\n1024\n,\nmessages\n=\n[\n{\n\"role\"\n:\n\"user\"\n,\n\"content\"\n:\n\"What is your favorite color?\"\n}\n,\n{\n\"role\"\n:\n\"assistant\"\n,\n\"content\"\n:\n\"As an AI assistant, I don't have a favorite color, But if I had to pick, it would be green because\"\n}\n# Prefill here\n]\n)\nThe prefill content cannot end with trailing whitespace. A prefill like\n\"As an AI assistant, I \"\n(with a space at the end) will result in an error.\n​\nExamples\n​\nExample 1: Controlling output formatting and skipping the preamble\nPower user tip\n: Prefilling\n{\nforces Claude to skip the preamble and directly output the JSON object. This is cleaner, more concise, and easier for programs to parse without additional processing.\nExample: Structured data extraction without prefilling\nRole\nContent\nUser\nExtract the name, size, price, and color from this product description as a JSON object:\n<description>\nThe SmartHome Mini is a compact smart home assistant available in black or white for only $49.99. At just 5 inches wide, it lets you control lights, thermostats, and other connected devices via voice or app—no matter where you place it in your home. This affordable little hub brings convenient hands-free control to your smart devices.\n</description>\nAssistant\nHere’s the extracted information in JSON format:\n```json\n{\n“name”: “SmartHome Mini”,\n“size”: “5 inches wide”,\n“price”: “$49.99”,\n“colors”: [“black”, “white”]\n}\n```\nI’ve extracted the following details from the product description:\n-\nName\n: SmartHome Mini\n-\nSize\n: 5 inches wide\n-\nPrice\n: $49.99\n-\nColors\n: Available in black and white\nThe JSON object provides a structured format that’s easy for programs to parse and use. Let me know if you need any modifications or have any other questions!\nExample: Structured data extraction with prefilling\nRole\nContent\nUser\nExtract the name, size, price, and color from this product description as a JSON object:\n<description>\nThe SmartHome Mini is a compact smart home assistant available in black or white for only $49.99. At just 5 inches wide, it lets you control lights, thermostats, and other connected devices via voice or app—no matter where you place it in your home. This affordable little hub brings convenient hands-free control to your smart devices.\n</description>\nAssistant (prefill)\n{\nAssistant (Claude’s response)\n“name”: “SmartHome Mini”,\n“size”: “5 inches wide”,\n“price”: “$49.99”,\n“colors”: [\n“black”,\n“white”\n]\n}\n​\nExample 2: Maintaining character in roleplay scenarios\nRole-play tip\n: Prefilling a bracketed\n[ROLE_NAME]\ncan remind Claude stay in character, even for longer and more complex conversations. This is especially powerful when combined with role prompting in the\nsystem\nparameter.\nExample: Maintaining character without role prompting\nRole\nContent\nUser (50 conversation turns in with “Sherlock Holmes” Claude)\nWhat do you deduce about the owner of this shoe? <image>muddy_shoe.jpg</image>\nAssistant\nAs an AI assistant, I would be happy to analyze the image of a muddy shoe as if you had provided it. Here’s my deduction…\nExample: Maintaining character with role prompting\nRole\nContent\nUser (50 conversation turns in with “Sherlock Holmes” Claude)\nWhat do you deduce about the owner of this shoe?\n<image>muddy_shoe.jpg</image>\nAssistant (prefill)\n[Sherlock Holmes]\nAssistant (Claude’s response)\nAh, what have we here? A most curious specimen, Watson! Let us examine this shoe with a discerning eye. The mud, you see, is not your common London clay, but rather the distinctive reddish hue of the iron-rich soil found only in the environs of Hampstead Heath. And yet, the wear on the sole suggests a gait more suited to the cobblestones of Whitechapel than the gentle slopes of the Heath.\nNow, observe the laces! They are tied with a particular knot favored by those in the medical profession—doubtless a habit acquired during years of tying surgical gowns. But the scuff marks on the toe box tell a different tale: they are consistent with the kicking motion one might employ in the martial arts, specifically Baritsu.\nWe may conclude, then, that our absent shoe owner is a doctor, possibly a surgeon, who resides in Whitechapel but frequents Hampstead Heath—perhaps for a secret Baritsu practice, away from prying eyes. A most intriguing case, Watson! We must make haste; the game is afoot!\nPrompt library\nGet inspired by a curated selection of prompts for various tasks and use cases.\nGitHub prompting tutorial\nAn example-filled tutorial that covers the prompt engineering concepts found in our docs.\nGoogle Sheets prompting tutorial\nA lighter weight version of our prompt engineering tutorial via an interactive spreadsheet.\nWas this page helpful?\nYes\nNo\nGive Claude a role (system prompts)\nChain complex prompts\nOn this page\nHow to prefill Claude’s response\nExamples\nExample 1: Controlling output formatting and skipping the preamble\nExample 2: Maintaining character in roleplay scenarios",
  "links": [
    {
      "url": "https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/extended-thinking-tips",
      "text": "Extended thinking tips"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/define-success",
      "text": "Define success criteria"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/develop-tests",
      "text": "Develop test cases"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/eval-tool",
      "text": "Using the Evaluation Tool"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/strengthen-guardrails/reduce-latency",
      "text": "Reducing latency"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/strengthen-guardrails/reduce-hallucinations",
      "text": "Reduce hallucinations"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/strengthen-guardrails/increase-consistency",
      "text": "Increase output consistency"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/strengthen-guardrails/mitigate-jailbreaks",
      "text": "Mitigate jailbreaks"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/strengthen-guardrails/handle-streaming-refusals",
      "text": "Streaming refusals"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/strengthen-guardrails/reduce-prompt-leak",
      "text": "Reduce prompt leak"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/test-and-evaluate/strengthen-guardrails/keep-claude-in-character",
      "text": "Keep Claude in character"
    },
    {
      "url": "https://docs.anthropic.com/en/resources/prompt-library/library",
      "text": "Prompt libraryGet inspired by a curated selection of prompts for various tasks and use cases."
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-23T15:07:49.959205",
    "word_count": 1168,
    "link_count": 12,
    "content_length": 7558
  }
}