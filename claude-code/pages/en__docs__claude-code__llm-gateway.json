{
  "url": "https://docs.anthropic.com/en/docs/claude-code/llm-gateway",
  "title": "LLM gateway configuration - Anthropic",
  "text": "Anthropic\nhome page\nEnglish\nSearch...\nSearch...\nNavigation\nDeployment\nLLM gateway configuration\nWelcome\nDeveloper Guide\nAPI Guide\nClaude Code\nModel Context Protocol (MCP)\nResources\nRelease Notes\nDocumentation\nDeveloper Discord\nSupport\nGetting started\nOverview\nSet up\nQuickstart\nMemory management\nCommon workflows\nBuild with Claude\nAdd Claude Code to your IDE\nModel Context Protocol (MCP)\nGitHub Actions\nClaude Code SDK\nTroubleshooting\nDeployment\nOverview\nAmazon Bedrock\nGoogle Vertex AI\nCorporate proxy\nLLM gateway\nDevelopment containers\nAdministration\nIdentity and Access Management\nSecurity\nMonitoring\nCosts\nReference\nCLI reference\nInteractive mode\nSlash commands\nSettings\nResources\nData usage\nLegal and compliance\nLLM gateways provide a centralized proxy layer between Claude Code and model providers, offering:\nCentralized authentication\n- Single point for API key management\nUsage tracking\n- Monitor usage across teams and projects\nCost controls\n- Implement budgets and rate limits\nAudit logging\n- Track all model interactions for compliance\nModel routing\n- Switch between providers without code changes\n​\nLiteLLM configuration\nLiteLLM is a third-party proxy service. Anthropic doesn’t endorse, maintain, or audit LiteLLM’s security or functionality. This guide is provided for informational purposes and may become outdated. Use at your own discretion.\n​\nPrerequisites\nClaude Code updated to the latest version\nLiteLLM Proxy Server deployed and accessible\nAccess to Claude models through your chosen provider\n​\nBasic LiteLLM setup\nConfigure Claude Code\n:\n​\nAuthentication methods\nStatic API key\nSimplest method using a fixed API key:\n# Set in environment\nexport\nANTHROPIC_AUTH_TOKEN\n=\nsk-litellm-static-key\n# Or in Claude Code settings\n{\n\"env\"\n:\n{\n\"ANTHROPIC_AUTH_TOKEN\"\n:\n\"sk-litellm-static-key\"\n}\n}\nThis value will be sent as the\nAuthorization\nand\nProxy-Authorization\nheaders, although\nAuthorization\nmay be overwritten (see Vertex “Client-specified credentials” below).\nDynamic API key with helper\nFor rotating keys or per-user authentication:\nCreate an API key helper script:\n#!/bin/bash\n# ~/bin/get-litellm-key.sh\n# Example: Fetch key from vault\nvault kv get\n-field\n=\napi_key secret/litellm/claude-code\n# Example: Generate JWT token\njwt encode\n\\\n--secret\n=\n\"\n${JWT_SECRET}\n\"\n\\\n--exp\n=\n\"+1h\"\n\\\n'{\"user\":\"'\n${\nUSER\n}\n'\",\"team\":\"engineering\"}'\nConfigure Claude Code settings to use the helper:\n{\n\"apiKeyHelper\"\n:\n\"~/bin/get-litellm-key.sh\"\n}\nSet token refresh interval:\n# Refresh every hour (3600000 ms)\nexport\nCLAUDE_CODE_API_KEY_HELPER_TTL_MS\n=\n3600000\nThis value will be sent as\nAuthorization\n,\nProxy-Authorization\n, and\nX-Api-Key\nheaders, although\nAuthorization\nmay be overwritten (see\nGoogle Vertex AI through LiteLLM\n). The\napiKeyHelper\nhas lower precedence than\nANTHROPIC_AUTH_TOKEN\nor\nANTHROPIC_API_KEY\n.\n​\nProvider-specific configurations\nAnthropic API through LiteLLM\nUsing\npass-through endpoint\n:\nexport\nANTHROPIC_BASE_URL\n=\nhttps://litellm-server:4000/anthropic\nAmazon Bedrock through LiteLLM\nUsing\npass-through endpoint\n:\nexport\nANTHROPIC_BEDROCK_BASE_URL\n=\nhttps://litellm-server:4000/bedrock\nexport\nCLAUDE_CODE_SKIP_BEDROCK_AUTH\n=\n1\nexport\nCLAUDE_CODE_USE_BEDROCK\n=\n1\nGoogle Vertex AI through LiteLLM\nUsing\npass-through endpoint\n:\nRecommended: Proxy-specified credentials\nexport\nANTHROPIC_VERTEX_BASE_URL\n=\nhttps://litellm-server:4000/vertex_ai/v1\nexport\nANTHROPIC_VERTEX_PROJECT_ID\n=\nyour-gcp-project-id\nexport\nCLAUDE_CODE_SKIP_VERTEX_AUTH\n=\n1\nexport\nCLAUDE_CODE_USE_VERTEX\n=\n1\nexport\nCLOUD_ML_REGION\n=\nus-east5\nAlternative: Client-specified credentials\nIf you prefer to use local GCP credentials:\nAuthenticate with GCP locally:\ngcloud auth application-default login\nSet Claude Code environment:\nexport\nANTHROPIC_VERTEX_BASE_URL\n=\nhttps://litellm-server:4000/vertex_ai/v1\nexport\nANTHROPIC_VERTEX_PROJECT_ID\n=\nyour-gcp-project-id\nexport\nCLAUDE_CODE_USE_VERTEX\n=\n1\nexport\nCLOUD_ML_REGION\n=\nus-east5\nUpdate LiteLLM header configuration:\nEnsure your LiteLLM config has\ngeneral_settings.litellm_key_header_name\nset to\nProxy-Authorization\n, since the pass-through GCP token will be located on the\nAuthorization\nheader.\n​\nUnified endpoint\nUsing LiteLLM’s\nAnthropic format endpoint\n:\nexport\nANTHROPIC_BASE_URL\n=\nhttps://litellm-server:4000\n​\nModel selection\nBy default, the models will use those specified in\nModel configuration\n.\nIf you have configured custom model names in LiteLLM, set the aforementioned environment variables to those custom names.\nFor more detailed information, refer to the\nLiteLLM documentation\n.\n​\nAdditional resources\nLiteLLM documentation\nClaude Code settings\nCorporate proxy setup\nThird-party integrations overview\nWas this page helpful?\nYes\nNo\nCorporate proxy\nDevelopment containers\nOn this page\nLiteLLM configuration\nPrerequisites\nBasic LiteLLM setup\nAuthentication methods\nProvider-specific configurations\nUnified endpoint\nModel selection\nAdditional resources",
  "links": [
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/costs",
      "text": "Costs"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/cli-reference",
      "text": "CLI reference"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/interactive-mode",
      "text": "Interactive mode"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/slash-commands",
      "text": "Slash commands"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/settings",
      "text": "Settings"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/data-usage",
      "text": "Data usage"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/legal-and-compliance",
      "text": "Legal and compliance"
    },
    {
      "url": "https://docs.anthropic.com/_sites/docs.anthropic.com/en/docs/claude-code/llm-gateway",
      "text": "Google Vertex AI through LiteLLM"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/bedrock-vertex-proxies",
      "text": "Model configuration"
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-23T15:07:30.255556",
    "word_count": 623,
    "link_count": 9,
    "content_length": 4905
  }
}