{
  "url": "https://docs.anthropic.com/en/docs/claude-code/memory",
  "title": "Manage Claude's memory - Anthropic",
  "text": "Anthropic\nhome page\nEnglish\nSearch...\nSearch...\nNavigation\nGetting started\nManage Claude's memory\nWelcome\nDeveloper Guide\nAPI Guide\nClaude Code\nModel Context Protocol (MCP)\nResources\nRelease Notes\nDocumentation\nDeveloper Discord\nSupport\nGetting started\nOverview\nSet up\nQuickstart\nMemory management\nCommon workflows\nBuild with Claude\nAdd Claude Code to your IDE\nModel Context Protocol (MCP)\nGitHub Actions\nClaude Code SDK\nTroubleshooting\nDeployment\nOverview\nAmazon Bedrock\nGoogle Vertex AI\nCorporate proxy\nLLM gateway\nDevelopment containers\nAdministration\nIdentity and Access Management\nSecurity\nMonitoring\nCosts\nReference\nCLI reference\nInteractive mode\nSlash commands\nSettings\nResources\nData usage\nLegal and compliance\nClaude Code can remember your preferences across sessions, like style guidelines and common commands in your workflow.\n​\nDetermine memory type\nClaude Code offers three memory locations, each serving a different purpose:\nMemory Type\nLocation\nPurpose\nUse Case Examples\nProject memory\n./CLAUDE.md\nTeam-shared instructions for the project\nProject architecture, coding standards, common workflows\nUser memory\n~/.claude/CLAUDE.md\nPersonal preferences for all projects\nCode styling preferences, personal tooling shortcuts\nProject memory (local)\n./CLAUDE.local.md\nPersonal project-specific preferences\n(Deprecated, see below)\nYour sandbox URLs, preferred test data\nAll memory files are automatically loaded into Claude Code’s context when launched.\n​\nCLAUDE.md imports\nCLAUDE.md files can import additional files using\n@path/to/import\nsyntax. The following example imports 3 files:\nSee @README for project overview and @package.json for available npm commands for this project.\n# Additional Instructions\n- git workflow @docs/git-instructions.md\nBoth relative and absolute paths are allowed. In particular, importing files in user’s home dir is a convenient way for your team members to provide individual instructions that are not checked into the repository. Previously CLAUDE.local.md served a similar purpose, but is now deprecated in favor of imports since they work better across multiple git worktrees.\n# Individual Preferences\n- @~/.claude/my-project-instructions.md\nTo avoid potential collisions, imports are not evaluated inside markdown code spans and code blocks.\nThis code span will not be treated as an import: `@anthropic-ai/claude-code`\nImported files can recursively import additional files, with a max-depth of 5 hops. You can see what memory files are loaded by running\n/memory\ncommand.\n​\nHow Claude looks up memories\nClaude Code reads memories recursively: starting in the cwd, Claude Code recurses up to\n/\nand reads any CLAUDE.md or CLAUDE.local.md files it finds. This is especially convenient when working in large repositories where you run Claude Code in\nfoo/bar/\n, and have memories in both\nfoo/CLAUDE.md\nand\nfoo/bar/CLAUDE.md\n.\nClaude will also discover CLAUDE.md nested in subtrees under your current working directory. Instead of loading them at launch, they are only included when Claude reads files in those subtrees.\n​\nQuickly add memories with the\n#\nshortcut\nThe fastest way to add a memory is to start your input with the\n#\ncharacter:\n# Always use descriptive variable names\nYou’ll be prompted to select which memory file to store this in.\n​\nDirectly edit memories with\n/memory\nUse the\n/memory\nslash command during a session to open any memory file in your system editor for more extensive additions or organization.\n​\nSet up project memory\nSuppose you want to set up a CLAUDE.md file to store important project information, conventions, and frequently used commands.\nBootstrap a CLAUDE.md for your codebase with the following command:\n> /init\nTips:\nInclude frequently used commands (build, test, lint) to avoid repeated searches\nDocument code style preferences and naming conventions\nAdd important architectural patterns specific to your project\nCLAUDE.md memories can be used for both instructions shared with your team and for your individual preferences.\n​\nMemory best practices\nBe specific\n: “Use 2-space indentation” is better than “Format code properly”.\nUse structure to organize\n: Format each individual memory as a bullet point and group related memories under descriptive markdown headings.\nReview periodically\n: Update memories as your project evolves to ensure Claude is always using the most up to date information and context.\nWas this page helpful?\nYes\nNo\nQuickstart\nCommon workflows\nOn this page\nDetermine memory type\nCLAUDE.md imports\nHow Claude looks up memories\nQuickly add memories with the # shortcut\nDirectly edit memories with /memory\nSet up project memory\nMemory best practices",
  "links": [
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/github-actions",
      "text": "GitHub Actions"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/sdk",
      "text": "Claude Code SDK"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/troubleshooting",
      "text": "Troubleshooting"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/third-party-integrations",
      "text": "Overview"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/amazon-bedrock",
      "text": "Amazon Bedrock"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/google-vertex-ai",
      "text": "Google Vertex AI"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/corporate-proxy",
      "text": "Corporate proxy"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/llm-gateway",
      "text": "LLM gateway"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/devcontainer",
      "text": "Development containers"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/iam",
      "text": "Identity and Access Management"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/security",
      "text": "Security"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/monitoring-usage",
      "text": "Monitoring"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/costs",
      "text": "Costs"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/cli-reference",
      "text": "CLI reference"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/interactive-mode",
      "text": "Interactive mode"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/slash-commands",
      "text": "Slash commands"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/settings",
      "text": "Settings"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/data-usage",
      "text": "Data usage"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/legal-and-compliance",
      "text": "Legal and compliance"
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-23T15:07:26.723059",
    "word_count": 678,
    "link_count": 19,
    "content_length": 4646
  }
}