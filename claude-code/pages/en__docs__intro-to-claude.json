{
  "url": "https://docs.anthropic.com/en/docs/intro-to-claude",
  "title": "Building with Claude - Anthropic",
  "text": "Anthropic\nhome page\nEnglish\nSearch...\nSearch...\nNavigation\nLearn about Claude\nBuilding with Claude\nWelcome\nDeveloper Guide\nAPI Guide\nClaude Code\nModel Context Protocol (MCP)\nResources\nRelease Notes\nDocumentation\nDeveloper Discord\nSupport\nFirst steps\nIntro to Claude\nGet started\nModels & pricing\nModels overview\nChoosing a model\nMigrating to Claude 4\nModel deprecations\nPricing\nLearn about Claude\nBuilding with Claude\nFeatures overview\nContext windows\nGlossary\nCapabilities\nPrompt caching\nExtended thinking\nStreaming Messages\nBatch processing\nCitations\nMultilingual support\nToken counting\nEmbeddings\nVision\nPDF support\nFiles API\nGoogle Sheets add-on\nTools\nOverview\nHow to implement tool use\nToken-efficient tool use\nFine-grained tool streaming\nBash tool\nCode execution tool\nComputer use tool\nText editor tool\nWeb search tool\nModel Context Protocol (MCP)\nMCP connector\nRemote MCP servers\nUse cases\nOverview\nTicket routing\nCustomer support agent\nContent moderation\nLegal summarization\nPrompt engineering\nOverview\nClaude 4 best practices\nPrompt generator\nUse prompt templates\nPrompt improver\nBe clear and direct\nUse examples (multishot prompting)\nLet Claude think (CoT)\nUse XML tags\nGive Claude a role (system prompts)\nPrefill Claude's response\nChain complex prompts\nLong context tips\nExtended thinking tips\nTest & evaluate\nDefine success criteria\nDevelop test cases\nUsing the Evaluation Tool\nReducing latency\nStrengthen guardrails\nReduce hallucinations\nIncrease output consistency\nMitigate jailbreaks\nStreaming refusals\nReduce prompt leak\nKeep Claude in character\nLegal center\nAnthropic Privacy Policy\nSecurity and compliance\nThis guide introduces Claude’s enterprise capabilities, the end-to-end flow for developing with Claude, and how to start building.\n​\nWhat you can do with Claude\nClaude is designed to empower enterprises at scale with strong performance across benchmark evaluations for reasoning, math, coding, and fluency in English and non-English languages.\nHere’s a non-exhaustive list of Claude’s capabilities and common uses.\nCapability\nEnables you to…\nText and code generation\nAdhere to brand voice for excellent customer-facing experiences such as copywriting and chatbots\nCreate production-level code and operate (in-line code generation, debugging, and conversational querying) within complex codebases\nBuild automatic translation features between languages\nConduct complex financial forecasts\nSupport legal use cases that require high-quality technical analysis, long context windows for processing detailed documents, and fast outputs\nVision\nProcess and analyze visual input, such as extracting insights from charts and graphs\nGenerate code from images with code snippets or templates based on diagrams\nDescribe an image for a user with low vision\nTool use\nInteract with external client-side tools and functions, allowing Claude to reason, plan, and execute actions by generating structured outputs through API calls\n​\nEnterprise considerations\nAlong with an extensive set of features, tools, and capabilities, Claude is also built to be secure, trustworthy, and scalable for wide-reaching enterprise needs.\nFeature\nDescription\nSecure\nEnterprise-grade\nsecurity and data handling for API\nSOC II Type 2 certified, HIPAA compliance options for API\nAccessible through AWS (GA) and GCP (in private preview)\nTrustworthy\nResistant to jailbreaks and misuse. We continuously monitor prompts and outputs for harmful, malicious use cases that violate our\nAUP\n.\nCopyright indemnity protections for paid commercial services\nUniquely positioned to serve high trust industries that process large volumes of sensitive user data\nCapable\n200K token context window for expanded use cases, with future support for 1M\nTool use\n, also known as function calling, which allows seamless integration of Claude into specialized applications and custom workflows\nMultimodal input capabilities with text output, allowing you to upload images (such as tables, graphs, and photos) along with text prompts for richer context and complex use cases\nDeveloper Console\nwith Workbench and prompt generation tool for easier, more powerful prompting and experimentation\nSDKs\nand\nAPIs\nto expedite and enhance development\nReliable\nVery low hallucination rates\nAccurate over long documents\nGlobal\nGreat for coding tasks and fluency in English and non-English languages like Spanish and Japanese\nEnables use cases like translation services and broader global utility\nCost conscious\nFamily of models balances cost, performance, and intelligence\n​\nImplementing Claude\n1\nScope your use case\nIdentify a problem to solve or tasks to automate with Claude.\nDefine requirements: features, performance, and cost.\n2\nDesign your integration\nSelect Claude’s capabilities (e.g., vision, tool use) and models (Opus, Sonnet, Haiku) based on needs.\nChoose a deployment method, such as the Anthropic API, AWS Bedrock, or Vertex AI.\n3\nPrepare your data\nIdentify and clean relevant data (databases, code repos, knowledge bases) for Claude’s context.\n4\nDevelop your prompts\nUse Workbench to create evals, draft prompts, and iteratively refine based on test results.\nDeploy polished prompts and monitor real-world performance for further refinement.\n5\nImplement Claude\nSet up your environment, integrate Claude with your systems (APIs, databases, UIs), and define human-in-the-loop requirements.\n6\nTest your system\nConduct red teaming for potential misuse and A/B test improvements.\n7\nDeploy to production\nOnce your application runs smoothly end-to-end, deploy to production.\n8\nMonitor and improve\nMonitor performance and effectiveness to make ongoing improvements.\n​\nStart building with Claude\nWhen you’re ready, start building with Claude:\nFollow the\nQuickstart\nto make your first API call\nCheck out the\nAPI Reference\nExplore the\nPrompt Library\nfor example prompts\nExperiment and start building with the\nWorkbench\nCheck out the\nAnthropic Cookbook\nfor working code examples\nWas this page helpful?\nYes\nNo\nPricing\nFeatures overview\nOn this page\nWhat you can do with Claude\nEnterprise considerations\nImplementing Claude\nStart building with Claude",
  "links": [],
  "metadata": {
    "scraped_at": "2025-06-23T15:07:59.181687",
    "word_count": 873,
    "link_count": 0,
    "content_length": 6098
  }
}