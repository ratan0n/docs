{
  "url": "https://docs.anthropic.com/en/docs/claude-code/monitoring-usage",
  "title": "Monitoring - Anthropic",
  "text": "Anthropic\nhome page\nEnglish\nSearch...\nSearch...\nNavigation\nAdministration\nMonitoring\nWelcome\nDeveloper Guide\nAPI Guide\nClaude Code\nModel Context Protocol (MCP)\nResources\nRelease Notes\nDocumentation\nDeveloper Discord\nSupport\nGetting started\nOverview\nSet up\nQuickstart\nMemory management\nCommon workflows\nBuild with Claude\nAdd Claude Code to your IDE\nModel Context Protocol (MCP)\nGitHub Actions\nClaude Code SDK\nTroubleshooting\nDeployment\nOverview\nAmazon Bedrock\nGoogle Vertex AI\nCorporate proxy\nLLM gateway\nDevelopment containers\nAdministration\nIdentity and Access Management\nSecurity\nMonitoring\nCosts\nReference\nCLI reference\nInteractive mode\nSlash commands\nSettings\nResources\nData usage\nLegal and compliance\nClaude Code supports OpenTelemetry (OTel) metrics and events for monitoring and observability.\nAll metrics are time series data exported via OpenTelemetry’s standard metrics protocol, and events are exported via OpenTelemetry’s logs/events protocol. It is the user’s responsibility to ensure their metrics and logs backends are properly configured and that the aggregation granularity meets their monitoring requirements.\nOpenTelemetry support is currently in beta and details are subject to change.\n​\nQuick Start\nConfigure OpenTelemetry using environment variables:\n# 1. Enable telemetry\nexport\nCLAUDE_CODE_ENABLE_TELEMETRY\n=\n1\n# 2. Choose exporters (both are optional - configure only what you need)\nexport\nOTEL_METRICS_EXPORTER\n=\notlp\n# Options: otlp, prometheus, console\nexport\nOTEL_LOGS_EXPORTER\n=\notlp\n# Options: otlp, console\n# 3. Configure OTLP endpoint (for OTLP exporter)\nexport\nOTEL_EXPORTER_OTLP_PROTOCOL\n=\ngrpc\nexport\nOTEL_EXPORTER_OTLP_ENDPOINT\n=\nhttp://localhost:4317\n# 4. Set authentication (if required)\nexport\nOTEL_EXPORTER_OTLP_HEADERS\n=\n\"Authorization=Bearer your-token\"\n# 5. For debugging: reduce export intervals\nexport\nOTEL_METRIC_EXPORT_INTERVAL\n=\n10000\n# 10 seconds (default: 60000ms)\nexport\nOTEL_LOGS_EXPORT_INTERVAL\n=\n5000\n# 5 seconds (default: 5000ms)\n# 6. Run Claude Code\nclaude\nThe default export intervals are 60 seconds for metrics and 5 seconds for logs. During setup, you may want to use shorter intervals for debugging purposes. Remember to reset these for production use.\nFor full configuration options, see the\nOpenTelemetry specification\n.\n​\nAdministrator Configuration\nAdministrators can configure OpenTelemetry settings for all users through the managed settings file. This allows for centralized control of telemetry settings across an organization. See the\nsettings precedence\nfor more information about how settings are applied.\nThe managed settings file is located at:\nmacOS:\n/Library/Application Support/ClaudeCode/managed-settings.json\nLinux:\n/etc/claude-code/managed-settings.json\nExample managed settings configuration:\n{\n\"env\"\n:\n{\n\"CLAUDE_CODE_ENABLE_TELEMETRY\"\n:\n\"1\"\n,\n\"OTEL_METRICS_EXPORTER\"\n:\n\"otlp\"\n,\n\"OTEL_LOGS_EXPORTER\"\n:\n\"otlp\"\n,\n\"OTEL_EXPORTER_OTLP_PROTOCOL\"\n:\n\"grpc\"\n,\n\"OTEL_EXPORTER_OTLP_ENDPOINT\"\n:\n\"http://collector.company.com:4317\"\n,\n\"OTEL_EXPORTER_OTLP_HEADERS\"\n:\n\"Authorization=Bearer company-token\"\n}\n}\nManaged settings can be distributed via MDM (Mobile Device Management) or other device management solutions. Environment variables defined in the managed settings file have high precedence and cannot be overridden by users.\n​\nConfiguration Details\n​\nCommon Configuration Variables\nEnvironment Variable\nDescription\nExample Values\nCLAUDE_CODE_ENABLE_TELEMETRY\nEnables telemetry collection (required)\n1\nOTEL_METRICS_EXPORTER\nMetrics exporter type(s) (comma-separated)\nconsole\n,\notlp\n,\nprometheus\nOTEL_LOGS_EXPORTER\nLogs/events exporter type(s) (comma-separated)\nconsole\n,\notlp\nOTEL_EXPORTER_OTLP_PROTOCOL\nProtocol for OTLP exporter (all signals)\ngrpc\n,\nhttp/json\n,\nhttp/protobuf\nOTEL_EXPORTER_OTLP_ENDPOINT\nOTLP collector endpoint (all signals)\nhttp://localhost:4317\nOTEL_EXPORTER_OTLP_METRICS_PROTOCOL\nProtocol for metrics (overrides general)\ngrpc\n,\nhttp/json\n,\nhttp/protobuf\nOTEL_EXPORTER_OTLP_METRICS_ENDPOINT\nOTLP metrics endpoint (overrides general)\nhttp://localhost:4318/v1/metrics\nOTEL_EXPORTER_OTLP_LOGS_PROTOCOL\nProtocol for logs (overrides general)\ngrpc\n,\nhttp/json\n,\nhttp/protobuf\nOTEL_EXPORTER_OTLP_LOGS_ENDPOINT\nOTLP logs endpoint (overrides general)\nhttp://localhost:4318/v1/logs\nOTEL_EXPORTER_OTLP_HEADERS\nAuthentication headers for OTLP\nAuthorization=Bearer token\nOTEL_EXPORTER_OTLP_METRICS_CLIENT_KEY\nClient key for mTLS authentication\nPath to client key file\nOTEL_EXPORTER_OTLP_METRICS_CLIENT_CERTIFICATE\nClient certificate for mTLS authentication\nPath to client cert file\nOTEL_METRIC_EXPORT_INTERVAL\nExport interval in milliseconds (default: 60000)\n5000\n,\n60000\nOTEL_LOGS_EXPORT_INTERVAL\nLogs export interval in milliseconds (default: 5000)\n1000\n,\n10000\nOTEL_LOG_USER_PROMPTS\nEnable logging of user prompt content (default: disabled)\n1\nto enable\n​\nMetrics Cardinality Control\nThe following environment variables control which attributes are included in metrics to manage cardinality:\nEnvironment Variable\nDescription\nDefault Value\nExample to Disable\nOTEL_METRICS_INCLUDE_SESSION_ID\nInclude session.id attribute in metrics\ntrue\nfalse\nOTEL_METRICS_INCLUDE_VERSION\nInclude app.version attribute in metrics\nfalse\ntrue\nOTEL_METRICS_INCLUDE_ACCOUNT_UUID\nInclude user.account_uuid attribute in metrics\ntrue\nfalse\nThese variables help control the cardinality of metrics, which affects storage requirements and query performance in your metrics backend. Lower cardinality generally means better performance and lower storage costs but less granular data for analysis.\n​\nExample Configurations\n# Console debugging (1-second intervals)\nexport\nCLAUDE_CODE_ENABLE_TELEMETRY\n=\n1\nexport\nOTEL_METRICS_EXPORTER\n=\nconsole\nexport\nOTEL_METRIC_EXPORT_INTERVAL\n=\n1000\n# OTLP/gRPC\nexport\nCLAUDE_CODE_ENABLE_TELEMETRY\n=\n1\nexport\nOTEL_METRICS_EXPORTER\n=\notlp\nexport\nOTEL_EXPORTER_OTLP_PROTOCOL\n=\ngrpc\nexport\nOTEL_EXPORTER_OTLP_ENDPOINT\n=\nhttp://localhost:4317\n# Prometheus\nexport\nCLAUDE_CODE_ENABLE_TELEMETRY\n=\n1\nexport\nOTEL_METRICS_EXPORTER\n=\nprometheus\n# Multiple exporters\nexport\nCLAUDE_CODE_ENABLE_TELEMETRY\n=\n1\nexport\nOTEL_METRICS_EXPORTER\n=\nconsole,otlp\nexport\nOTEL_EXPORTER_OTLP_PROTOCOL\n=\nhttp/json\n# Different endpoints/backends for metrics and logs\nexport\nCLAUDE_CODE_ENABLE_TELEMETRY\n=\n1\nexport\nOTEL_METRICS_EXPORTER\n=\notlp\nexport\nOTEL_LOGS_EXPORTER\n=\notlp\nexport\nOTEL_EXPORTER_OTLP_METRICS_PROTOCOL\n=\nhttp/protobuf\nexport\nOTEL_EXPORTER_OTLP_METRICS_ENDPOINT\n=\nhttp://metrics.company.com:4318\nexport\nOTEL_EXPORTER_OTLP_LOGS_PROTOCOL\n=\ngrpc\nexport\nOTEL_EXPORTER_OTLP_LOGS_ENDPOINT\n=\nhttp://logs.company.com:4317\n# Metrics only (no events/logs)\nexport\nCLAUDE_CODE_ENABLE_TELEMETRY\n=\n1\nexport\nOTEL_METRICS_EXPORTER\n=\notlp\nexport\nOTEL_EXPORTER_OTLP_PROTOCOL\n=\ngrpc\nexport\nOTEL_EXPORTER_OTLP_ENDPOINT\n=\nhttp://localhost:4317\n# Events/logs only (no metrics)\nexport\nCLAUDE_CODE_ENABLE_TELEMETRY\n=\n1\nexport\nOTEL_LOGS_EXPORTER\n=\notlp\nexport\nOTEL_EXPORTER_OTLP_PROTOCOL\n=\ngrpc\nexport\nOTEL_EXPORTER_OTLP_ENDPOINT\n=\nhttp://localhost:4317\n​\nAvailable Metrics and Events\n​\nMetrics\nClaude Code exports the following metrics:\nMetric Name\nDescription\nUnit\nclaude_code.session.count\nCount of CLI sessions started\ncount\nclaude_code.lines_of_code.count\nCount of lines of code modified\ncount\nclaude_code.pull_request.count\nNumber of pull requests created\ncount\nclaude_code.commit.count\nNumber of git commits created\ncount\nclaude_code.cost.usage\nCost of the Claude Code session\nUSD\nclaude_code.token.usage\nNumber of tokens used\ntokens\nclaude_code.code_edit_tool.decision\nCount of code editing tool permission decisions\ncount\n​\nMetric Details\nAll metrics share these standard attributes:\nsession.id\n: Unique session identifier (controlled by\nOTEL_METRICS_INCLUDE_SESSION_ID\n)\napp.version\n: Current Claude Code version (controlled by\nOTEL_METRICS_INCLUDE_VERSION\n)\norganization.id\n: Organization UUID (when authenticated)\nuser.account_uuid\n: Account UUID (when authenticated, controlled by\nOTEL_METRICS_INCLUDE_ACCOUNT_UUID\n)\n​\nSession Counter\nEmitted at the start of each session.\n​\nLines of Code Counter\nEmitted when code is added or removed.\nAdditional attribute:\ntype\n(\n\"added\"\nor\n\"removed\"\n)\n​\nPull Request Counter\nEmitted when creating pull requests via Claude Code.\n​\nCommit Counter\nEmitted when creating git commits via Claude Code.\n​\nCost Counter\nEmitted after each API request.\nAdditional attribute:\nmodel\n​\nToken Counter\nEmitted after each API request.\nAdditional attributes:\ntype\n(\n\"input\"\n,\n\"output\"\n,\n\"cacheRead\"\n,\n\"cacheCreation\"\n) and\nmodel\n​\nCode Edit Tool Decision Counter\nEmitted when user accepts or rejects Edit, MultiEdit, Write, or NotebookEdit tool usage.\nAdditional attributes:\ntool\n(tool name:\n\"Edit\"\n,\n\"MultiEdit\"\n,\n\"Write\"\n,\n\"NotebookEdit\"\n) and\ndecision\n(\n\"accept\"\n,\n\"reject\"\n)\n​\nEvents\nClaude Code exports the following events via OpenTelemetry logs/events (when\nOTEL_LOGS_EXPORTER\nis configured):\n​\nUser Prompt Event\nEvent Name\n:\nclaude_code.user_prompt\nDescription\n: Logged when a user submits a prompt\nAttributes\n:\nAll standard attributes (user.id, session.id, etc.)\nevent.name\n:\n\"user_prompt\"\nevent.timestamp\n: ISO 8601 timestamp\nprompt_length\n: Length of the prompt\nprompt\n: Prompt content (redacted by default, enable with\nOTEL_LOG_USER_PROMPTS=1\n)\n​\nTool Result Event\nEvent Name\n:\nclaude_code.tool_result\nDescription\n: Logged when a tool completes execution\nAttributes\n:\nAll standard attributes\nevent.name\n:\n\"tool_result\"\nevent.timestamp\n: ISO 8601 timestamp\nname\n: Name of the tool\nsuccess\n:\n\"true\"\nor\n\"false\"\nduration_ms\n: Execution time in milliseconds\nerror\n: Error message (if failed)\n​\nAPI Request Event\nEvent Name\n:\nclaude_code.api_request\nDescription\n: Logged for each API request to Claude\nAttributes\n:\nAll standard attributes\nevent.name\n:\n\"api_request\"\nevent.timestamp\n: ISO 8601 timestamp\nmodel\n: Model used (e.g., “claude-3-5-sonnet-20241022”)\ncost_usd\n: Estimated cost in USD\nduration_ms\n: Request duration in milliseconds\ninput_tokens\n: Number of input tokens\noutput_tokens\n: Number of output tokens\ncache_read_tokens\n: Number of tokens read from cache\ncache_creation_tokens\n: Number of tokens used for cache creation\n​\nAPI Error Event\nEvent Name\n:\nclaude_code.api_error\nDescription\n: Logged when an API request to Claude fails\nAttributes\n:\nAll standard attributes\nevent.name\n:\n\"api_error\"\nevent.timestamp\n: ISO 8601 timestamp\nmodel\n: Model used (e.g., “claude-3-5-sonnet-20241022”)\nerror\n: Error message\nstatus_code\n: HTTP status code (if applicable)\nduration_ms\n: Request duration in milliseconds\nattempt\n: Attempt number (for retried requests)\n​\nTool Decision Event\nEvent Name\n:\nclaude_code.tool_decision\nDescription\n: Logged when a tool permission decision is made (accept/reject)\nAttributes\n:\nAll standard attributes\nevent.name\n:\n\"tool_decision\"\nevent.timestamp\n: ISO 8601 timestamp\ntool_name\n: Name of the tool (e.g., “Read”, “Edit”, “MultiEdit”, “Write”, “NotebookEdit”, etc.)\ndecision\n: Either\n\"accept\"\nor\n\"reject\"\nsource\n: Decision source -\n\"config\"\n,\n\"user_permanent\"\n,\n\"user_temporary\"\n,\n\"user_abort\"\n, or\n\"user_reject\"\n​\nInterpreting Metrics and Events Data\nThe metrics exported by Claude Code provide valuable insights into usage patterns and productivity. Here are some common visualizations and analyses you can create:\n​\nUsage Monitoring\nMetric\nAnalysis Opportunity\nclaude_code.token.usage\nBreak down by\ntype\n(input/output), user, team, or model\nclaude_code.session.count\nTrack adoption and engagement over time\nclaude_code.lines_of_code.count\nMeasure productivity by tracking code additions/removals\nclaude_code.commit.count\n&\nclaude_code.pull_request.count\nUnderstand impact on development workflows\n​\nCost Monitoring\nThe\nclaude_code.cost.usage\nmetric helps with:\nTracking usage trends across teams or individuals\nIdentifying high-usage sessions for optimization\nCost metrics are approximations. For official billing data, refer to your API provider (Anthropic Console, AWS Bedrock, or Google Cloud Vertex).\n​\nAlerting and Segmentation\nCommon alerts to consider:\nCost spikes\nUnusual token consumption\nHigh session volume from specific users\nAll metrics can be segmented by\nuser.account_uuid\n,\norganization.id\n,\nsession.id\n,\nmodel\n, and\napp.version\n.\n​\nEvent Analysis\nThe event data provides detailed insights into Claude Code interactions:\nTool Usage Patterns\n: Analyze tool result events to identify:\nMost frequently used tools\nTool success rates\nAverage tool execution times\nError patterns by tool type\nPerformance Monitoring\n: Track API request durations and tool execution times to identify performance bottlenecks.\n​\nBackend Considerations\nYour choice of metrics and logs backends will determine the types of analyses you can perform:\n​\nFor Metrics:\nTime series databases (e.g., Prometheus)\n: Rate calculations, aggregated metrics\nColumnar stores (e.g., ClickHouse)\n: Complex queries, unique user analysis\nFull-featured observability platforms (e.g., Honeycomb, Datadog)\n: Advanced querying, visualization, alerting\n​\nFor Events/Logs:\nLog aggregation systems (e.g., Elasticsearch, Loki)\n: Full-text search, log analysis\nColumnar stores (e.g., ClickHouse)\n: Structured event analysis\nFull-featured observability platforms (e.g., Honeycomb, Datadog)\n: Correlation between metrics and events\nFor organizations requiring Daily/Weekly/Monthly Active User (DAU/WAU/MAU) metrics, consider backends that support efficient unique value queries.\n​\nService Information\nAll metrics are exported with:\nService Name:\nclaude-code\nService Version: Current Claude Code version\nMeter Name:\ncom.anthropic.claude_code\n​\nSecurity/Privacy Considerations\nTelemetry is opt-in and requires explicit configuration\nSensitive information like API keys or file contents are never included in metrics or events\nUser prompt content is redacted by default - only prompt length is recorded. To enable user prompt logging, set\nOTEL_LOG_USER_PROMPTS=1\nWas this page helpful?\nYes\nNo\nSecurity\nCosts\nOn this page\nQuick Start\nAdministrator Configuration\nConfiguration Details\nCommon Configuration Variables\nMetrics Cardinality Control\nExample Configurations\nAvailable Metrics and Events\nMetrics\nMetric Details\nSession Counter\nLines of Code Counter\nPull Request Counter\nCommit Counter\nCost Counter\nToken Counter\nCode Edit Tool Decision Counter\nEvents\nUser Prompt Event\nTool Result Event\nAPI Request Event\nAPI Error Event\nTool Decision Event\nInterpreting Metrics and Events Data\nUsage Monitoring\nCost Monitoring\nAlerting and Segmentation\nEvent Analysis\nBackend Considerations\nFor Metrics:\nFor Events/Logs:\nService Information\nSecurity/Privacy Considerations",
  "links": [
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/costs",
      "text": "Costs"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/cli-reference",
      "text": "CLI reference"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/interactive-mode",
      "text": "Interactive mode"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/slash-commands",
      "text": "Slash commands"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/settings",
      "text": "Settings"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/data-usage",
      "text": "Data usage"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/legal-and-compliance",
      "text": "Legal and compliance"
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-23T15:07:30.620617",
    "word_count": 1818,
    "link_count": 7,
    "content_length": 14543
  }
}