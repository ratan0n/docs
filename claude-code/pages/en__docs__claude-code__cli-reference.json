{
  "url": "https://docs.anthropic.com/en/docs/claude-code/cli-reference",
  "title": "CLI reference - Anthropic",
  "text": "Anthropic\nhome page\nEnglish\nSearch...\nSearch...\nNavigation\nReference\nCLI reference\nWelcome\nDeveloper Guide\nAPI Guide\nClaude Code\nModel Context Protocol (MCP)\nResources\nRelease Notes\nDocumentation\nDeveloper Discord\nSupport\nGetting started\nOverview\nSet up\nQuickstart\nMemory management\nCommon workflows\nBuild with Claude\nAdd Claude Code to your IDE\nModel Context Protocol (MCP)\nGitHub Actions\nClaude Code SDK\nTroubleshooting\nDeployment\nOverview\nAmazon Bedrock\nGoogle Vertex AI\nCorporate proxy\nLLM gateway\nDevelopment containers\nAdministration\nIdentity and Access Management\nSecurity\nMonitoring\nCosts\nReference\nCLI reference\nInteractive mode\nSlash commands\nSettings\nResources\nData usage\nLegal and compliance\n​\nCLI commands\nCommand\nDescription\nExample\nclaude\nStart interactive REPL\nclaude\nclaude \"query\"\nStart REPL with initial prompt\nclaude \"explain this project\"\nclaude -p \"query\"\nQuery via SDK, then exit\nclaude -p \"explain this function\"\ncat file | claude -p \"query\"\nProcess piped content\ncat logs.txt | claude -p \"explain\"\nclaude -c\nContinue most recent conversation\nclaude -c\nclaude -c -p \"query\"\nContinue via SDK\nclaude -c -p \"Check for type errors\"\nclaude -r \"<session-id>\" \"query\"\nResume session by ID\nclaude -r \"abc123\" \"Finish this PR\"\nclaude update\nUpdate to latest version\nclaude update\nclaude mcp\nConfigure Model Context Protocol (MCP) servers\nSee the\nClaude Code MCP documentation\n.\n​\nCLI flags\nCustomize Claude Code’s behavior with these command-line flags:\nFlag\nDescription\nExample\n--add-dir\nAdd additional working directories for Claude to access (validates each path exists as a directory)\nclaude --add-dir ../apps ../lib\n--allowedTools\nA list of tools that should be allowed without prompting the user for permission, in addition to\nsettings.json files\n\"Bash(git log:*)\" \"Bash(git diff:*)\" \"Write\"\n--disallowedTools\nA list of tools that should be disallowed without prompting the user for permission, in addition to\nsettings.json files\n\"Bash(git log:*)\" \"Bash(git diff:*)\" \"Write\"\n--print\n,\n-p\nPrint response without interactive mode (see\nSDK documentation\nfor programmatic usage details)\nclaude -p \"query\"\n--output-format\nSpecify output format for print mode (options:\ntext\n,\njson\n,\nstream-json\n)\nclaude -p \"query\" --output-format json\n--input-format\nSpecify input format for print mode (options:\ntext\n,\nstream-json\n)\nclaude -p --output-format json --input-format stream-json\n--verbose\nEnable verbose logging, shows full turn-by-turn output (helpful for debugging in both print and interactive modes)\nclaude --verbose\n--max-turns\nLimit the number of agentic turns in non-interactive mode\nclaude -p --max-turns 3 \"query\"\n--model\nSets the model for the current session with an alias for the latest model (\nsonnet\nor\nopus\n) or a model’s full name\nclaude --model claude-sonnet-4-20250514\n--permission-prompt-tool\nSpecify an MCP tool to handle permission prompts in non-interactive mode\nclaude -p --permission-prompt-tool mcp_auth_tool \"query\"\n--resume\nResume a specific session by ID, or by choosing in interactive mode\nclaude --resume abc123 \"query\"\n--continue\nLoad the most recent conversation in the current directory\nclaude --continue\n--dangerously-skip-permissions\nSkip permission prompts (use with caution)\nclaude --dangerously-skip-permissions\nThe\n--output-format json\nflag is particularly useful for scripting and\nautomation, allowing you to parse Claude’s responses programmatically.\nFor detailed information about print mode (\n-p\n) including output formats,\nstreaming, verbose logging, and programmatic usage, see the\nSDK documentation\n.\n​\nSee also\nInteractive mode\n- Shortcuts, input modes, and interactive features\nSlash commands\n- Interactive session commands\nQuickstart guide\n- Getting started with Claude Code\nCommon workflows\n- Advanced workflows and patterns\nSettings\n- Configuration options\nSDK documentation\n- Programmatic usage and integrations\nWas this page helpful?\nYes\nNo\nCosts\nInteractive mode\nOn this page\nCLI commands\nCLI flags\nSee also",
  "links": [
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/legal-and-compliance",
      "text": "Legal and compliance"
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-23T15:07:31.902846",
    "word_count": 560,
    "link_count": 1,
    "content_length": 3974
  }
}