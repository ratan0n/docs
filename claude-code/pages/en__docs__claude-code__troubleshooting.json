{
  "url": "https://docs.anthropic.com/en/docs/claude-code/troubleshooting",
  "title": "Troubleshooting - Anthropic",
  "text": "Anthropic\nhome page\nEnglish\nSearch...\nSearch...\nNavigation\nBuild with Claude\nTroubleshooting\nWelcome\nDeveloper Guide\nAPI Guide\nClaude Code\nModel Context Protocol (MCP)\nResources\nRelease Notes\nDocumentation\nDeveloper Discord\nSupport\nGetting started\nOverview\nSet up\nQuickstart\nMemory management\nCommon workflows\nBuild with Claude\nAdd Claude Code to your IDE\nModel Context Protocol (MCP)\nGitHub Actions\nClaude Code SDK\nTroubleshooting\nDeployment\nOverview\nAmazon Bedrock\nGoogle Vertex AI\nCorporate proxy\nLLM gateway\nDevelopment containers\nAdministration\nIdentity and Access Management\nSecurity\nMonitoring\nCosts\nReference\nCLI reference\nInteractive mode\nSlash commands\nSettings\nResources\nData usage\nLegal and compliance\n​\nCommon installation issues\n​\nLinux permission issues\nWhen installing Claude Code with npm, you may encounter permission errors if your npm global prefix is not user writable (eg.\n/usr\n, or\n/usr/local\n).\n​\nRecommended solution: Create a user-writable npm prefix\nThe safest approach is to configure npm to use a directory within your home folder:\n# First, save a list of your existing global packages for later migration\nnpm\nlist\n-g\n--depth\n=\n0\n>\n~/npm-global-packages.txt\n# Create a directory for your global packages\nmkdir\n-p\n~/.npm-global\n# Configure npm to use the new directory path\nnpm\nconfig\nset\nprefix ~/.npm-global\n# Note: Replace ~/.bashrc with ~/.zshrc, ~/.profile, or other appropriate file for your shell\necho\n'export PATH=~/.npm-global/bin:$PATH'\n>>\n~/.bashrc\n# Apply the new PATH setting\nsource\n~/.bashrc\n# Now reinstall Claude Code in the new location\nnpm\ninstall\n-g\n@anthropic-ai/claude-code\n# Optional: Reinstall your previous global packages in the new location\n# Look at ~/npm-global-packages.txt and install packages you want to keep\nThis solution is recommended because it:\nAvoids modifying system directory permissions\nCreates a clean, dedicated location for your global npm packages\nFollows security best practices\n​\nSystem Recovery: If you have run commands that change ownership and permissions of system files or similar\nIf you’ve already run a command that changed system directory permissions (such as\nsudo chown -R $USER:$(id -gn) /usr && sudo chmod -R u+w /usr\n) and your system is now broken (for example, if you see\nsudo: /usr/bin/sudo must be owned by uid 0 and have the setuid bit set\n), you’ll need to perform recovery steps.\nUbuntu/Debian Recovery Method:\nWhile rebooting, hold\nSHIFT\nto access the GRUB menu\nSelect “Advanced options for Ubuntu/Debian”\nChoose the recovery mode option\nSelect “Drop to root shell prompt”\nRemount the filesystem as writable:\nmount\n-o\nremount,rw /\nFix permissions:\n# Restore root ownership\nchown\n-R\nroot:root /usr\nchmod\n-R\n755\n/usr\n# Ensure /usr/local is owned by your user for npm packages\nchown\n-R\nYOUR_USERNAME:YOUR_USERNAME /usr/local\n# Set setuid bit for critical binaries\nchmod\nu+s /usr/bin/sudo\nchmod\n4755\n/usr/bin/sudo\nchmod\nu+s /usr/bin/su\nchmod\nu+s /usr/bin/passwd\nchmod\nu+s /usr/bin/newgrp\nchmod\nu+s /usr/bin/gpasswd\nchmod\nu+s /usr/bin/chsh\nchmod\nu+s /usr/bin/chfn\n# Fix sudo configuration\nchown\nroot:root /usr/libexec/sudo/sudoers.so\nchmod\n4755\n/usr/libexec/sudo/sudoers.so\nchown\nroot:root /etc/sudo.conf\nchmod\n644\n/etc/sudo.conf\nReinstall affected packages (optional but recommended):\n# Save list of installed packages\ndpkg --get-selections\n>\n/tmp/installed_packages.txt\n# Reinstall them\nawk\n'{print $1}'\n/tmp/installed_packages.txt\n|\nxargs\n-r\napt-get\ninstall\n--reinstall\n-y\nReboot:\nreboot\nAlternative Live USB Recovery Method:\nIf the recovery mode doesn’t work, you can use a live USB:\nBoot from a live USB (Ubuntu, Debian, or any Linux distribution)\nFind your system partition:\nlsblk\nMount your system partition:\nsudo\nmount\n/dev/sdXY /mnt\n# replace sdXY with your actual system partition\nIf you have a separate boot partition, mount it too:\nsudo\nmount\n/dev/sdXZ /mnt/boot\n# if needed\nChroot into your system:\n# For Ubuntu/Debian:\nsudo\nchroot\n/mnt\n# For Arch-based systems:\nsudo\narch-chroot /mnt\nFollow steps 6-8 from the Ubuntu/Debian recovery method above\nAfter restoring your system, follow the recommended solution above to set up a user-writable npm prefix.\n​\nAuto-updater issues\nIf Claude Code can’t update automatically, it may be due to permission issues with your npm global prefix directory. Follow the\nrecommended solution\nabove to fix this.\nIf you prefer to disable the auto-updater instead, you can use:\nIf you prefer to disable the auto-updater instead , you can\nset the\nDISABLE_AUTOUPDATER\nenvironment variable\nto\n1\n​\nPermissions and authentication\n​\nRepeated permission prompts\nIf you find yourself repeatedly approving the same commands, you can allow specific tools\nto run without approval using the\n/permissions\ncommand. See\nPermissions docs\n.\n​\nAuthentication issues\nIf you’re experiencing authentication problems:\nRun\n/logout\nto sign out completely\nClose Claude Code\nRestart with\nclaude\nand complete the authentication process again\nIf problems persist, try:\nrm\n-rf\n~/.config/claude-code/auth.json\nclaude\nThis removes your stored authentication information and forces a clean login.\n​\nPerformance and stability\n​\nHigh CPU or memory usage\nClaude Code is designed to work with most development environments, but may consume significant resources when processing large codebases. If you’re experiencing performance issues:\nUse\n/compact\nregularly to reduce context size\nClose and restart Claude Code between major tasks\nConsider adding large build directories to your\n.gitignore\nfile\n​\nCommand hangs or freezes\nIf Claude Code seems unresponsive:\nPress Ctrl+C to attempt to cancel the current operation\nIf unresponsive, you may need to close the terminal and restart\n​\nESC key not working in JetBrains (IntelliJ, PyCharm, etc.) terminals\nIf you’re using Claude Code in JetBrains terminals and the ESC key doesn’t interrupt the agent as expected, this is likely due to a keybinding clash with JetBrains’ default shortcuts.\nTo fix this issue:\nGo to Settings → Tools → Terminal\nClick the “Configure terminal keybindings” hyperlink next to “Override IDE Shortcuts”\nWithin the terminal keybindings, scroll down to “Switch focus to Editor” and delete that shortcut\nThis will allow the ESC key to properly function for canceling Claude Code operations instead of being captured by PyCharm’s “Switch focus to Editor” action.\n​\nGetting more help\nIf you’re experiencing issues not covered here:\nUse the\n/bug\ncommand within Claude Code to report problems directly to Anthropic\nCheck the\nGitHub repository\nfor known issues\nRun\n/doctor\nto check the health of your Claude Code installation\nWas this page helpful?\nYes\nNo\nClaude Code SDK\nOverview\nOn this page\nCommon installation issues\nLinux permission issues\nRecommended solution: Create a user-writable npm prefix\nSystem Recovery: If you have run commands that change ownership and permissions of system files or similar\nAuto-updater issues\nPermissions and authentication\nRepeated permission prompts\nAuthentication issues\nPerformance and stability\nHigh CPU or memory usage\nCommand hangs or freezes\nESC key not working in JetBrains (IntelliJ, PyCharm, etc.) terminals\nGetting more help",
  "links": [
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/corporate-proxy",
      "text": "Corporate proxy"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/llm-gateway",
      "text": "LLM gateway"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/devcontainer",
      "text": "Development containers"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/iam",
      "text": "Identity and Access Management"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/security",
      "text": "Security"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/monitoring-usage",
      "text": "Monitoring"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/costs",
      "text": "Costs"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/cli-reference",
      "text": "CLI reference"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/interactive-mode",
      "text": "Interactive mode"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/slash-commands",
      "text": "Slash commands"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/settings",
      "text": "Settings"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/data-usage",
      "text": "Data usage"
    },
    {
      "url": "https://docs.anthropic.com/en/docs/claude-code/legal-and-compliance",
      "text": "Legal and compliance"
    },
    {
      "url": "https://docs.anthropic.com/_sites/docs.anthropic.com/en/docs/claude-code/troubleshooting",
      "text": "recommended solution"
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-23T15:07:28.561948",
    "word_count": 1061,
    "link_count": 14,
    "content_length": 7131
  }
}