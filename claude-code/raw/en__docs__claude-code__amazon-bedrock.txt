URL: https://docs.anthropic.com/en/docs/claude-code/amazon-bedrock
TITLE: Claude Code on Amazon Bedrock - Anthropic
SCRAPED: 2025-06-23T15:07:28.983600
WORD_COUNT: 539
LINKS_FOUND: 13
================================================================================

Anthropic
home page
English
Search...
Search...
Navigation
Deployment
Claude Code on Amazon Bedrock
Welcome
Developer Guide
API Guide
Claude Code
Model Context Protocol (MCP)
Resources
Release Notes
Documentation
Developer Discord
Support
Getting started
Overview
Set up
Quickstart
Memory management
Common workflows
Build with Claude
Add Claude Code to your IDE
Model Context Protocol (MCP)
GitHub Actions
Claude Code SDK
Troubleshooting
Deployment
Overview
Amazon Bedrock
Google Vertex AI
Corporate proxy
LLM gateway
Development containers
Administration
Identity and Access Management
Security
Monitoring
Costs
Reference
CLI reference
Interactive mode
Slash commands
Settings
Resources
Data usage
Legal and compliance
​
Prerequisites
Before configuring Claude Code with Bedrock, ensure you have:
An AWS account with Bedrock access enabled
Access to desired Claude models (e.g., Claude Sonnet 4) in Bedrock
AWS CLI installed and configured (optional - only needed if you don’t have another mechanism for getting credentials)
Appropriate IAM permissions
​
Setup
​
1. Enable model access
First, ensure you have access to the required Claude models in your AWS account:
Navigate to the
Amazon Bedrock console
Go to
Model access
in the left navigation
Request access to desired Claude models (e.g., Claude Sonnet 4)
Wait for approval (usually instant for most regions)
​
2. Configure AWS credentials
Claude Code uses the default AWS SDK credential chain. Set up your credentials using one of these methods:
Claude Code does not currently support dynamic credential management (such as automatically calling
aws sts assume-role
). You will need to run
aws configure
,
aws sso login
, or set the
AWS_
environment variables yourself.
Option A: AWS CLI configuration
aws configure
Option B: Environment variables (access key)
export
AWS_ACCESS_KEY_ID
=
your-access-key-id
export
AWS_SECRET_ACCESS_KEY
=
your-secret-access-key
export
AWS_SESSION_TOKEN
=
your-session-token
Option C: Environment variables (SSO profile)
aws sso login
--profile
=
<
your-profile-name
>
export
AWS_PROFILE
=
your-profile-name
​
3. Configure Claude Code
Set the following environment variables to enable Bedrock:
# Enable Bedrock integration
export
CLAUDE_CODE_USE_BEDROCK
=
1
export
AWS_REGION
=
us-east-1
# or your preferred region
AWS_REGION
is a required environment variable. Claude Code does not read from the
.aws
config file for this setting.
​
4. Model configuration
Claude Code uses these default models for Bedrock:
Model type
Default value
Primary model
us.anthropic.claude-3-7-sonnet-20250219-v1:0
Small/fast model
us.anthropic.claude-3-5-haiku-20241022-v1:0
To customize models, use one of these methods:
# Using inference profile ID
export
ANTHROPIC_MODEL
=
'us.anthropic.claude-opus-4-20250514-v1:0'
export
ANTHROPIC_SMALL_FAST_MODEL
=
'us.anthropic.claude-3-5-haiku-20241022-v1:0'
# Using application inference profile ARN
export
ANTHROPIC_MODEL
=
'arn:aws:bedrock:us-east-2:your-account-id:application-inference-profile/your-model-id'
​
IAM configuration
Create an IAM policy with the required permissions for Claude Code.
For details, see
Bedrock IAM documentation
.
We recommend creating a dedicated AWS account for Claude Code to simplify cost tracking and access control.
​
Troubleshooting
If you encounter region issues:
Check model availability:
aws bedrock list-inference-profiles --region your-region
Switch to a supported region:
export AWS_REGION=us-east-1
Consider using inference profiles for cross-region access
If you receive an error “on-demand throughput isn’t supported”:
Specify the model as an
inference profile
ID
​
Additional resources
Bedrock documentation
Bedrock pricing
Bedrock inference profiles
Claude Code on Amazon Bedrock: Quick Setup Guide
Was this page helpful?
Yes
No
Overview
Google Vertex AI
On this page
Prerequisites
Setup
1. Enable model access
2. Configure AWS credentials
3. Configure Claude Code
4. Model configuration
IAM configuration
Troubleshooting
Additional resources