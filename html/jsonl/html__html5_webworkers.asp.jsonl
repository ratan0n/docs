{"messages": [{"role": "system", "content": "You are a helpful assistant with knowledge about general topics."}, {"role": "user", "content": "What information do you have about HTML Web Workers API?"}, {"role": "assistant", "content": "Menu Search field   Sign In  +1 Get Certified For Teachers Spaces Plus Get Certified For Teachers Spaces Plus   HTML CSS JAVASCRIPT SQL PYTHON JAVA PHP HOW TO W3.CSS C C++ C# BOOTSTRAP REACT MYSQL JQUERY EXCEL XML DJANGO NUMPY PANDAS NODEJS DSA TYPESCRIPT ANGULAR GIT POSTGRESQL MONGODB ASP AI R GO KOTLIN SASS VUE GEN AI SCIPY CYBERSECURITY DATA SCIENCE INTRO TO PROGRAMMING BASH RUST HTML Tutorial HTML HOME HTML Introduction HTML Editors HTML Basic HTML Elements HTML Attributes HTML Headings HTML Paragraphs HTML Styles HTML Formatting HTML Quotations HTML Comments HTML Colors Colors RGB HEX HSL HTML CSS HTML Links Links Link Colors Link Bookmarks HTML Images Images Image Map Background Images The Picture Element HTML Favicon HTML Page Title HTML Tables HTML Tables Table Borders Table Sizes Table Headers Padding & Spacing Colspan & Rowspan Table Styling Table Colgroup HTML Lists Lists Unordered Lists Ordered Lists Other Lists HTML Block & Inline HTML Div HTML Classes HTML Id HTML Iframes HTML JavaScript HTML File Paths HTML Head HTML Layout HTML Responsive HTML Computercode HTML Semantics HTML Style Guide HTML Entities HTML Symbols HTML Emojis HTML Charsets HTML URL Encode HTML vs. XHTML HTML Forms HTML Forms HTML Form Attributes HTML Form Elements HTML Input Types HTML Input Attributes Input Form Attributes HTML Graphics HTML Canvas HTML SVG HTML Media HTML Media HTML Video HTML Audio HTML Plug-ins HTML YouTube HTML APIs HTML Web APIs HTML Geolocation HTML Drag and Drop HTML Web Storage HTML Web Workers HTML SSE HTML Examples HTML Examples HTML Editor HTML Quiz HTML Exercises HTML Website HTML Syllabus HTML Study Plan HTML Interview Prep HTML Bootcamp HTML Certificate HTML Summary HTML Accessibility HTML References HTML Tag List HTML Attributes HTML Global Attributes HTML Browser Support HTML Events HTML Colors HTML Canvas HTML Audio/Video HTML Doctypes HTML Character Sets HTML URL Encode HTML Lang Codes HTTP Messages HTTP Methods PX to EM Converter Keyboard Shortcuts HTML Web Workers API  Previous Next  A web worker is an external JavaScript file that runs in the background, without affecting the performance of the page. What is a Web Worker? When executing scripts in an HTML page, the page becomes unresponsive until the script is finished. A web worker is an external JavaScript file that runs in the background, independently of other scripts, without affecting the performance of the page. You can continue to do whatever you want: clicking, selecting things, etc., while the web worker runs in the background. Web workers are useful for heavy code that can't be run on the main thread, without causing long tasks that make the page unresponsive. Browser Support The numbers in the table specify the first browser version that fully support the Web Workers API. API Web Workers 4.0 10.0 3.5 4.0 11.5 Web Workers API Example The example below creates a simple web worker that count numbers in the background: Example Count numbers: Start Worker Stop Worker Try it Yourself  Note: Normally web workers are not used for such simple scripts, but for more CPU intensive tasks! Check Web Worker API Support Before using web worker, we can quickly check browser support: Example Test browser support: <script> const x = document.getElementById(\"result\"); if(typeof(Worker) !== \"undefined\") { x.innerHTML = \"Your browser support Web Workers!\"; } else { x.innerHTML = \"Sorry, your browser does not support Web Workers.\"; } </script> Try it Yourself  Create a .js Web Worker File Now, let's create a web worker in an external JavaScript file. Here we create a script that counts. The script is stored in the \"demo_workers.js\" file: var i = 0; function timedCount() { i = i + 1; postMessage(i); setTimeout(\"timedCount()\",500); } timedCount(); Note: The important part of the code above is the postMessage() method - which is used to post messages back to the HTML page. Create a Web Worker Object Once we have created the .js web worker file, we can call it from an HT"}]}
