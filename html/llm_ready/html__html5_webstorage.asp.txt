# HTML Web Storage API

Source: https://www.w3schools.com/html/html5_webstorage.asp
Last Updated: 2025-06-23T15:48:46.217439

---

Menu Search field   Sign In  +1 Get Certified For Teachers Spaces Plus Get Certified For Teachers Spaces Plus   HTML CSS JAVASCRIPT SQL PYTHON JAVA PHP HOW TO W3.CSS C C++ C# BOOTSTRAP REACT MYSQL JQUERY EXCEL XML DJANGO NUMPY PANDAS NODEJS DSA TYPESCRIPT ANGULAR GIT POSTGRESQL MONGODB ASP AI R GO KOTLIN SASS VUE GEN AI SCIPY CYBERSECURITY DATA SCIENCE INTRO TO PROGRAMMING BASH RUST HTML Tutorial HTML HOME HTML Introduction HTML Editors HTML Basic HTML Elements HTML Attributes HTML Headings HTML Paragraphs HTML Styles HTML Formatting HTML Quotations HTML Comments HTML Colors Colors RGB HEX HSL HTML CSS HTML Links Links Link Colors Link Bookmarks HTML Images Images Image Map Background Images The Picture Element HTML Favicon HTML Page Title HTML Tables HTML Tables Table Borders Table Sizes Table Headers Padding & Spacing Colspan & Rowspan Table Styling Table Colgroup HTML Lists Lists Unordered Lists Ordered Lists Other Lists HTML Block & Inline HTML Div HTML Classes HTML Id HTML Iframes HTML JavaScript HTML File Paths HTML Head HTML Layout HTML Responsive HTML Computercode HTML Semantics HTML Style Guide HTML Entities HTML Symbols HTML Emojis HTML Charsets HTML URL Encode HTML vs. XHTML HTML Forms HTML Forms HTML Form Attributes HTML Form Elements HTML Input Types HTML Input Attributes Input Form Attributes HTML Graphics HTML Canvas HTML SVG HTML Media HTML Media HTML Video HTML Audio HTML Plug-ins HTML YouTube HTML APIs HTML Web APIs HTML Geolocation HTML Drag and Drop HTML Web Storage HTML Web Workers HTML SSE HTML Examples HTML Examples HTML Editor HTML Quiz HTML Exercises HTML Website HTML Syllabus HTML Study Plan HTML Interview Prep HTML Bootcamp HTML Certificate HTML Summary HTML Accessibility HTML References HTML Tag List HTML Attributes HTML Global Attributes HTML Browser Support HTML Events HTML Colors HTML Canvas HTML Audio/Video HTML Doctypes HTML Character Sets HTML URL Encode HTML Lang Codes HTTP Messages HTTP Methods PX to EM Converter Keyboard Shortcuts HTML Web Storage API  Previous Next  HTML Web Storage API; better than cookies. What is HTML Web Storage? With web storage, applications can store data locally within the user's browser. Before HTML5, application data had to be stored in cookies, included in every server request. Web storage is more secure, and large amounts of data can be stored locally, without affecting website performance. Unlike cookies, the storage limit is far larger (at least 5MB) and information is never transferred to the server. Web storage is per origin (per domain and protocol). All pages, from one origin, can store and access the same data. Web Storage API Objects Web storage provides two objects for storing data in the browser: window.localStorage - stores data with no expiration date (data is not lost when the browser tab is closed) window.sessionStorage - stores data for one session (data is lost when the browser tab is closed) Browser Support The numbers in the table specify the first browser version that fully supports Web Storage. API localStorage 4.0 8.0 3.5 4.0 11.5 sessionStorage 4.0 8.0 3.5 4.0 11.5 Test Web Storage API Support Before using web storage, we can quickly check browser support for localStorage and sessionStorage: Example Test browser support: <script> const x = document.getElementById("result"); if (typeof(Storage) !== "undefined") { x.innerHTML = "Your browser supports Web storage!"; } else { x.innerHTML = "Sorry, no Web storage support!"; } </script> Try it Yourself  The localStorage Object The localStorage object stores the data with no expiration date. The data will not be lost when the browser is closed, and will be available the next day, week, or year. Example Use localStorage to set and retrieve name and value pairs: <script> const x = document.getElementById("result"); if (typeof(Storage) !== "undefined") { // Store localStorage.setItem("lastname", "Smith"); localStorage.setItem("bgcolor", "yellow"); // Retrieve x.innerHTML = localStorage.getItem("lastname"); x.style.backgroundColor = localStorage.getItem("bgcolor"); } else { x.innerHTML = "Sorry, no Web storage support!"; } </script> Try it Yourself  Example explained: Use the localStorage.setItem() method to create name/value pairs Use the localStorage.getItem() method to retrieve the values set Retrieve the value of "lastname" and insert it into an element with id="result" Retrieve the value of "bgcolor" and insert it into the style backgroundColor of the element with id="result" The syntax for removing the "lastname" localStorage item is as follows: localStorage.removeItem("lastname"); Note: Name/value pairs are always stored as strings. Remember to convert them to another format when needed! Counting Clicks with localStorage The following example counts the number of times a user has clicked a button. In this code the value string is converted to a number to be able to increase the counter: Example <script> function clickCounter() { const x = document.getElementById("result"); if (typeof(Storage) !== "undefined") { if (localStorage.clickcount) { localStorage.clickcount = Number(localStorage.clickcount)+1; } else { localStorage.clickcount = 1; } x.innerHTML = "You have clicked the button " + localStorage.clickcount + " time(s)!"; } else { x.innerHTML = "Sorry, no Web storage support!"; } } </script> Try it Yourself  The sessionStorage Object The sessionStorage object is equal to the localStorage object, except that it stores the data for only one session! The data is deleted when the user closes the specific browser tab. Counting Clicks with sessionStorage The following example counts the number of times a user has clicked a button, in the current session: Example <script> function clickCounter() { const x = document.getElementById("result"); if (typeof(Storage) !== "undefined") { if (sessionStorage.clickcount) { sessionStorage.clickcount = Number(sessionStorage.clickcount)+1; } else { sessionStorage.clickcount = 1; } x.innerHTML = "You have clicked the button " + sessionStorage.clickcount + " time(s) in this session!"; } else { x.innerHTML = "Sorry, no Web storage support!"; } } </script> Try it Yourself   Previous Next   +1 Track your progress - it's free! Log in Sign Up COLOR PICKER PLUS SPACES GET CERTIFIED FOR TEACHERS FOR BUSINESS CONTACT US  Contact Sales If you want to use W3Schools services as an educational institution, team or enterprise, send us an e-mail: sales@w3schools.com Report Error If you want to report an error, or if you want to make a suggestion, send us an e-mail: help@w3schools.com Top Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial SQL Tutorial Python Tutorial W3.CSS Tutorial Bootstrap Tutorial PHP Tutorial Java Tutorial C++ Tutorial jQuery Tutorial Top References HTML Reference CSS Reference JavaScript Reference SQL Reference Python Reference W3.CSS Reference Bootstrap Reference PHP Reference HTML Colors Java Reference Angular Reference jQuery Reference Top Examples HTML Examples CSS Examples JavaScript Examples How To Examples SQL Examples Python Examples W3.CSS Examples Bootstrap Examples PHP Examples Java Examples XML Examples jQuery Examples Get Certified HTML Certificate CSS Certificate JavaScript Certificate Front End Certificate SQL Certificate Python Certificate PHP Certificate jQuery Certificate Java Certificate C++ Certificate C# Certificate XML Certificate     FORUM ABOUT ACADEMY W3Schools is optimized for learning and training. Examples might be simplified to improve reading and learning. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using W3Schools, you agree to have read and accepted our terms of use , cookie and privacy policy . Copyright 1999-2025 by Refsnes Data. All Rights Reserved. W3Schools is Powered by W3.CSS .

---
Document ID: html__html5_webstorage.asp