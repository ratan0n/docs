{
  "id": "html__html_accessibility.asp",
  "title": "HTML Accessibility",
  "url": "https://www.w3schools.com/html/html_accessibility.asp",
  "categories": [],
  "text": "Menu Search field   Sign In  +1 Get Certified For Teachers Spaces Plus Get Certified For Teachers Spaces Plus   HTML CSS JAVASCRIPT SQL PYTHON JAVA PHP HOW TO W3.CSS C C++ C# BOOTSTRAP REACT MYSQL JQUERY EXCEL XML DJANGO NUMPY PANDAS NODEJS DSA TYPESCRIPT ANGULAR GIT POSTGRESQL MONGODB ASP AI R GO KOTLIN SASS VUE GEN AI SCIPY CYBERSECURITY DATA SCIENCE INTRO TO PROGRAMMING BASH RUST HTML Tutorial HTML HOME HTML Introduction HTML Editors HTML Basic HTML Elements HTML Attributes HTML Headings HTML Paragraphs HTML Styles HTML Formatting HTML Quotations HTML Comments HTML Colors Colors RGB HEX HSL HTML CSS HTML Links Links Link Colors Link Bookmarks HTML Images Images Image Map Background Images The Picture Element HTML Favicon HTML Page Title HTML Tables HTML Tables Table Borders Table Sizes Table Headers Padding & Spacing Colspan & Rowspan Table Styling Table Colgroup HTML Lists Lists Unordered Lists Ordered Lists Other Lists HTML Block & Inline HTML Div HTML Classes HTML Id HTML Iframes HTML JavaScript HTML File Paths HTML Head HTML Layout HTML Responsive HTML Computercode HTML Semantics HTML Style Guide HTML Entities HTML Symbols HTML Emojis HTML Charsets HTML URL Encode HTML vs. XHTML HTML Forms HTML Forms HTML Form Attributes HTML Form Elements HTML Input Types HTML Input Attributes Input Form Attributes HTML Graphics HTML Canvas HTML SVG HTML Media HTML Media HTML Video HTML Audio HTML Plug-ins HTML YouTube HTML APIs HTML Web APIs HTML Geolocation HTML Drag and Drop HTML Web Storage HTML Web Workers HTML SSE HTML Examples HTML Examples HTML Editor HTML Quiz HTML Exercises HTML Website HTML Syllabus HTML Study Plan HTML Interview Prep HTML Bootcamp HTML Certificate HTML Summary HTML Accessibility HTML References HTML Tag List HTML Attributes HTML Global Attributes HTML Browser Support HTML Events HTML Colors HTML Canvas HTML Audio/Video HTML Doctypes HTML Character Sets HTML URL Encode HTML Lang Codes HTTP Messages HTTP Methods PX to EM Converter Keyboard Shortcuts HTML Accessibility  Previous HTML Reference  HTML Accessibility Always write HTML code with accessibility in mind! Provide the user a good way to navigate and interact with your site. Make your HTML code as semantic as possible. Semantic HTML Semantic HTML means using correct HTML elements for their correct purpose as much as possible. Semantic elements are elements with a meaning; if you need a button, use the <button> element (and not a <div> element). Semantic <button>Report an Error</button> Try it Yourself  Non-semantic <div>Report an Error</div> Try it Yourself  Semantic HTML gives context to screen readers, which read the contents of a page out loud. With the button example in mind: buttons have more suitable styling by default a screen reader identifies it as a button focusable clickable A button is also accessible for people relying on keyboard-only navigation; it can be clickable with both mouse and keys, and it can be tabbed between (using the tab key on the keyboard). Examples of non-semantic elements: <div> and <span> - Tells nothing about its content. Examples of semantic elements: <form> , <table> , and <article> - Clearly defines its content. Headings Are Important Headings are defined with the <h1> to <h6> tags: Example <h1>Heading 1</h1> <h2>Heading 2</h2> <h3>Heading 3</h3> <h4>Heading 4</h4> <h5>Heading 5</h5> <h6>Heading 6</h6> Try it Yourself  Search engines use the headings to index the structure and content of your web pages. Users skim your pages by its headings. It is important to use headings to show the document structure and the relationships between different sections. Screen readers also use headings as a navigational tool. The different types of heading specify the outline of the page. <h1> headings should be used for main headings, followed by <h2> headings, then the less important <h3> , and so on. Note: Use HTML headings for headings only. Don't use headings to make text BIG or bold . Alternative Text The alt attribute provides an alternate text for an image, if the user for some reason cannot view it (because of slow connection, an error in the src attribute, or if the user uses a screen reader). The value of the alt attribute should describe the image: Example <img src=\"img_chania.jpg\" alt=\"A narrow city street with flowers in Chania\"> Try it Yourself  If a browser cannot find an image, it will display the value of the alt attribute: Example <img src=\"wrongname.gif\" alt=\"A narrow city street with flowers in Chania\"> Try it Yourself  Declare the Language You should always include the lang attribute inside the <html> tag, to declare the language of the Web page. This is meant to assist search engines and browsers. The following example specifies English as the language: <!DOCTYPE html> <html lang=\"en\"> <body> ... </body> </html> Use Clear Language Always use a clear language, that is easy to understand. Also try to avoid characters that cannot be read clearly by a screen reader. For example: Keep sentences as short as possible Avoid dashes. Instead of writing 1-3, write 1 to 3 Avoid abbreviations. Instead of writing Feb, write February Avoid slang words Create Good Link Text A link text should explain clearly what information the reader will get by clicking on that link. Examples of good and bad links: Good Find out more about the HTML language Read more about how to eat healthy Buy tickets to Mars here Try it Yourself  Bad Click here Read more.. Buy tickets to Mars here Try it Yourself  Note: This page is an introduction in web accessibility. Visit our Accessibility Tutorial for more details.  Previous HTML Reference   +1 Track your progress - it's free! Log in Sign Up COLOR PICKER PLUS SPACES GET CERTIFIED FOR TEACHERS FOR BUSINESS CONTACT US  Contact Sales If you want to use W3Schools services as an educational institution, team or enterprise, send us an e-mail: sales@w3schools.com Report Error If you want to report an error, or if you want to make a suggestion, send us an e-mail: help@w3schools.com Top Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial SQL Tutorial Python Tutorial W3.CSS Tutorial Bootstrap Tutorial PHP Tutorial Java Tutorial C++ Tutorial jQuery Tutorial Top References HTML Reference CSS Reference JavaScript Reference SQL Reference Python Reference W3.CSS Reference Bootstrap Reference PHP Reference HTML Colors Java Reference Angular Reference jQuery Reference Top Examples HTML Examples CSS Examples JavaScript Examples How To Examples SQL Examples Python Examples W3.CSS Examples Bootstrap Examples PHP Examples Java Examples XML Examples jQuery Examples Get Certified HTML Certificate CSS Certificate JavaScript Certificate Front End Certificate SQL Certificate Python Certificate PHP Certificate jQuery Certificate Java Certificate C++ Certificate C# Certificate XML Certificate     FORUM ABOUT ACADEMY W3Schools is optimized for learning and training. Examples might be simplified to improve reading and learning. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using W3Schools, you agree to have read and accepted our terms of use , cookie and privacy policy . Copyright 1999-2025 by Refsnes Data. All Rights Reserved. W3Schools is Powered by W3.CSS .",
  "chunks": [
    {
      "chunk_id": 1,
      "text": "Menu Search field   Sign In  +1 Get Certified For Teachers Spaces Plus Get Certified For Teachers Spaces Plus   HTML CSS JAVASCRIPT SQL PYTHON JAVA PHP HOW TO W3.CSS C C++ C# BOOTSTRAP REACT MYSQL JQUERY EXCEL XML DJANGO NUMPY PANDAS NODEJS DSA TYPESCRIPT ANGULAR GIT POSTGRESQL MONGODB ASP AI R GO KOTLIN SASS VUE GEN AI SCIPY CYBERSECURITY DATA SCIENCE INTRO TO PROGRAMMING BASH RUST HTML Tutorial HTML HOME HTML Introduction HTML Editors HTML Basic HTML Elements HTML Attributes HTML Headings HTML Paragraphs HTML Styles HTML Formatting HTML Quotations HTML Comments HTML Colors Colors RGB HEX HSL HTML CSS HTML Links Links Link Colors Link Bookmarks HTML Images Images Image Map Background Images The Picture Element HTML Favicon HTML Page Title HTML Tables HTML Tables Table Borders Table Sizes Table Headers Padding & Spacing Colspan & Rowspan Table Styling Table Colgroup HTML Lists Lists Unordered Lists Ordered Lists Other Lists HTML Block & Inline HTML Div HTML Classes HTML Id HTML Iframes HTML JavaScript HTML File Paths HTML Head HTML Layout HTML Responsive HTML Computercode HTML Semantics HTML Style Guide HTML Entities HTML Symbols HTML Emojis HTML Charsets HTML URL Encode HTML vs. XHTML HTML Forms HTML Forms HTML Form Attributes HTML Form Elements HTML Input Types HTML Input Attributes Input Form Attributes HTML Graphics HTML Canvas HTML SVG HTML Media HTML Media HTML Video HTML Audio HTML Plug-ins HTML YouTube HTML APIs HTML Web APIs HTML Geolocation HTML Drag and Drop HTML Web Storage HTML Web Workers HTML SSE HTML Examples HTML Examples HTML Editor HTML Quiz HTML Exercises HTML Website HTML Syllabus HTML Study Plan HTML Interview Prep HTML Bootcamp HTML Certificate HTML Summary HTML Accessibility HTML References HTML Tag List HTML Attributes HTML Global Attributes HTML Browser Support HTML Events HTML Colors HTML Canvas HTML Audio/Video HTML Doctypes HTML Character Sets HTML URL Encode HTML Lang Codes HTTP Messages HTTP Methods PX to EM Converter Keyboard Shortcuts HTML Accessibility  Previous HTML Reference  HTML Accessibility Always write HTML code with accessibility in mind! Provide the user a good way to navigate and interact with your site. Make your HTML code as semantic as possible. Semantic HTML Semantic HTML means using correct HTML elements for their correct purpose as much as possible. Semantic elements are elements with a meaning; if you need a button, use the <button> element (and not a <div> element). Semantic <button>Report an Error</button> Try it Yourself  Non-semantic <div>Report an Error</div> Try it Yourself  Semantic HTML gives context to screen readers, which read the contents of a page out loud. With the button example in mind: buttons have more suitable styling by default a screen reader identifies it as a button focusable clickable A button is also accessible for people relying on keyboard-only navigation; it can be clickable with both mouse and keys, and it can be tabbed between (using the tab key on the keyboard). Examples of non-semantic elements: <div> and <span> - Tells nothing about its content. Examples of semantic elements: <form> , <table> , and <article> - Clearly defines its content. Headings Are Important Headings are defined with the <h1> to <h6> tags: Example <h1>Heading 1</h1> <h2>Heading 2</h2> <h3>Heading 3</h3> <h4>Heading 4</h4> <h5>Heading 5</h5> <h6>Heading 6</h6> Try it Yourself  Search engines use the headings to index the structure and content of your web pages. Users skim your pages by its headings. It is important to use headings to show the document structure and the relationships between different sections. Screen readers also use headings as a navigational tool. The different types of heading specify the outline of the page. <h1> headings should be used for main headings, followed by <h2> headings, then the less important <h3> , and so on. Note: Use HTML headings for headings only. Don't use headings to make text BIG or bold . Alternative Text The alt attribute provides an alternate text for an image, if the user for some reason cannot view it (because of slow connection, an error in the src attribute, or if the user uses a screen reader). The value of the alt attribute should describe the image: Example <img src=\"img_chania.jpg\" alt=\"A narrow city street with flowers in Chania\"> Try it Yourself  If a browser cannot find an image, it will display the value of the alt attribute: Example <img src=\"wrongname.gif\" alt=\"A narrow city street with flowers in Chania\"> Try it Yourself  Declare the Language You should always include the lang attribute inside the <html> tag, to declare the language of the Web page. This is meant to assist search engines and browsers. The following example specifies English as the language: <!DOCTYPE html> <html lang=\"en\"> <body> ... </body> </html> Use Clear Language Always use a clear language, that is easy to understand. Also try to avoid characters that cannot be read clearly by a screen reader. For example: Keep sentences as short as possible Avoid dashes. Instead of writing 1-3, write 1 to 3 Avoid abbreviations. Instead of writing Feb, write February Avoid slang words Create Good Link Text A link text should explain clearly what information the reader will get by clicking on that link. Examples of good and bad links: Good Find out more about the HTML language Read more about how to eat healthy Buy tickets to Mars here Try it Yourself  Bad Click here Read more.. Buy tickets to Mars here Try it Yourself  Note: This page is an introduction in web accessibility. Visit our Accessibility Tutorial for more details.  Previous HTML Reference   +1 Track your progress - it's free! Log in Sign Up COLOR PICKER PLUS SPACES GET CERTIFIED FOR TEACHERS FOR BUSINESS CONTACT US  Contact Sales If you want to use W3Schools services as an educational institution, team or enterprise, send us an e-mail: sales@w3schools.com Report Error If you want to report an error, or if you want to make a suggestion, send us an e-mail: help@w3schools.com Top Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial SQL Tutorial Python Tutorial W3.CSS Tutorial Bootstrap Tutorial PHP Tutorial Java Tutorial C++ Tutorial jQuery Tutorial Top References HTML Reference CSS Reference JavaScript Reference SQL Reference Python Reference W3.CSS Reference Bootstrap Reference PHP Reference HTML Colors Java Reference Angular Reference jQuery Reference Top Examples HTML Examples CSS Examples JavaScript Examples How To Examples SQL Examples Python Examples W3.CSS Examples Bootstrap Examples PHP Examples Java Examples XML Examples jQuery Examples Get Certified HTML Certificate CSS Certificate JavaScript Certificate Front End Certificate SQL Certificate Python Certificate PHP Certificate jQuery Certificate Java Certificate C++ Certificate C# Certificate XML Certificate     FORUM ABOUT ACADEMY W3Schools is optimized for learning and training. Examples might be simplified to improve reading and learning. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using W3Schools, you agree to have read and accepted our terms of use , cookie and privacy policy . Copyright 1999-2025 by Refsnes Data. All Rights Reserved. W3Schools is Powered by W3.CSS .",
      "title": "HTML Accessibility",
      "url": "https://www.w3schools.com/html/html_accessibility.asp",
      "word_count": 1156,
      "char_count": 7305
    }
  ],
  "metadata": {
    "scraped_at": "2025-06-23T15:48:59.228660",
    "word_count": 1156,
    "char_count": 7305,
    "chunk_count": 1
  }
}