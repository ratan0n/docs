# RATANON/MZ93-DOCUMENTATION - Part 85/112

---
**Dataset:** ratanon/mz93-documentation
**Part:** 85 of 112
**GitHub:** https://github.com/ratan0n/docs/tree/main/mz93-documentation
**Size:** ~69.9 KB
---

To open the SFTP collection agent configuration, click Build  New Configuration . Select Workflow from the Configurations dialog. When prompted to Select workflow type , select Batch . Click Add agent and select SFTP in the Collection tab in the Agent Selection dialog. Double-click the agent icon or right-click the icon and select Edit agent , to display the Agent Configuration dialog. You can configure part of the parameters in the Filename Sequence or Sort Order service tabs, see Workflow Template for more information. The Configuration view consists of the following tabs: Connection Source Advanced Security Connection Tab The Connection tab contains configuration settings related to the remote host and authentication. Open The SFTP collection agent configuration - Connection tab Setting Description Setting Description Connection Information Settings Host Primary host name or IP-address of the remote host to be connected. If a connection cannot be established to this host, the Additional Hosts, specified in the Advanced tab, are tried. File System Type Type of file system on the remote host. This information is used to construct the remote filenames. Unix - remote host using Unix file system. Default setting. Windows NT - remote host using Windows NT file system. Enable Bind Address Select this checkbox to explicitly bind a specific virtual network IP as the source of the SFTP agents connection. Bind Address This mandatory field is enabled only when the Enable Bind Address checkbox is selected. Authentication Mechanism Settings Authenticate With Choice of authentication mechanism. Both password and private key authentication are supported. Username Username for an account on the remote host, enabling the SFTP session to login. Password Password related to the specified Username. This option only applies when password authentication is enabled. Private Key When you select this option, a Select... button will appear, which opens a window where the private key may be inserted. If the private key is protected by a passphrase, the passphrase must be provided as well. This option only applies when private key authentication is enabled. For further information, see Authentication in SFTP Agents Preparations . Collection Retries Settings Enable Select this check box to enable repetitive attempts to connect and start a file transfer. When this option is selected, the agent will attempt to connect to the host as many times as is stated in the Max Retries field described below. If the connection fails, a new attempt will be made after the number of seconds entered in the Retry Interval (s) field described below. Retry Interval (s) Enter the time interval in seconds, between retries. If a connection problem occurs, the actual time interval before the first attempt to reconnect will be the time set in the Timeout field in the Advanced tab plus the time set in the Retry Interval (s) field. For the remaining attempts, the actual time interval will be the number seconds entered in this field. Max Retries Enter the maximum number of retries to connect. In case more than one connection attempt has been made, the number of used retries will be reset as soon as a file transfer is completed successfully. Note! This number does not include the original connection attempt. Restart Retries Settings Enable Select this check box to enable the agent to send a RESTART command if the connection has been broken during a file transfer. The RESTART command contains information about where in the file you want to resume the file transfer. When this option is selected, the agent will attempt to re-establish the connection, and resume the file transfer from the point in the file stated in the RESTART command, as many times as is entered in the Max RESTARTS field described below. When a connection has been re-established, a RESTART command will be sent after the number of seconds entered in the Retry RESTART Interval (s) field described below. Note! The RESTART Retries settings will not work if you have selected to decompress the files in the Source tab, see the section below, Source Tab. Retry Restarts Interval (s) Enter the time interval, in seconds, you want to wait before initiating a restart in this field. This time interval will be applied for all restart retries. If a connection problem occurs, the actual time interval before the first attempt to send a RESTART command will be the time set in the Timeout field in the Advanced tab plus the time set in the Retry Interval (s) field. For the remaining attempts, the actual time interval will be the number seconds entered in this field. Max Restarts Enter the maximum number of restarts per file you want to allow. In case more than one attempt to send the RESTART command has been made, the number of used retries will be reset as soon as a file transfer is completed successfully. Source Tab The Source tab contains configurations related to the remote host, source directories and source files. The configuration available can be modified by creating and selecting a customized Collection Strategy. The following text describes the configuration options available when no customized Collection Strategy has been selected. Open The SFTP collection agent configuration - Source tab Setting Description Setting Description Collection Strategy If there are more than one collection strategy available in the system a Collection Strategy drop down list will also be visible containing the available strategies. For further information about the nature of the collection strategy, see Appendix 4 - Collection Strategies . File Information Settings Directory Absolute pathname of the source directory on the remote host, where the source files reside. The pathname might also be given relative to the home directory of the Username account. Include Subfolders Select this check box if you have subfolders in the source directory from which you want files to be collected. Note! Subfolders that are in the form of a link are not supported. If you select Enable Sort Order in the Sort Order tab, the sort order selected will also apply to subfolders. Filename Name of the source files on the remote host. Regular expressions according to Java syntax applies. For further information, see http://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html . Example To match all filenames beginning with TTFILES , type: TTFILES.* . Compression Compression type of the source files. Determines whether the agent will decompress the files before passing them on in the workflow or not. No Compression - the agent will not decompress the files. Gzip - the agent decompresses the files using gzip. Before Collection Settings Move to Temporary Directory If enabled, the source files will be moved to the automatically created subdirectory DR_TMP_DIR in the source directory, prior to collection. This option supports safe collection of a source file reusing the same name. Append Suffix to Filename Enter the suffix that you want added to the file name prior to collecting it. Warning! Before you execute your workflow, make sure that none of the file names in the collection directory include this suffix. Inactive Source Warning (h) If enabled, when the configured number of hours have passed without any file being available for collection, a warning message (event) will appear in the System Log and Event Area: The source has been idle for more than <n> hours, the last inserted file is <file>. After Collection Settings Move to If enabled, the source files will be moved from the source directory (or from the directory DR_TMP_DIR , if using Move to Temporary Directory ) after collection, to the directory specified in the Destination field. If Prefix or Suffix are set, the file will be renamed as well. Note! By default, if a file with the same filename already exists in the target directory, the file will be overwritten only if the contents of the file are the same. If the contents are not the same, the workflow will abort for SFTP Batch agent and log an error for SFTP batch-based real-time agent. If you want the workflow to overwrite the files unconditionally, select the Overwrite checkbox described in this table below. Destination Absolute pathname of the directory on the remote host into which the source files will be moved after the collection. This field is only available if Move to is enabled. Note! The Directory has to be located in the same file system as the collected files at the remote host. Also, absolute pathnames must be defined. Relative pathnames cannot be used. Prefix and Suffix Prefix and/or suffix that will be appended to the beginning and/or the end, respectively, of the source files after the collection. These fields are only available if Move to or Rename is enabled. Search and Replace To apply Search and Replace , select either Move to or Rename . Search : Enter the part of the filename that you want to replace. Replace : Enter the replacement text. Search and Replace operate on your entries in a way that is similar to the Unix sed utility. The identified filenames are modified and forwarded to the following agent in the workflow. This functionality enables you to perform advanced filename modifications, as well: Use regular expression in the Search entry to specify the part of the filename that you want to extract. Enter Replace with characters and metacharacters that define the pattern and content of the replacement text. Search and Replace Examples To rename the file file1.new to file1.old , use: Search : .new Replace : .old To rename the file JAN2011_file to file_DONE , use: Search : ([A-Z]*[0-9]*)_([a-z]*) Replace : $2_DONE Note that the search value divides the file name into two parts by using brackets. The replace value applies to the second part by using the place holder $2. Keep (days) Number of days to keep moved or renamed source files on the remote host after the collection. In order to delete the source files, the workflow has to be executed (scheduled or manually) again, after the configured number of days. Note! A date tag is added to the filename, determining when the file may be removed. This field is only available if Move to or Rename is selected. Overwrite If selected, the existing file with the same name will be overwritten unconditionally. This field is only available for Default Collection Strategy and if Move to or Rename is enabled. Rename If enabled, the source files will be renamed after the collection, remaining (or moved back from the directory DR_TMP_DIR , if using Move to Temporary Directory ) in the source directory from which they were collected. Note! You must avoid creating new file names still matching the criteria for what files to be collected by the agent, or else the files will be collected over and over again. Note! By default, if a file with the modified name already exists, this file will be overwritten only if the contents of the file are the same. If the contents are not the same, the workflow will abort for SFTP Batch agent and log an error for SFTP batch-based real-time agent. If you want the workflow to overwrite the files unconditionally, select the Overwrite checkbox described in this table above. Remove If enabled, the source files will be removed from the source directory (or from the directory DR_TMP_DIR , if using Move to Temporary Directory ), after the collection. Ignore If enabled, the source files will remain in the source directory after the collection. This option is not available if Move to Temporary Directory is enabled. UDR Type Settings Route FileReferenceUDR Select this check box if you want to forward the data to an SQL Loader agent. See the description of the SQL Loader agent in SQL Loader Agent for further information Advanced Tab The Advanced tab contains configurations related to more specific use of the SFTP Advanced service. Open The SFTP collection agent configuration - Advanced tab Setting Description Setting Description Advanced Settings Port The port number the SFTP service will use on the remote host. Timeout (s) The maximum time, in seconds, to wait for response from the server. 0 (zero) means to wait forever. Accept New Host Keys If selected, the agent overwrites the existing host key when the host is represented with a new key. The default behavior is to abort when the key mismatches. Warning! Selecting this option causes a security risk since the agent will accept new keys regardless if they might belong to another machine. Enable Key Re-Exchange Used to enable and disable automatic re-exchange of session keys during ongoing connections. This can be useful if you have long lived sessions since you may experience connection problems for some SFTP servers if one of the sides initiates a key re-exchange during the session. Additional Hosts Settings Additional Hosts List of additional host names or IP-addresses that may be used to establish a connection. These hosts are tried, in sequence from top to bottom, if the agents fail to connect to the remote host set in their Connection tabs. Use the Add, Edit, Remove, Move up and Move down buttons to configure the host list. Security Tab The Security tab contains configurations related to the Advanced Security Options for SFTP. The Configuration available can be modified by selecting the Advanced Security Option check box. If the advanced security is not enabled, the Cipher Mode will default to aes128-ctr and the HMac Type will default to hmac-sha2-256 . If advanced security is enabled but the combo box fields are left empty, the Cipher Mode will default to aes128-ctr and the HMac Type will default to hmac-sha2-256 . Open The SFTP collection agent configuration - Advanced tab The SFTP collection agent configuration - Security tab Note! Due to an upgrade of the Maverick library for MediationZone version 8.1.5.0, the default handling of the advanced security has changed. Users should take note of the behaviour change for the Advanced Security Option for the SFTP agents. The Advanced Security Option will be disabled by default. Users will have to enable it on their own accord from the Security Tab in the SFTP agents configuration. With Advanced Security Option disabled, Maverick will manage the connection between the SFTP agent and the server. Maverick will attempt to connect with the STRONG security level. Failing to do so, it will auto downgrade the security level to WEAK and attempt to connect, this behaviour will allow our agents to work well with backwards compatibility for servers with older instances of the Maverick library. Furthermore, having STRONG security level will result in a performance degradation. However, when a user manually enables the Advanced Security Option from the security tab, Maverick will instead assign the WEAK security level, which will not be as strict or resource intensive as the STRONG security level. For more information about security levels, you can refer to this page: https://www.jadaptive.com/managed-security-in-our-java-ssh-apis/ Setting Description Setting Description Cipher Mode Algorithms for the Block Cipher Modes supported by the SFTP agent. This allows the agent to determine which algorithm for the block cipher to be used when communicating with the SFTP servers. 3des-cbc 3des-ctr blowfish-cbc aes128-cbc aes192-cbc aes256-cbc aes128-ctr aes192-ctr aes256-ctr HMac Type Methods of encryption for Key Exchange. This allows the agent to determine the method of encryption to be used when the keys are exchanged between the SFTP servers and the SFTP agent. Note! All Sha-1 encryption (such as hmac-sha1, hmac-sha1-96 and etc) are considered weak in terms of security and it may be deprecated in the future. We do not recommend you use this encryption type but we advise caution if you choose to use it. hmac-sha1 hmac-sha1-96 hmac-sha1-etm@openssh.com hmac-md5 hmac-md5-96 hmac-md5-etm@openssh.com hmac-sha2-256 hmac-sha2-256-96 hmac-sha2-256-etm@openssh.com hmac-sha2-512 hmac-sha2-512-96 hmac-sha2-512-etm@openssh.com hmac-ripemd160 hmac-ripemd160-etm@openssh.com

---

# Document 1992: FTP Forwarding Agent MultiForwardingUDR Input - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/205000194
**Categories:** chunks_index.json

When the agent is set to use MultiForwardingUDR input, it accepts input of the UDR type MultiForwardingUDR declared in the package FNT. The declaration follows: internal MultiForwardingUDR { // Entire file content byte[] content; // Target filename and directory FNTUDR fntSpecification; }; The content of the MultiForwardingUDR will be stored at the path that you have set in the fntSpecification field. Use the APL functions fntAddString and fntAddDirDelimiter to set the value of this field. For further information about these functions, see FNTUDR Functions in APL Reference Guide . When the files are received they are written to temp files in the DR_TMP_DIR directory situated in the root output folder. The files are moved to their final destination when an end batch message is received. A runtime error will occur if any of the fields have a null value or if the path is invalid on the target file system. A UDR of the type MultiForwardingUDR which has a target filename that is not identical to its precedent is saved in a new output file. Note! After a target filename that is not identical to its precedent is saved, you cannot use the first filename again. For example: Saving filename B after saving filename A, prevents you from using A again. Instead, you should first save all the A filenames, then all the B filenames, and so forth. Non-existing directories will be created if the Create Non-Existing Directories check box on the Filename Template tab is checked. If not checked a runtime error will occur if a previously unknown directory exists in the FNTUDR of an incoming MultiForwardingUDR . Every configuration option referring to bytearray input is ignored when MultiForwardingUDR s are expected. For further information about Filename Template, see Workflow Template . Example - APL code to send MultiForwardingUDRs This example shows the APL code used in an Analysis agent connected to a forwarding agent expecting input of type MultiForwardingUDR s. import ultra.FNT; MultiForwardingUDR createMultiForwardingUDR (string dir, string file, bytearray fileContent){ //Create the FNTUDR FNTUDR fntudr = udrCreate(FNTUDR); fntAddString(fntudr, dir); fntAddDirDelimiter(fntudr);//Add a directory fntAddString(fntudr, file);//Add a file MultiForwardingUDR multiForwardingUDR = udrCreate(MultiForwardingUDR); multiForwardingUDR.fntSpecification = fntudr; multiForwardingUDR.content = fileContent; return multiForwardingUDR; } consume { bytearray file1Content; strToBA (file1Content, "file nr 1 content"); bytearray file2Content; strToBA (file2Content, "file nr 2 content"); //Send MultiForwardingUDRs to the forwarding agent udrRoute(createMultiForwardingUDR ("dir1", "file1", file1Content)); udrRoute(createMultiForwardingUDR ("dir2", "file2", file2Content)); } The Analysis agent mentioned previous in the example will send two MultiForwardingUDR s to the forwarding agent. Two files with different contents will be placed in two separate sub folders in the root directory. The Create Non-Existing Directories check box under the Filename Template tab in the configuration of the forwarding agent must be checked if the directories do not previously exist.

---

# Document 1993: Real-Time Disk_Deprecated Forwarding Agent Events - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/205655395/Real-Time+Disk_Deprecated+Forwarding+Agent+Events
**Categories:** chunks_index.json

Agent Message Events There are no agent message events for this agent. Debug Events There are no debug events for this agent.

---

# Document 1994: Connecting Using SSL - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204642362/Connecting+Using+SSL
**Categories:** chunks_index.json

If you require connections to the Python Connector agent from an exploration tool to be made using SSL, you need to provide an SSLContext when connecting, such as in the example below: import mzconnector import ssl ctx = ssl.create_default_context(cafile=<location of CA certificate>) ctx.load_cert_chain(certfile=<location of client certificate>, keyfile=<location of client private key>) agent = mzconnector.connect(<host>, <port>, ctx) Open Example of connecting to the Python Connector agent from a Jupyter Notebook using SSL Hint! If you use keytool to create a self-signed CA certificate, use the command line option -ext BC=ca:true for the certificate to be accepted by Python.

---

# Document 1995: SOX Monitoring - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/205849426
**Categories:** chunks_index.json

MediationZone has been used to facilitate compliance with Sarbanes-Oxley Act (SOX) with regards to the SOX Control Environment process. DigitalRoute customers have had their IT department as well as other departments use reports and GUIs for operational "SOX-CONTROL ENVIRONMENT PROCESS", including: Configuration and Change Management Separate Development, Test and Production Environments Segregation of duties Identification and Authentication Clearly defined roles & responsibilities ("Access Controller") Audit & Control With the counters and their reconciliation we assure that there are no records lost By monitoring the processing chain we assure that no files get lost, that all are processed The error counters where checked manually on at least a monthly basis by the RA department, in case of abnormalities an explanation was requested Daily Reports Error Correction System statistics (which error codes and the number of occurrences) Automated Checks Number of input files and records in a normal range Percentage of erroneous records in a normal range

---

# Document 1996: UI Builder Agent Input/Output Data and MIM - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/205002376/UI+Builder+Agent+Input+Output+Data+and+MIM
**Categories:** chunks_index.json

Input/Output Data The Input/Output data is the type of data an agent expects and delivers. The UI Builder agent receives and produces UI Cycle (UIBuilder) types. MIM For information about the MIM and a list of the general MIM parameters, see Administration and Management in Legacy Desktop . Publishes MIM Value Description MIM Value Description Discarded UI Builder UDRs This MIM parameter contains the number of discarded Cycle UDRs due to errors. Discarded UI Builder UDRs is of the long type and is defined as a global MIM context type. Error Response Sent This MIM parameter contains the error number sent back to the REST client. Error Response Sent is of the long type and is defined as a global MIM context type. HTTP Method Requests Received This MIM parameter contains a map of the HTTP methods that were received from the REST client request. HTTP Method Requests Received is of the map<string,long> type and is defined as a global MIM context type. Outstanding Requests This MIM parameter contains the number of outstanding requests that the agent is handling. The value of this MIM parameter is reset when the workflow is started. Outstanding Requests is of the long type and is defined as a global MIM context type. <Route> Queue Full Count This MIM parameter contains the amount of Cycle UDRs left in the queue in the route out of the UI Builder agent. <Route> Queue Full Count is of the long type and is defined as a global MIM context type <Route> Queue Size This MIM parameter contains the queue size of the Cycle UDRs in the route out of the UI Builder agent. <Route> Queue Size is of the long type and is defined as a global MIM context type <Route> UDRs This MIM parameter contains the amount of Cycle UDRs that were routed out of the UI Builder agent. <Route> UDRs is of the long type and is defined as a global MIM context type Requests Received This MIM parameter contains the amount of requests the UI Builder agent has received throughout its execution. Requests Received is of the long type and is defined as a global MIM context type Response Sent This MIM parameter contains the amount of responses the UI Builder agent has sent back to clients throughout its execution. Response Sent is of the long type and is defined as a global MIM context type Timeout Requests This MIM parameter contains the number of timeout errors that have occurred. Timeout Requests is of the long type and is defined as a global MIM context type. Accesses The agent does not access any MIM parameters.

---

# Document 1997: Firebase Agent Meta Information Model and Events - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204607477/Firebase+Agent+Meta+Information+Model+and+Events
**Categories:** chunks_index.json

Meta Information Model For information about the MIM and a list of the general MIM parameters, see Administration and Management in Legacy Desktop . This agent does not publish nor access any MIM parameters. Agent Message Events There are no message events for this agent. Debug Events There are no debug events for this agent.

---

# Document 1998: Database Collection Agent Input/Output Data and MIM - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204640411/Database+Collection+Agent+Input+Output+Data+and+MIM
**Categories:** chunks_index.json

Input/Output Data The input/output data is the type of data an agent expects and delivers. The agent produces the UDR types selected from the UDR Type list. MIM For information about the MIM and a list of general MIM parameters, see Administration and Management in Legacy Desktop . Publishes MIM Parameter Description Database This MIM parameter contains the name of he database the agent is collecting from. Database is of the string type and is defined as a global MIM context type. Table This MIM parameter contains the name of the working table the agent is collecting from. Table is of the string type and is defined as a global MIM context type. Source Filename This MIM parameter contains the name of the currently processed file, as defined at the source. Source Filename is of the string type and is defined as a header MIM context type. Accesses The agent does access MIM resources if MIM parameter assignments are set in the Parameter Editor in the Condition tab.

---

# Document 1999: Preparation of Data Hub - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204742158/Preparation+of+Data+Hub
**Categories:** chunks_index.json

In order to use Data Hub, you must first install Cloudera Manager and Cloudera Data Platform (CDP), which includes Impala and HDFS. Once the installation is complete, prepare the database by creating a staging directory and the destination tables. This chapter includes the following sections: Preparing the Database Installing Cloudera Manager and Cloudera Data Platform

---

# Document 2000: SQL Forwarding Agent in Batch Workflows - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204740737/SQL+Forwarding+Agent+in+Batch+Workflows
**Categories:** chunks_index.json

The SQL forwarding agent inserts UDR data into a database table according to your definitions of mapping between UDR fields and database table columns. The agent also enables you to populate database columns with MIM values either by using a plain SQL statement or by invoking a stored procedure that inserts the data. Note! Supported database commands depend on the JDBC driver of the database. The section contains the following subsections: SQL Forwarding Agent Configuration - Batch SQL Forwarding Agent Transaction Behavior, Input/Output Data and MIM - Batch SQL Forwarding Agent Events - Batch Handling Erroneous UDRs - Batch

---

# Document 2001: PCC Rules - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204677251
**Categories:** chunks_index.json

Search this document: PCC Rules from MediationZone is a Policy and Charging Control solution for 3GPP and non-3GPP environments. The uptake of mobile data services is not compensating for voice revenue in the developed markets, which makes it increasingly important to make data services more profitable for the service providers. Effective policy control is the key for service providers that are looking to manage the explosive growth in data traffic in a profitable way. Ensuring reasonable usage and allocating bandwidth based on a combination of subscriber and service criteria is essential when constantly updated offerings reflecting new services and technologies are required. PCC Rules is an extension of the Platform and delivers the capability to manage and retrieve policy rules based on 3GPP and non-3GPP definitions. The PCC Rules package will act as a rule repository, with which external systems can interact over different protocols, where the business logic will drive the selection of policy rules to be enforced by the appropriate network elements. The business logic is implemented as a workflow using the APL functions that are described in this document. The PCC Rules package comes pre-packaged with a 3GPP Gx Policy Rule Schema, according to [Gx Ref]. With PCC Rules you can create and apply different rules regarding Quality of Service and usage for different subscribers based on subscription type, location, current usage, etc. PCC Rules enable you to configure your Policy Control and Charging solution, either in a Desktop or by applying the APL functions in a batch workflow and/or using the REST HTTP Interface. Working with PCC Rules encompasses three different areas; Defining and updating rules - Includes creating, updating, and removing rules, which is done either in the Desktop, by using APL functions, or through the REST web interface. Managing updates of rules in runtime - Includes ensuring that when rules are updated in runtime, the latest rules will always be returned on rules lookup, which is done in a workflow using the APL functions described in this document. Looking up rules in runtime - Includes looking up rules based on requests from the network in runtime, which is done in a workflow using the APL functions described in this document. Prerequisites The reader of this document should be familiar with: The HTTP protocol, https://httpwg.org/specs/ Terms and Acronyms This section contains glossaries for all terms and acronyms used throughout the PCC and MediationZone documentation. Term/Acronym Definition Term/Acronym Definition PCC Policy and Charging Control PCRF Policy and Charging Rules Function 3GPP 3rd Generation Partnership Project Chapters The following chapters and sections are included: Data Model for PCC Rules Provisioning of PCC Rules Runtime APL Support for PCC Rules

---

# Document 2002: Appendix D - Compliance - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/205816829/Appendix+D+-+Compliance
**Categories:** chunks_index.json

Diameter MediationZone is Diameter server compliant. It contains a flexible implementation of the Diameter base protocol, enabling configuration of any Diameter application on top of MediationZone. MediationZone also has a Diameter client agent to manage Diameter applications when communicating with Diameter servers. SOX Compliance MediationZone has been used to facilitate compliance with Sarbanes-Oxley Act (SOX) with regards to the SOX Control Environment process. See SOX Monitoring for more details. Web Services MediationZone has support for any communication over the Web Services protocol. Providing the same flexibly as for Diameter, MediationZone enables deployment of client as well as Web Services interfaces through configuration. Web services definition languages files (WSDL) compliant with WS-I can be imported into MediationZone, which automatically generates corresponding exchange UDRs that are subsequently accessible in a workflow. This support enables MediationZone to provide an EAI/SOA smooth integration path for any back-office or legacy protocol or processing semantics. MediationZone natively supports the Web Services functionality as described below: WS-I Basic Profile 1.1 WSDL 1.1 XML 1.0 SOAP 1.1 over HTTP 1.1 Transport Level Security (HTTPS over SSL) WS-Security 1.1 is partly supported through signature and encryption

---

# Document 2003: Runtime APL Support for PCC Rules - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204645827/Runtime+APL+Support+for+PCC+Rules
**Categories:** chunks_index.json

In runtime you determine how you want the rules to be used in the business logic, i e how you want to perform lookup of rules from a workflow by using APL. This chapter contains descriptions of the APL functions that are used for looking up the rules stored in the rules database during provisioning, and includes the following sections: APL - PCC Mapper Support APL - PCC Runtime Support

---

# Document 2004: Ultra Reference Guide - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204612702/Ultra+Reference+Guide
**Categories:** chunks_index.json

Search this document: This section describes the Ultra Format Management utilities of the Platform and includes a detailed description of the Ultra Format Definition Language and how to create format definitions in the language syntax. Chapters The following chapters are included: Format Management Overview Avro Support Ultra Format Configuration UDR File Editor UDR Views Ultra Format Converter Introduction to the Ultra Format Definition Language External - Sequential Format External - Ericsson IOG/IN Records External - ASN.1 Formats Internal Formats In-maps Decoders Out-maps Encoders A Constructed Decoder Example A Sequential Format Example An ASN.1 Format Example XML Schema Support Google Protocol Buffer Support

---

# Document 2005: systemimport - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204678067/systemimport
**Categories:** chunks_index.json

usage: systemimport [ -s|-skipexisting ] [ -pp|-preservepermissions ] [ -nameconflict re|an|sk|ask ] [ -keyconflict re|an|sk|ask ] [ -namekeyconflict rn|rk|an|sk|ask ] [ -he|-holdexecution [ r|sr|sir|wr ] ] [ -nr|-norollback ] [ -no|-newowner] [ -select <xml-selection file> [ -dryrun ] [ -onerror < ABORT | ASK | IGNORE > ] ] [ -m|-message ] [ -u|-upgrade ] [ -eu|-enableusers ] <export file|directory> [password] This command imports a ZIP file or a directory. If an import entry is in conflict with an entry that already exists in the current system, the entry will not be imported. An example of such a conflict might be an identical entry name, but a different ID. A workflow group that is scheduled to start while an import activity is happening, will not start until the import is complete. [-s|-skipexisting] If you choose to set the skipexisting parameter, the imported data will not overwrite existing configurations that have the same key, name, type, and folder. This means that repeatedly importing a configuration, does not overwrite the data. [-pp|-preservepermissions] When user permissions are modified, set the preservepermissions parameter to prevent user permissions in the current system from being updated while importing a configuration. [-nameconflict re | an | sk | ask] This parameter enables you to identify an imported configuration with a name that is identical to the name of a configuration that already exists in your system. Using this parameter requires that you specify what you want to do with the imported configuration: re (REplace): Overwrite the current configuration with the imported one. an (Add New): Add the imported configuration to your system. To resolve the name conflict, the new configuration's name is extended with _1 at the end. Note! A name that already ends with _n is modified at the end to _n+1 . sk (SKip): Ignore the conflicting imported configuration. ask : Prompt when a conflict is detected. Note! If you do not set this parameter, the conflicting configuration is skipped and ignored. [-keyconflict re | an | sk | ask] This parameter enables you to identify an imported configuration with a key that is identical to the key of a configuration that already exists in your system. Using this parameter requires that you specify what you want to do with the imported configuration. For information about the keyconflict options, see [-nameconflict re | an | sk | ask]. Example - [-keyconflict re | an | sk | ask] The command mzsh mzadmin/dr systemimport -keyconflict ask import.zip is applied with the ask option and detects a key conflict. ... [Configuration/Event Notification] - Importing Default.extraKey2... Event Notification configuration with the same key but with a different type, folder or name already exist! Existing name is: Default.existingConfiguration Imported name is: Default.importedConfiguration What do you want to do? 1) Replace existing configuration 2) Import as a new configuration 3) Skip > 1 Use this alternative for all configurations of this type? 1) Yes 2) No > 2 Note! If you do not set this parameter, the conflicting configuration is skipped and ignored. [-namekeyconflict rn | rk | an | sk | ask] This parameter enables you to identify an imported configuration with a name as well as a key that are identical to a name and a key of two different configurations that already exist in your system. Using this parameter requires that you specify what you want to do with the imported configuration: rn (Replace Name conflict): Replace the configuration that name conflicts with the imported configuration. rk (Replace Key conflict): Replace the configuration that key conflicts with the imported configuration. an (Add New): Add the imported configuration to your system. sk (SKip): Ignore the conflicting imported configuration. ask : Prompt a message when a conflict is detected. Note! If you do not set this parameter, the conflicting configuration is skipped and ignored. [ -he|-holdexecution [ r | sr | sir | wr ] ] Example - Using the holdexecution parameter $ systemimport -s -he r export.zip $ systemimport -s -he sr export.zip $ systemimport -s -he sir export.zip $ systemimport -s -he wr export.zip Use the holdexecution parameter to prevent scheduled workflow groups from being started while importing configurations. If a workflow or a workflow group does not stop within 5 minutes (300 seconds) when applying systemimport with either one of the following holdexecution parameters: sr , sir , and wr , a timeout will occur. You can change the timeout value by setting the Platform property mz.import.suppress.timeout . When import is complete and a workflow group is still running, systemimport -holdexecution [ r | sr | sir | wr ] awaits the current running workflow member to come to a stop, and then restarts the whole group instead of continuing the execution of the member that follows. If you do not specify any of the r , sr , sir or wr options: A batch workflow or a workflow group will remain suppressed until all the workflows finish executing. Then, the workflow or the members of the workflow group, become idle. A real-time workflow group will return to the running state. systemimport -holdexecution generates events. To retrieve the events data, configure the Event Notification Editor to transfer it according to your preferences. For information about the Suppressed Event event type, see 4.3.7 Suppressed Event in the Desktop user's guide. holdexecution Parameters Select the action that should resolve held executions: r (restart): When the import activity is done, and a workflow group is partly executed, specifying this option will restart that workflow group. Workflow groups that are fully executed, will not be restarted. A workflow that is started manually, will be restarted if it has been stopped. sr (stop and restart): Stops the workflows or workflow groups that are still running after an import is complete, waits for them to come to a stop or finish processing a batch, and then restarts synchronously all the workflow groups and all the manually started workflows that had not executed completely within the timeout boundaries. Note! A workflow that becomes Unreachable after a system import has begun, will be restarted only when and if the contact with the Execution Context that it runs on, is regained while still importing. If a workflow is unreachable when system import is started, the import is aborted and the following error message is generated: Abort Import: At least one wf that is Unreachable . For further information about the Unreachable state, see 3.1.11 Workflow Monitor in the Desktop User's Guide . sir (stop immediately and restart): Stops the workflows or workflow groups that are still running after an import is complete, even in the middle of processing a batch, and synchronously restarts all the workflow groups and all the manually started workflows that had not executed completely within the timeout boundaries. Note! An Unreachable workflow is restarted once contact with the Execution Context that it runs on, is regained. For further information about the Unreachable state, see 3.1.11 Workflow Monitor in the Desktop User's Guide . wr (wait for completion and restart): After an import is complete, synchronously restarts all the workflow groups and all the manually started workflows that had not executed completely within the timeout boundaries. Note! Any workflow that runs past the timeout limit is restarted as soon as it completes execution. For further information about holding an execution, see the description of the Suppressed workflow group state in the Desktop User's Guide . [-nr|-norollback] When you use systemimport, a file that contains rollback information will be created. This file contains data about configuration changes during the system import, and is saved in the directory where you apply the command. You use the rollback file to undo a system import and return to the configuration that you had before the system import. Note! Use the importrollback command only to revert the systemimport command and not for the purpose of a system rollback. For further information see importrollback . To suppress the creation of the rollback file, provide either a nr or a norollback option. [-no|-newowner] Change ownership of the configuration on import. Must match an user already defined in the 6.1 Access Controller . [-select <xml-selection file> [ -dryrun ] [ -onError < ABORT | ASK | IGNORE >] The -select <xml-selection file> parameter enables you to: Provide systemimport with an XML file that specifies your selection of configurations and workflow tables. Use [ -dryrun ] to test data compatibility prior to actually importing Use [ -onError < ABORT | ASK | IGNORE > ] to manage an occurrence of an error XML Selection File This selection information that you find in the XML selection file corresponds to the selection information that you specify on the System Import tool view, in the Desktop user interface. The XML selection file consists of two main tags: <configurations> : contains your configuration import selections <workflows> : contains your workflow tables import selections <configurations> Select configurations from the <Export file|directory> that systemimport imports. Use the resolveDependencies attribute to either include (true), or ignore (false), dependent configurations. See the following example. Example - The resolveDependencies attribute <import> <configurations> <!-- Ignoring dependencies of the Default.x configuration--> <configuration name="Default.x" resolveDependencies="false"/> <!-- Including dependencies of the Default.y configuration--> <configuration name="Default.y" resolveDependencies="true"/> <!-- Ignoring dependencies of the Default.z configuration--> <!-- Note: Equal to selection of Default.x above --> <configuration name="Admin.C07E02_DEMO_BWF"/> <!-- Ignoring dependencies of configurations within the folder --> <configuration foldername="systemunits"/> <!-- Including dependencies of all the configurations in the folder --> <configuration foldername="billing" resolveDependencies="true"/> </configurations> </import> To import all the configurations that are included in a specific folder, include the following text in the XML file: <configuration foldername="myFolder"/> Note! If you specify configuration selections in the XML file that do not exist in the Export file, a warning is generated. <workflows> This XML tag enables you to use systemimport [-select <xml-selection file>] to import both workflow configurations and their CSV file in one action. Use this tag to associate workflow tables with CSV data files. Note! Set the keepOld attribute to true in order to prevent removal of workflow table data which has no match in the export file. Use false to overwrite the data. This parameter is only used during import, and has no effect during export. The onError attribute can either be set from the XML selection file, or from the systemimport in-line command. If set from both, the XML selection file attribute is the value that applies. For further information about the values that you can choose from, see onError. This parameter is only used during import, and has no effect during export. Set the encryptPassword attribute to the workflow configuration password if the workflow configuration is password protected. Example - The XML selection tags <import> <configurations> <configuration name="Common.DB_PROFILE"/> <configuration name="Common.APL_PROFILE" resolveDependencies="true"/> <configuration foldername="myFolder"/> </configurations> <workflows > <workflow name="Mobile.FTP_workflow" wfTable="/home/user1/FTP_workflows.csv"/> <workflow name="Mobile.SFTP2_workflow" wfTable="/home/user1/SFTP2_workflows.csv" resolveDependencies="true"/> <workflow name="Mobile.GGSN1_workflow" wfTable="/home/user1/GGSN1_workflows.csv" resolveDependencies="true" onError="ask"/> <workflow name="Mobile.GGSN3_workflow" wfTable="/home/user1/GGSN3_workflows.csv" resolveDependencies="true" onError="ignore"/> <workflow name="Mobile.GGSN4_workflow" wfTable="/home/user1/GGSN4_workflows.csv" resolveDependencies="true" onError="abort"/> <workflow name="Mobile.GGSN5_workflow" wfTable="/home/user1/GGSN5_workflows.csv" resolveDependencies="true" keepOld="false" encryptPassword="password" onError="ask"/> </workflows> </import> [-dryrun] Prior to importing, use systemimport with the dryrun switch to verify that the CSV data, such as number of columns or names, matches the contents of the workflow table. If a mismatch is detected a report will be generated. [-onError] If the onError attribute is not specified in the XML selection file, the value that you set it to in systemimport, is the value that applies. Otherwise, the attribute value applies. Set [-onError] to any of the following values: ask : to generate an interactive message ignore : to do nothing abort : to abort the command and stop a current configuration import [-m|-message] If you want to add a comment when making a systemimport, the -m or -message option can be used as in the following example: Example - message mzsh <username>/<password> systemimport -m "My Import" /home/Directory/<file to import>.zip "My Import" will be the commented. The comment will replace the default information saved when making a system import, and will both be included in the System Log message that is generated, as well as visible when selecting to view history in any of the configurations in the imported data. [-u|-upgrade] When exports have been made in a previous version of MediationZone, they may have to be upgraded. In this case you can use the -u or -upgrade option as in the following example: Example - upgrade $ mzsh <username>/<password> systemimport -u <file to import>.zip The configurations will then be upgraded. [ -eu|-enableusers ] If you want imported users to be active after you run the import, use the -eu or -enableusers option as shown in the following example: Example - enableusers $ mzsh <username>/<password> systemimport -eu <file to import>.zip By default users are imported as inactive and must be activated manually via the Access Controller. This option is only available when you run an import as a super user. If you use this option as another user, users will be skipped during the import. <export file|directory> Specify the path to the directory or ZIP file that contains the configurations you want to import. [password] To import encrypted configurations, provide a password. Return Codes Listed below are the different return codes for the systemimport command: Code Description Code Description 0 Will be returned if the command is successful. 1 Will be returned if the argument count is incorrect or argument(s) are invalid. 2 Will be returned if the command was unable to find an export (file|directory) at the supplied path. 3 Will be returned if the import could not be started due to locked import. 4 Will be returned if any errors were reported during the import. 5 Will be returned if the XML file did not contain any configurations or workflows to import. 8 Will be returned if the XML file did not contain any workflows to use in dry run. 10 Will be returned if the import results in invalid workflows due to compilation errors. 14 Will be returned if there are configurations not imported 20 Will be returned if the value for a supplied option or option is missing. 100 Will be returned if an error occurs while parsing the selection file 101 Will be returned if an error occurs while parsing a node in the selection XML file. 102 Will be returned if an error occurs while getting the attribute from a configuration tab, or if expected wfTable attribute in tag with the supplied name is missing. 103 Will be returned if the import was unable to parse the value for a booolean XML attribute. 104 Will be returned if an error occurs while parsing dependencies for a configuration. 300 Will be returned if an OutOfMemoryError occurs during import. Additional information from the "critical error log" will be included, this is further described in 2.12 Out of Memory Info in System Log in the System Administrator's Guide.

---

# Document 2006: Diameter Stack Agent Configuration - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204640836
**Categories:** chunks_index.json

To open the Diameter Stack agent configuration, click Build  New Configuration . Select Workflow from the Configurations dialog. When prompted to Select workflow type , click Realtime  OK . Click Add agent . In the Agent Selection dialog click the Collection tab and select Diameter Stack . Double-click the agent icon or right-click the icon and select Edit agent , to display the Agent Configuration dialog. General Tab The General tab contains general diameter settings that are needed for the configuration of the agen t. Open The Diameter Stack agent - General tab Setting Description Setting Description Application Profile Click Browse to select a predefined application profile. The profile contains details about advertised applications, as well as supported AVPs and command codes. For further information, see Diameter Application Profile . Routing Profile Click Browse to select a predefined routing profile. The Profile contains details about supported hosts, listening ports, applications, and realms. For further information, see Diameter Routing Profile . Server Protocol Select the transport protocol for incoming connections. SCTP must be installed on every EC host that uses the SCTP protocol. For installation instructions, see your operating system documentation. Diameter Identity Select Hostname to manually enter the hostname (case sensitive) of this Diameter agent. In case the Origin-Host AVP has been left unconfigured, the Hostname value will be applied whenever a Diameter message is transmitted from this agent. If SCTP is configured as server protocol, all IP addresses that are resolved from the Diameter Identity will be used as SCTP endpoints through multihoming. Use DNS Hostname If enabled, the Diameter Identity of the local agent is automatically set by looking up the DNS hostname that is associated with the local IP address. If there is more than one network interface, the agent aborts on startup. Realm Enter the Diameter realm (case sensitive) for this specific host. In case the Origin-Realm AVP has been left unconfigured, the Realm value will be applied in messages transmitted from this agent. Listening Port Enter the port through which the Diameter agent should "listen" for transport connections input. Primary Host When using SCTP, optionally enter the IP address of the network interface that will be used to establish a transport connection. If left unconfigured, any IP address that can be resolved from the Hostname will be selected. Diameter Too Busy Tab The Diameter Stack receives, decodes, and forwards UDRs asynchronously. An internal queue in the workflow engine acts as a backlog for the workflow. When a load of messages gets too heavy to process, you can either use the configurations in the Diameter Too Busy tab, in order to respond to callers, or configure the Supervision Service with actions to take. Note! The configurations described in this section determine if and how the Diameter agent will reject incoming requests or UDRs to the workflow. For information regarding how to limit the number of requests and UDRs sent out from the workflow, see Diameter Routing Profile . The Diameter Too Busy tab enables you to configure the agent with instructions to respond to callers. Open The Diameter Stack agent - Diameter Too Busy tab Setting Description Setting Description Enable Diameter Too Busy Check to enable the agent to automatically respond with DIAMETER_TOO_BUSY when the workflow is overloaded. Maximum Workflow Queue Size(%) Enter the highest limit of the internal queue size. When this limit is reached the agent sends "Too Busy" responses. This setting is measured in percent % of the total Workflow Queue Size that is configured in Workflow Properties. Note! You can change this value during processing from the Workflow Monitor. Throughput Threshold (UDRs/s) The Throughput Threshold is also a congestion control setting. With it, you can make the agent reject some of the incoming UDRs. When a load of requests per second exceeds the value of this property, some of the requests will be rejected and the process sending the request will get a Diameter Too Busy response. Note! You can change this value during processing from the Workflow Monitor. Time Between Log Entries(s) This property tells the agent how often it should write messages to the system log when it is in congestion prevention mode. Time Between Log Entries is an integer value between 1 and 3600 seconds. Supervision Service If you want to reject certain messages when the load gets too heavy, you can use the Supervision Service. With this service, you can select one of the following overload protection strategies: Diameter_ACInterimRequest - For rejecting requests of type AccountingInterim-Request Diameter_CCInitialRequest - For rejecting Credit-Control Initial requests Diameter_CCTerminationRequest - For rejecting Credit-Control Termination requests Diameter_ACStartRequest - For rejecting requests of type AccountingStart-Request Diameter_ReAuthRequest - For rejecting ReAuthentication requests Diameter_AbortSessionRequest - For rejecting requests of type AbortSession Diameter:ACStopRequest - For rejecting requests of type AccountingStop-Request Diameter_CCUpdateRequest - For rejecting Credit-Control Update requests Diameter_CCEventRequest - For rejecting requests of type Credit-Control-EventRequest For each strategy, you can select if you want to reject 25, 50, or 100 % of the requests. See Workflow Properties for further information. Advanced Tab This tab includes more advanced settings for the Diameter Stack agent. The Diameter Stack agent - Advanced tab Setting Description Setting Description Diameter Answer Timeout (ms) Enter the period of time (in milliseconds) before a non-responded request is handled as an error, i.e. an Error Answer Message is returned. See the section, Special Error Handling, in The Diameter Base Protocol for further information. The timeout is checked periodically according to the Timeout Resolution (ms) setting. The time set in this field may be added to the time period entered for Diameter Answer Timeout (ms) . Consequently, setting the timeout interval to a very small value will not be very useful, since the delay in detecting the timeouts will have a quite large effect on the actual time interval before detecting timeouts. Examples Setting Diameter Answer Timeout (ms) to: 50 will result in timeouts being detected within 50 - 149 ms 300 will result in timeouts being detected within 300 - 399 ms 750 will result in timeouts being detected within 750 - 849 ms Timeout Resolution (ms) Enter the interval at which the Answer Timeout should be checked. Enable Debug Events Select this checkbox to enable debug mode. Useful for testing purposes. Enable Runtime Validation Select this checkbox to enable runtime validation of the Diameter messages against the command and AVP definitions in the Diameter Application profile. The following is validated in incoming and outgoing messages: Occurrences and position of AVPs The setting of AVP flags i.e. M-bit and P-bit The setting of command flags i.e. Proxiable (p-bit) and Error (e-bit) When runtime validation is selected, incoming messages that fail the validation are rejected by the Diameter Stack agent, and the appropriate result code is applied in an error answer message. Do Not Create Outgoing Connections Select this checkbox to prevent the agent from actively trying to connect or reconnect if a connection is lost, with peers. When this option is checked, the agent is said to run in passive mode. Bind On All Interfaces Select this checkbox to allow the agent to bind on interfaces other than just the Diameter identity. For example, in a Kubernetes solution. Keystore Path The path to a keystore file that contains the private key of the Diameter Stack, and any certificates needed to verify peers. This parameter is only applicable if TLS security is used for one or more of the peers in the routing profile. The path is relative to the Execution Context on which the Diameter Stack runs. Keystore Password The path to a keystore file that contains the private key of the Diameter Stack, and any certificates needed to verify peers. This parameter is only applicable if TLS security is used for one or more of the peers in the routing profile. The path is relative to the Execution Context on which the Diameter Stack runs. Security Profile Click Browse to select a security profile with certificate and configuration to use, if you prefer to use a secure connection. Refer to Security Profile for more information. Watchdog Enter the watchdog timer interval TWINIT. For information about TWINIT, see RFC 3539. Maximum Message Size (B) Enter the maximum number of bytes allowed in a single Diameter message. Socket Write Timeout (ms) Enter the timeout value for writing to a socket. If the write operation is blocked for longer than the timeout period, the peer will be disconnected. Write blocks may occur if the receiving peer is overloaded. Connect Timeout (ms) Enter the timeout value for peer connection attempts. This setting is only applicable to TCP connections. Connect Interval (ms) Enter the minimum time interval between connection attempts when routing messages from a workflow and the peer connection is not established. An interval timer is started at the first connection attempt; subsequent connection attempts to the same peer are then suppressed until the timer has expired. When realm-based routing is used, the connect interval is applied only if all configured peers in the realm are down. Error Route When there is an error in an incoming message, the Diameter Stack agent creates a DiameterErrorUDR that can be routed to the workflow. Use Error Route to select the outgoing route for UDRs of this type. You can disable the routing of these UDRs by selecting (None) , which is the default value. For information about DiameterErrorUDR , see the section, DiameterErrorUDR, in The Diameter Base Protocol . Connection Monitoring Route If you want to send connection-related messages and ConnectionLost UDRs to the workflow, use the Connection Monitoring Route option to select the outgoing route for UDRs of this type. You can disable the routing of these UDRs by selecting (None) , which is the default value. The UDR types that are routed are the following: Capabilities_Exchange_Request (Diameter.Base) Capabilities_Exchange_Answer (Diameter.Base) Device_Watchdog_Request (Diameter.Base) Device_Watchdog_Response (Diameter.Base) ConnectionLost (Diameter) For information on the ConnectionLost UDR, see The Diameter Base Protocol . Use Waiting Messages Limit When the Diameter Stack agent acts as a client and cannot send a message to a target peer, the message is kept in a queue until it is sent or a timeout occurs. In case of a timeout, a DiameterErrorUDR is routed back to the workflow. Select this check box to limit the number of messages that can be stored in the message queue, and enter the number of messages that can be queued. When the limit is exceeded, the first message in the queue is removed and handled as if a timeout has occurred. The default value is 500. Peer Profile Mappings Click Configure to set specific mappings for peers that you do not want to use the default Diameter Application profile, which is set in the General tab. To configure the mappings, you enter the Peer Identity and the Diameter Application profile that you want the specified peer to use. The peer identity can be a regular expression. The number of mappings configured is shown on the Configure button. For each peer that connects, the specific Diameter Application profile used is chosen by first checking each Peer Profile Mapping as ordered in the Peer Profile Mappings list. If the peer identity matches the configured name or pattern, this profile is chosen. If no peer profile mapping matches, the default Diameter Application profile is used. SCTP Options Tab This tab includes settings for SCTP heartbeats. These settings can be used to turn off SCTP heartbeats on the Diameter Stack when running the EC on a Linux X86-84 or amd64. Open The Diameter Stack agent - SCTP Options tab Disable Heartbeat Sending Setting Description Setting Description For Outgoing Associations Select this checkbox if you want to disable heartbeat sending for outgoing associations. For Incoming Associations Select this checkbox if you want to disable heartbeat sending for incoming associations.

---

# Document 2007: Details - Operating System - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204671146/Details+-+Operating+System
**Categories:** chunks_index.json

The Operation System tab contains information as listed below. OS Attributes Tab Open Operating System with the OS Attributes tab displayed Tab Description Tab Description OS Attributes For detailed information, see Oracle's Package java.lang.management Description : https://docs.oracle.com/javase/8/docs/api/java/lang/management/package-summary.html Environment Variables Tab Open Operating System with Environment Variables tab Tab Description Tab Description Environment Variables Displays the list of environment variables applicable to your system. Threads Tab Open Operating System with the Threads tab displayed Tab Description Tab Description Threads Columns and general window can be resized. For detailed information, see Oracle's Package java.lang.management Description : https://docs.oracle.com/javase/8/docs/api/java/lang/management/package-summary.html

---

# Document 2008: Functions - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204612223/Functions
**Categories:** chunks_index.json

The following functions may be used in the aggregation APL code. All functions described in the Analysis Agent section in the Desktop user's guide are also available. The following functions for aggregation APL code described here are: sessionMirror - Couchbase Storage Only This function retrieves a list of sessions from the storage specified by the Mirror Profile. list<session> sessionMirrors ( session) Parameter Description session This is a built-in variable. For information about session , see Variables . Returns A list of mirror sessions. Note! The return value always contains one element. The use of the list data type serves to support future requirements. Example - Using sessionMirror sessionInit { session.anum = input.anum; session.bnum = input.bnum; session.total_duration = 0; } consume { session.total_duration = session.total_duration + input.duration; sessionTimeout(session, 3600); //Get mirror sessions list<any> allMirrorSessions = sessionMirrors(session); // Do not use sessionMirrorLastErrorCode // in asynchronous mode. if (0 == sessionMirrorLastErrorCode()) { Default.session.session aggregateTotal = udrClone(session); aggregateTotal.total_duration = session.total_duration + getTotalDuration(allMirrorSessions); debug(aggregateTotal.total_duration); } else { logError("sessionMirrorLastErrorCode:" + sessionMirrorLastErrorCode() + "sessionMirrorLastErrorMessage:" +sessionMirrorLastErrorMessage()); } } timeout{ list<any> allMirrorSessions = sessionMirrors(session); // Do not use sessionMirrorLastErrorCode // in asynchronous mode. if (0 == sessionMirrorLastErrorCode()) { Default.session.session aggregateTotal = udrClone(session); aggregateTotal.total_duration = session.total_duration + getTotalDuration(allMirrorSessions); debug(aggregateTotal); } else { logError("sessionMirrorLastErrorCode:" + sessionMirrorLastErrorCode() + "sessionMirrorLastErrorMessage:" +sessionMirrorLastErrorMessage()); } } int getTotalDuration( list<any> allSessions) { int total_duration = 0; if (1 == listSize(allSessions)) { Default.session.session s = (Default.session.session)listGet(allSessions, 0); total_duration = s.total_duration; } return total_duration; sessionMirrorLastErrorCode - Couchbase Storage Only This function returns the error code from the last call to sessionMirrors function. Note! You should only use sessionMirrorLastErrorCode when asynchronous mode is disabled, which is the default setting. In asynchronous mode, errors are handled by the Aggregation agent and are not available in APL. For more information about using asynchronous mode, see Aggregation Agent in the Desktop user's guide. Since sessionMirrors does not return error codes and generally does not cause runtime errors, sessionMirrorLastErrorCode or sessionMirrorLastErrorMessage should be called after each operation to validate success. int sessionMirrorLastErrorCode () Parameter Description Returns 0 - All operations were successful. 1 - An operation resulted in an unknown error. 4 - A temporary failure occurred. 5 - An operation timed out. sessionMirrorLastErrorMessage - Couchbase Storage Only This function returns the error message from the last call to sessionMirrors function. Note! You should only use sessionMirrorLastErrorMessage when asynchronous mode is disabled, which is the default setting. In asynchronous mode, errors are handled by the Aggregation agent and are not available in APL. For more information about using asynchronous mode, see Aggregation Agent in the Desktop user's guide. Since sessionMirrors does not return error codes and generally does not cause runtime errors, sessionMirrorLastErrorCode or sessionMirrorLastErrorMessage should be called after each operation to validate success. string sessionMirrorLastErrorMessage() Parameter Description Returns An error message, or null if no error has occurred Example - Using sessionMirrorLastErrorMessage sessionInit { list<any> allMirrorSessions = sessionMirrors(session); if (0 == sessionMirrorLastErrorCode()) { //No error } else { logError("sessionMirrorLastErrorCode:" + sessionMirrorLastErrorCode() + "sessionMirrorLastErrorMessage:" +sessionMirrorLastErrorMessage()); } } sessionRemove - Batch and Real-Time Removes the current session. This function must be called when a session is considered to be closed and a new UDR has been emitted, or when a session is considered to be closed due to an expired timeout. sessionRemove(session) Parameter Description session This is a built-in variable. For information about session , see Variables . sessionTimeout - Batch and Real-Time Sets a time limit to call the timeout function block or, if not available, the consume block, within the number of seconds specified, or at an exact time. Only one timeout per session may exist, thus if a subsequent call to this function is made, the old timeout is cancelled. Timeouts are not always called at the exact time stated. See Aggregation Agent in the Desktop user's guide for details on when the time limit is actually invoked. The timeout for a session is cleared each time the consume or timeout function blocks are called. void sessionTimeout(DRUDR session, long timeOutSeconds) Parameter Description session This is a built-in variable. For information about session , see Variables . timeoutSeconds Number of seconds. If set to 0 (zero) or? null , the timeout is removed. This is? useful if it is desired to reset the timeout to the default? timeout. If set to a negative value, the session will be outdated sessionTimeout(session, date timeoutDate ) Parameter Description session This is a built-in variable. For information about session , see Variables . timeoutDate An exact date. If set to null , the timeout is removed. This is useful if it is desired to reset the timeout to the default timeout. If set to a passed date, the session will be outdated.

---

# Document 2009: Configuration Browser - MediationZone Documentation 9.3 - InfoZone

**Source:** ratanon/mz93-documentation
**URL:** https://infozone.atlassian.net/wiki/spaces/MD93/pages/204610515
**Categories:** chunks_index.json



---
**End of Part 85** - Continue to next part for more content.
